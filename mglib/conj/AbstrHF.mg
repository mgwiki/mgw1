(** $T hf **)
(** $I sig/PfgPreambleSep2020.mgs **)

Section AbstrHF.

Variable ain asubq adisjoint:set -> set -> prop.
Variable a0 a1 a2 a3 a4:set.
Variable apow asing:set -> set.
Variable aun aint asm:set -> set -> set.
Variable aal2 aal3 aal4 aal5 aal6 aal7 aex2 aex3 aex4 aex5 aex6:set -> prop.

Theorem conj_AbstrHF_TMPjX7hFaPjbcqznm5PuccMDMpyvDBCSQ2z: (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> ain a1 a3 -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 (asm X24 (asing X25)) -> aal5 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (~ ain a3 a2) -> (~ (a0 = a2)) -> ain a1 (asm (apow a2) (apow (asing a1))) -> (~ ain (asing a2) a1) -> (~ ain (asing a1) (asing a2)) -> asubq a1 (asm a3 (asing a1)) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ ain (asing (asing a1)) a2) -> (~ (asing (asing a1) = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ ain a3 (asing a2)) -> (~ ain (apow a2) (asing a2)) -> (~ (a2 = asing a2)) -> (~ asubq (apow a2) (asing a2)) -> (~ ain (asing a2) a3) -> (~ ain (apow a2) a3) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> asubq a3 (apow a2) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain a0 (aun a3 (asing (asing a2))) -> ain a3 (asm a4 (asing a1)) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun a4 (asing (apow a2))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> (asm a3 (asing a2) = a2) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> (asm (apow a2) (asing (asing a1)) = a3) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (asm a4 (asing a3)) a3 -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq a2 (apow (asm a3 (asing a1))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> asubq (asm a3 (asing a1)) a4 -> asubq (asm (apow a2) (apow (asing a1))) a4 -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal2 (asing a3)) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal3 (asm a4 (asing a2)) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aex2 (asm a3 (asing a1)) -> aex2 (aun a1 (asing a3)) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex3 (asm a4 (asing a2)) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex3 (asm a4 (asing a3)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2).
admit.
Qed.

Theorem conj_AbstrHF_TMEswXexHDuzYejc2UdX6zDb8tDKopGLZWh: (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (~ ain a2 a1) -> (~ (a0 = a1)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (~ ain (asing a1) a0) -> (~ (a0 = asing a1)) -> (~ ain a1 (asing a2)) -> (~ (a0 = asm (apow a2) a2)) -> (~ ain a2 (apow (asing a1))) -> ain a2 (asm (apow a2) a2) -> (~ ain (asm a3 (asing a1)) a2) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ (a2 = asm a3 (asing a1))) -> (~ (asing a2 = asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing (asing a1)) a4) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> ain a1 (aun a4 (asing (apow a2))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> asubq a3 (aun a3 (asing (apow a2))) -> asubq a4 (aun (asing (asing a1)) a4) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (asm a3 (asing a1)) a4 -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal2 (asing a2)) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (~ aal4 a3) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> ain a1 (asm a4 (apow (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMV1dJsWuxDRQx7yhnNq4shrepxnCm5Mfqw: (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> ain a0 a3 -> ain a2 a4 -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> ain a0 (asm (apow a2) (asing a1)) -> (~ (a0 = asm a3 (asing a1))) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a3 (apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ ain (asing a2) a3) -> (~ ain (asing a2) (asm a3 (asing a1))) -> (~ (asing a2 = asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> ain a0 (aun (asing a1) (apow (asing a2))) -> ain a3 (asing a3) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> asubq a4 (aun a4 (asing (apow a2))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq (asm a4 (asing a3)) a3 -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal3 (asm (apow a2) a2)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (apow a2)) -> aal4 (aun a3 (asing (asing a2))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aal5 (aun (asing (asing a1)) a4) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex3 a3 -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 a4 -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> aex5 (aun (asing (asing a1)) a4).
admit.
Qed.

Theorem conj_AbstrHF_TMUjENah9uQtGHEC8SehurKemd3pcXDxNmo: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (~ asubq a4 a3) -> (~ asubq a2 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> ain a1 (asm (apow a2) (asing a2)) -> (~ ain a2 (apow (asing a1))) -> (~ asubq (asing a1) (asing a2)) -> (~ ain (asing a1) (apow (asing a2))) -> (~ asubq (asm (apow a2) a2) a2) -> (~ (asing a1 = asm (apow a2) a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ (a2 = asing a2)) -> (~ (asing a2 = asm a3 (asing a1))) -> asubq (asm a3 (asing a1)) (apow a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> (~ ain a2 (aun a1 (asing a3))) -> ain a3 (aun (asing a1) (asing a3)) -> ain a0 (asm a4 (asing a2)) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain (asing a1) (asing (apow a2))) -> (~ ain (asing a2) (asing (apow a2))) -> ain (apow a2) (asing (apow a2)) -> ain a1 (aun a2 (asing (apow a2))) -> ain a2 (aun a3 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (asing a1) (asm a2 (asing a0)) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> asubq (asm a4 (asing a3)) a3 -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal4 a3) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aal3 a3 -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex4 (aun a3 (asing (apow a2))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)).
admit.
Qed.

Theorem conj_AbstrHF_TMQ8YMpcc6otJGo5ig6eZztM1raUxB1VZd7: (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> ain a1 (asing a1) -> (~ ain a1 (apow (asing a1))) -> ain a2 (asm (apow a2) a2) -> (~ (a1 = asing a2)) -> (~ ain (asing a1) (apow (asing a2))) -> (~ asubq (asing a2) a2) -> (~ ain a2 (asing (asing a1))) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ (a2 = asing (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (~ ain a3 (asing a2)) -> (~ ain (asing a2) (asm a3 (asing a1))) -> (~ (asing (asing a1) = a3)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ ain a0 (asing (apow (asing a1)))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> ain a3 (asing a3) -> (~ ain (apow (asing a1)) a4) -> ain a3 (asm a4 (asing a2)) -> ain a3 (asm a4 (apow (asing a2))) -> ain a1 (aun (asing (asing a2)) a4) -> ain a1 (aun a2 (asing (apow a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain a1 (aun a3 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal3 (asm a4 a2)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (apow a2)) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> aal3 (asm (apow a2) (asing a2)) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aal5 (aun (asing (apow (asing a1))) a4) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))).
admit.
Qed.

Theorem conj_AbstrHF_TMasiMMQCzjU6xnuoQytrmuAsNGmTduLQdo: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> ain a1 (asing a1) -> ain a2 (asing a2) -> (~ (a0 = asing a2)) -> (~ (a0 = asm (apow a2) a2)) -> (~ ain a1 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ (a2 = asing a2)) -> (~ ain (asing a2) (asm a3 (asing a1))) -> (~ ain (apow a2) a3) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> ain a1 (apow (apow (asing a1))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> (~ ain a1 (asing a3)) -> (~ ain (asing a1) (asm a4 a2)) -> ain a1 (aun (asing (asing a2)) a4) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq a2 (apow (asm a3 (asing a1))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> aal2 (asm (apow a2) (apow (asing a1))) -> aal5 (aun (asing (asing a2)) a4) -> aal5 (aun (apow a2) (asing (apow a2))) -> aex2 (aun a1 (asing (apow a2))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun a1 (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMSrRU1qadDKJRBTEpzwu1TMt72rRNWUth4: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> ain a1 a4 -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (~ (a0 = a1)) -> ain a0 (apow (asing a1)) -> ain a0 (apow a2) -> (~ ain a0 (asing (asing a1))) -> ain (asing a1) (apow (asing a1)) -> asubq (asing (asing a1)) (apow (asing a1)) -> (~ asubq (apow a2) (asing a2)) -> (~ (a1 = apow a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> (~ ain (apow a2) (asing (asing a2))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> (~ ain (apow (asing a1)) a4) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal2 (asm (apow a2) (apow (asing a1))) -> aex2 (apow (asing a1)) -> aex2 (asm a4 a2) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))).
admit.
Qed.

Theorem conj_AbstrHF_TMYrmjMfi2wkPTiPMV9oVBPzaEW71AJPQQN: (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a2 a0) -> (~ ain a3 a3) -> (~ (a1 = a2)) -> (~ (a2 = a3)) -> (~ ain a0 (asing a2)) -> (~ (a0 = asing a1)) -> ain a0 (asm (apow a2) (asing a1)) -> (~ asubq a1 (asing a2)) -> ain a0 (apow (asing a2)) -> (~ ain (apow a2) a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> (~ ain (apow a2) (apow (asing a2))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> ain a3 (asm a4 (apow (asing a2))) -> ain a0 (aun (asing (asing a2)) a4) -> ain a2 (aun (asing (asing a2)) a4) -> (~ ain a0 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a4 (aun (asing (asing a2)) a4) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> asubq a3 (asm (apow a2) (asing (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> (asm a4 (asing a3) = a3) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal2 (asing a2)) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal4 a3) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMWK3whEP9K6GZdcVcRVnP11ayzfumzVy6X: (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> ain a0 (asm a3 (asing a1)) -> ain a1 (asm (apow a2) (asing a2)) -> asubq a1 (apow (asing a1)) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a0 (asm (apow a2) a2)) -> (~ ain a2 (apow (asing a2))) -> (~ (a1 = asing a2)) -> (~ (a1 = asm a3 (asing a1))) -> (~ (a1 = apow (asing a1))) -> (~ ain (asing a2) a2) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a2) (apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun a3 (asing (asing a2))) -> ain a0 (aun a1 (asing a3)) -> (~ ain a2 (aun a1 (asing a3))) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> ain (asing a2) (aun (asing (asing a2)) a4) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain a1 (aun a3 (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex3 a3 -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> (~ (a1 = asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMcvcUgXgZWH7st62SXET8yoNUPPdjjA9Vb: (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> ain a0 a1 -> ain a0 a2 -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> ain a2 a4 -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (~ ain a3 a2) -> (~ ain (asing a1) a0) -> (~ asubq a1 (asing a2)) -> (~ ain (asing a1) a1) -> (~ ain (apow a2) a2) -> (~ (asing a1 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> asubq a3 (apow a2) -> (~ (asing a2 = asm (apow a2) a2)) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a2 (asm a4 (asing a1)) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain (asing (asing a1)) a4) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (apow a2) (asing (apow a2)) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq a2 (asm a4 (asing a2)) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> aal3 (asm (apow a2) (asing a1)) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex3 a3 -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex3 (asm a4 (asing a3)) -> aex4 (aun a3 (asing (apow a2))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMRePohUuhqWSrbHfgd9WRjSapn4erpgJfp: (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (~ ain a3 a3) -> (~ asubq a1 a0) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> (~ ain (asing a1) a0) -> (~ ain a0 (asing a1)) -> ain a1 (apow a2) -> (~ (asing a1 = asm (apow a2) a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> (~ ain a0 (asm a4 a2)) -> (~ ain a3 (asing (apow a2))) -> ain a0 (aun a4 (asing (apow a2))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> asubq a1 (asm a2 (asing a1)) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> (asm (asm a4 a2) (asing a2) = asing a3) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal2 (apow (asing (asing a1))) -> aex3 (asm (apow a2) (asing a2)) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex3 (asm a4 (asing a1)) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex4 (aun a3 (asing (apow a2))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (~ (asm a3 (asing a1) = a3)).
admit.
Qed.

Theorem conj_AbstrHF_TMaZ6izwx7ynyoJtRPMYKMo2NuBaKp18mnj: (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> asubq a1 a2 -> ain a1 (apow a2) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> ain a2 (apow a2) -> (~ ain a3 (asing a1)) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ asubq a3 (asing a2)) -> (~ (apow (asing a1) = a3)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> ain a0 (apow (asing (asing a1))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> (~ ain a3 (asing (asing a2))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> (~ ain (asm a3 (asing a1)) a4) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain a0 (aun a1 (asing (apow a2))) -> ain a0 (aun a3 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a2 (aun a2 (asing (apow a2))) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal2 (asing a2)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aex2 (aun a1 (asing a3)) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex5 (aun (asing (apow (asing a1))) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain a3 (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMLXMjxw1gHcyW8opMTFmF7kza4jZeQzikA: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> ain a0 a3 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (~ ain a1 a1) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> ain a0 (apow a2) -> (~ (a0 = asing (asing a1))) -> ain a1 (asm (apow a2) (asing a2)) -> ain a2 (asm a3 (asing a1)) -> (~ ain (asing a1) (asing a1)) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ ain a2 (asing (asing a1))) -> (~ (a2 = asing (asing a1))) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (~ (asing (asing a1) = apow (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> (~ (asing a2 = apow a2)) -> ain a0 (apow (apow (asing a1))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain a2 (aun (asing (asing a2)) a4) -> (~ ain (asing a1) (asing (apow a2))) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a4 (aun (asing (asing a1)) a4) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (asing a1) (asm a2 (asing a0)) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal4 (aun a3 (asing (asing a2))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (apow (asing a2)) -> aex3 (aun a2 (asing (apow a2))) -> aex3 (asm a4 (asing a0)) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex5 (aun (asing (asing a2)) a4) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))).
admit.
Qed.

Theorem conj_AbstrHF_TMVV4ZVBFaRbJvhVkhnAh6ueGz5BeqDTpHx: (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> ain a1 a3 -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (~ ain a2 a2) -> ain a0 (asm (apow a2) (asing a1)) -> (~ asubq (asing a2) a2) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ (asing a1 = asing (asing a1))) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ ain (asing a1) (asing (asing a2))) -> (~ ain a3 (asing (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain a3 (asing a3) -> ain a3 (asm a4 (asing a2)) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> ain a0 (aun a2 (asing (apow a2))) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> (asm (apow a2) (asing (asing a1)) = a3) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal2 (asing a1)) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal4 (asm (apow a2) (asing a2))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> aal5 (aun (apow a2) (asing (apow a2))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (apow (asing a1)) -> aex2 (asm a4 a2) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> aex5 (aun (apow a2) (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMFtZJmNXqu1edLTpT3djhn4q9VtMvannRo: (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (~ (asing a1 = a2)) -> (~ asubq a2 (asing a1)) -> (~ ain (asing a1) (apow (asing a2))) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ asubq (asing a2) a2) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a1) a3) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> ain a2 (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> (~ ain (apow (asing a1)) a4) -> (~ ain (apow a2) a4) -> ain (asing a1) (aun (asing (asing a1)) a4) -> (~ ain a0 (asm a4 a2)) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> asubq a3 (aun a3 (asing (apow a2))) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> aal3 a3 -> aal3 (asm (apow a2) (asing a1)) -> aal5 (aun (asing (apow (asing a1))) a4) -> aex2 (aun a1 (asing a3)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm (apow a2) (asing a0)) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex3 (asm a4 (asing a0)) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex5 (aun (asing (apow (asing a1))) a4) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> ain (apow a2) (asing (apow a2)).
admit.
Qed.

Theorem conj_AbstrHF_TML1gK82iBRzrppPbhtHPeA2jXRQpY8JdhN: (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> ain a0 a1 -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> ain a0 (asm (apow a2) (asing a2)) -> ain (asing a1) (asm (apow a2) (asing a2)) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (~ (asing (asing a1) = apow (asing a1))) -> (~ ain (asing a2) (apow a2)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> (~ (asing a2 = apow a2)) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> ain a1 (aun (asing a1) (asing a3)) -> (~ ain (apow (asing a1)) a4) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain a1 (aun (asing (asing a2)) a4) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal2 a1) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (~ aal5 (apow a2)) -> (~ aal5 a4) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex3 (asm a4 (asing a3)) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMFLhP5tYUmmzDbv98DqREaNPLaDBZzmH1L: (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, asubq X24 X24) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (~ ain a2 a1) -> (~ (a1 = a3)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> (~ ain a0 (asing a1)) -> (~ (asing a1 = a2)) -> (~ ain a0 (asm (apow a2) a2)) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ (asing a1 = asm a3 (asing a1))) -> (~ (asing a1 = apow a2)) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> asubq a3 (apow a2) -> (~ (a3 = asm (apow a2) a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ (asing a2 = apow a2)) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> (~ ain (apow a2) (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> ain a0 (aun (asing a2) (apow (asing a2))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> ain a1 (aun (asing a1) (asing a3)) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain a1 (asing (apow a2))) -> ain a0 (aun a2 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> asubq (asm a2 (asing a1)) a1 -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> (asm (asm a4 a2) (asing a3) = asing a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ aal3 (apow (asing a1))) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> aal3 (asm a4 (asing a1)) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex4 (apow a2) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, (~ aal3 (apow (asing X24)))).
admit.
Qed.

Theorem conj_AbstrHF_TMWaHeCVmk1eyaLwfCyrYNV1kERS5dvA9xa: (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> ain a1 (aun (asing a1) (asing (asing a1))) -> ain a0 (asm a3 (asing a1)) -> ain a0 (asm (apow a2) (asing a1)) -> ain a2 (apow a2) -> (~ (a1 = asing a2)) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ ain a1 (asm (apow a2) a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (a2 = asm (apow a2) a2)) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> (~ (asm (apow a2) a2 = apow a2)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> ain a3 (asing a3) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain a1 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> asubq a2 (aun a2 (asing (apow a2))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal2 (asing a1)) -> (~ aal3 a2) -> (~ aal3 (asm a3 (asing a1))) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal2 (asm (apow a2) (apow (asing a1))) -> aal3 (asm (apow a2) (asing a1)) -> aal4 (apow a2) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex3 (asm (apow a2) (asing a1)) -> aex3 (aun a2 (asing (apow a2))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aex4 (aun a3 (asing (apow a2))) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMQNKA7G5mfEqmAzZEUVSsxcagnaPsmvBuF: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> ain a1 a2 -> (forall X24:set, asubq X24 X24) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (~ ain a3 a2) -> ain a1 (asing a1) -> (~ asubq a1 (asing a1)) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> (~ asubq a2 (asing a1)) -> (~ (a1 = apow (asing a1))) -> (~ ain (asm a3 (asing a1)) a2) -> (~ (asing a1 = asing (asing a1))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ (a2 = asm (apow a2) a2)) -> asubq a3 (apow a2) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain a0 (apow (apow (asing a1))) -> ain a1 (apow (apow (asing a1))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> (~ ain (apow a2) (apow (asing a2))) -> ain a2 (asm a4 (asing a1)) -> ain a0 (aun (asing a2) (apow (asing a2))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> (~ ain a0 (asing a3)) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain a0 (aun a1 (asing (apow a2))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal2 (asing (asing a1))) -> aal3 (asm (apow a2) (apow (asing a2))) -> aal4 (aun a3 (asing (apow a2))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> aex3 (asm a4 (asing a3)) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ asubq a3 (asing a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMHwigqTtqrB46A8o7iqe4BSBeDbuzY7c8Z: (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> ain a0 a2 -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 (asm X24 (asing X25)) -> aal5 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (~ (a1 = a3)) -> ain a0 (apow a2) -> asubq (asing a1) a2 -> (~ (a0 = asing a2)) -> asubq a1 (asm a3 (asing a1)) -> (~ asubq a2 (asm a3 (asing a1))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ ain (apow a2) (apow a2)) -> (~ (a2 = asm a3 (asing a1))) -> (~ asubq (apow a2) (asing a2)) -> (~ (asm a3 (asing a1) = apow a2)) -> (~ (asm (apow a2) a2 = apow a2)) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a0 (aun (asing a2) (apow (asing a2))) -> (~ ain (asing a1) (asm a4 a2)) -> ain a2 (asm a4 (apow (asing a2))) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> (~ ain (asing a2) (asing (apow a2))) -> ain a1 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal3 (asm (apow a2) (asing a2)) -> aal3 (aun a2 (asing (apow a2))) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex3 a3 -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (~ asubq a2 a1).
admit.
Qed.

Theorem conj_AbstrHF_TMZ4jiW4jyWfFwfAwfQbM5L8pvFr25dKLYt: (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> ain a0 a1 -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> ain a1 (asing a1) -> ain a0 (asm a3 (asing a1)) -> ain a1 (asm (apow a2) (apow (asing a1))) -> ain a2 (asm (apow a2) a2) -> ain a2 (asm (apow a2) (asing a1)) -> (~ ain a1 (asm (apow a2) a2)) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (~ ain (asm a3 (asing a1)) a2) -> (~ (asing a1 = asing a2)) -> (~ (asing a1 = a3)) -> (~ ain (apow a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ ain a3 (asing a2)) -> (~ ain a3 (asm a3 (asing a1))) -> (~ (apow (asing a1) = a3)) -> (~ (asm a3 (asing a1) = a3)) -> (~ (asing a2 = asm (apow a2) a2)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> (~ ain (apow a2) (apow (asing a2))) -> (~ ain a2 (asing a3)) -> ain a3 (asing a3) -> ain a3 (asm a4 (asing a2)) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> ain a2 (asm a4 (apow (asing a2))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain a0 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (asm (asm a4 a2) (asing a3) = asing a2) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal2 (asing (apow a2))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex2 (aun a1 (asing a3)) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex5 (aun (asing (asing (asing a1))) a4) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMLL5h253Sn8rsoEo8RD6Cz6HNhgfabFYH8: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a0 (asing (asing a1))) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> (~ (asing a1 = asing a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (~ (a3 = asm (apow a2) a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ (asm a3 (asing a1) = apow a2)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> ain a0 (asm a4 (asing a1)) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> ain a1 (apow (asm a3 (asing a1))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> ain a1 (asm a4 (asing a2)) -> (~ ain (apow a2) a4) -> ain a2 (asm a4 a2) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (apow a2) (asing (apow a2)) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> (asm (asm a4 a2) (asing a2) = asing a3) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal4 a3) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> aal2 (asm a4 a2) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex3 (asm a4 (asing a1)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> ain a3 (aun (asing a1) (asing a3)).
admit.
Qed.

Theorem conj_AbstrHF_TMFuod3uvMfpd7QNjsdCynETFUQdDuQZ55S: (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> ain a3 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (~ ain a0 a0) -> (~ ain a2 a2) -> (~ asubq a4 a3) -> (~ (a1 = a2)) -> (~ ain (asing a1) a0) -> ain a2 (asm (apow a2) (apow (asing a1))) -> (~ ain (asm a3 (asing a1)) a2) -> (~ (asing a1 = apow a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (a2 = asm (apow a2) a2)) -> (~ ain (apow (asing a1)) a3) -> (~ (a1 = asm (apow a2) a2)) -> asubq a3 (apow a2) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> (~ ain (apow a2) a4) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain a3 (asm a4 (apow (asing a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> ain a0 (aun a1 (asing (apow a2))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain a0 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> asubq (asm a4 (asing a3)) a3 -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal2 a1) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal3 (aun (asing a1) (asing a3))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal5 (aun a4 (asing (apow a2))) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> asubq (asm a3 (asing a1)) a4.
admit.
Qed.

Theorem conj_AbstrHF_TMSu1M9BF2juXA1z84fJV3hoXWPok59HiTZ: (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (~ ain a1 a1) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> ain a1 (asm (apow a2) (asing a2)) -> (~ (a0 = asing a2)) -> asubq a1 (apow (asing a1)) -> ain a2 (asm a3 (asing a1)) -> (~ asubq a2 (asing a1)) -> (~ ain (asing a1) (asing a1)) -> ain (asing a1) (asm (apow a2) (asing a1)) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ ain a1 (asm (apow a2) a2)) -> (~ ain (apow a2) (asing (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ (a3 = asm (apow a2) a2)) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> ain a0 (asm a4 (asing a1)) -> ain a2 (aun (asing a2) (apow (asing a2))) -> ain a1 (aun a3 (asing (asing a2))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain a0 (aun a1 (asing a3)) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a1 (aun a2 (asing (apow a2))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal3 (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> aal2 (asm a3 (asing a1)) -> aal3 (aun a2 (asing (apow a2))) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMVKuLrS3TVvof7zpQMvADWAS6kDWtjYBnw: (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (~ (a1 = a2)) -> ain (asing a1) (apow a2) -> (~ ain a0 (asing (asing a1))) -> ain a2 (asm (apow a2) (apow (asing a1))) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ asubq a3 (asing a2)) -> (~ asubq (apow a2) (asing a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> (~ ain (apow a2) (apow (asing a2))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (~ asubq (asm a4 (asing a2)) a2) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal3 (apow (asing a2))) -> (~ aal4 a3) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal2 (apow (asing (asing a1))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun (apow a2) (asing (apow a2))) -> aal5 (aun a4 (asing (apow a2))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex5 (aun (apow a2) (asing (apow a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMY8g2KJecLppcwqysaGKapxKViczt6rJ29: (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> ain a1 a3 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> asubq a2 a3 -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain (asing a1) (asm (apow a2) a2) -> (~ ain (asing a1) a1) -> ain a1 (asm (apow a2) (asing a2)) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> ain a2 (asm (apow a2) (asing a1)) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a2) a2) -> (~ asubq (asm (apow a2) a2) a2) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ (asing a1 = asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (~ ain a3 (apow a2)) -> (~ ain (apow a2) (asing a2)) -> (~ ain (asing a2) (asm a3 (asing a1))) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> ain a3 (asing a3) -> ain a3 (aun (asing a1) (asing a3)) -> (~ ain (asm (apow a2) a2) a4) -> (~ ain a0 (asm a4 a2)) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain a1 (aun a2 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> asubq a2 (asm a4 (asing a2)) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> asubq a3 (asm a4 (asing a3)) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal2 a1) -> (~ aal3 (asm a3 (asing a1))) -> (~ aal4 (asm a4 (asing a2))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> aal2 a2 -> aal3 (aun (asing a2) (apow (asing a2))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMVYrTYuATAd3JYaWF3arWj82786jHdntX9: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> ain a0 a2 -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (~ (a0 = a3)) -> ain a2 (asing a2) -> (~ asubq a1 (asing a1)) -> ain a1 (asm (apow a2) (apow (asing a1))) -> ain (asing a1) (apow a2) -> (~ ain a1 (asing a2)) -> (~ (a0 = asm a3 (asing a1))) -> ain a2 (apow a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (asing a1) a4) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain a0 (aun a2 (asing (apow a2))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a2 (asm a4 (asing a2)) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> (asm (asm a4 a2) (asing a3) = asing a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> aal2 (apow (asing (asing a1))) -> aex2 a2 -> aex2 (asm a3 (asing a1)) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex3 (asm a4 (asing a1)) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMTa2P1TEGQE3PpivdX8E3pVAPfyMmUv2an: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> ain a2 a4 -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> ain (asing a1) (asing (asing a1)) -> (~ ain a0 (asing a1)) -> (~ asubq a1 (asing a1)) -> (~ (a0 = asing a2)) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ asubq a2 (asing a2)) -> (~ ain a3 (asing a1)) -> (~ ain a1 (asm (apow a2) a2)) -> (~ (asing a1 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ ain (asing a2) a3) -> (~ ain (asm (apow a2) a2) a3) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> ain a0 (apow (apow (asing a1))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> (~ ain a2 (asing a3)) -> ain a1 (aun (asing a1) (asing a3)) -> ain a3 (asm a4 (asing a2)) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm a2 (asing a1)) a1 -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal2 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal3 (asm (apow a2) (apow (asing a2))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm (apow a2) (asing a0)) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3).
admit.
Qed.

Theorem conj_AbstrHF_TMHXJuWyP1FshnY7eg364iWPCm2hLRPdpab: (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (~ ain a2 a1) -> ain a1 (asing a1) -> (~ ain (asing a1) a2) -> (~ ain a1 (asing a2)) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ asubq (asing a2) a2) -> (~ ain (asing a2) (asing (asing a1))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ ain (apow a2) (asing a2)) -> (~ (a2 = asing a2)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a0 (asing a3)) -> ain a2 (asm a4 a2) -> (~ ain a3 (asing (apow a2))) -> ain a0 (aun a1 (asing (apow a2))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> (asm (asm a4 a2) (asing a2) = asing a3) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> (~ aal3 (asm a4 a2)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> aal3 (asm a4 (asing a2)) -> aal4 (apow a2) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal5 (aun (asing (asing a1)) a4) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (aun a1 (asing a3)) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 (asm (apow a2) (asing a1)) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2).
admit.
Qed.

Theorem conj_AbstrHF_TMJxq59ytQirsz1uUVsPxtREJZAbosa2E1b: ain a1 a4 -> ain a3 a4 -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a2 a1) -> (~ (a0 = a2)) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ ain (asing (asing a1)) a2) -> (~ asubq (asing a2) a2) -> asubq (asing (asing a1)) (apow (asing a1)) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> (~ ain a0 (asm a4 a2)) -> ain a1 (aun (asing (asing a2)) a4) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> ain a0 (aun a4 (asing (apow a2))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> asubq (asing a1) (asm a2 (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> (asm (apow a2) (asing (asing a1)) = a3) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> (~ aal2 (asing (apow a2))) -> (~ aal3 (apow (asing a1))) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal3 (aun (asing a1) (asing a3))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (~ aal5 a4) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex2 a2 -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex5 (aun (asing (asing a2)) a4) -> aex5 (aun (apow a2) (asing (apow a2))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3).
admit.
Qed.

Theorem conj_AbstrHF_TMWpm6TG7aHVNDFfuaQxYDL317H4nVN6z4p: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (~ (a0 = a2)) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> ain a1 (aun (asing a1) (asing (asing a1))) -> ain a0 (asm a3 (asing a1)) -> (~ (a0 = asing a2)) -> ain a2 (asm a3 (asing a1)) -> ain a2 (asm (apow a2) a2) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ (asing a2 = a3)) -> asubq a3 (apow a2) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> ain a2 (aun a3 (asing (asing a2))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> (~ ain a2 (asing a3)) -> ain a0 (aun a1 (asing a3)) -> (~ ain a2 (aun a1 (asing a3))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain a1 (aun a2 (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> asubq a2 (asm a4 (asing a2)) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (~ aal2 a1) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> aal4 (aun a3 (asing (asing a2))) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex2 (aun a1 (asing (apow a2))) -> aex3 (asm (apow a2) (asing a1)) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex5 (aun (asing (apow (asing a1))) a4) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMVJhZYQPyaNHJtwuYtefJwFFG5MMC4fdDS: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> ain a1 (aun (asing a1) (asing (asing a1))) -> (~ (asing a1 = a2)) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ (a2 = asm (apow a2) a2)) -> (~ (a2 = asing a2)) -> (~ (a1 = asm (apow a2) a2)) -> asubq a3 (apow a2) -> (~ (asm (apow a2) a2 = apow a2)) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain a3 (asm a4 a2) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a1 (aun a3 (asing (apow a2))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a4 (aun (asing (asing a1)) a4) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq (asm a2 (asing a1)) a1 -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> asubq (asm a3 (asing a1)) a4 -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> (~ aal4 a3) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal2 (asm (apow a2) a2) -> aal2 (apow (asing (asing a1))) -> aal3 (asm a4 (asing a1)) -> aex2 (apow (asing a1)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex5 (aun (apow a2) (asing (apow a2))) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)).
admit.
Qed.

Theorem conj_AbstrHF_TMFApVa1dX8r1qpHs7rU1kSZCw8uGKsuF8a: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (~ asubq a3 a2) -> asubq a3 a4 -> (~ (a0 = a1)) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> (~ ain (asing a1) a0) -> (~ (a0 = asing a2)) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain (apow a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ ain (apow a2) (apow a2)) -> (~ (asing a2 = asm a3 (asing a1))) -> asubq a3 (apow a2) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ (asing a2 = apow a2)) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> (~ ain (asing a1) a4) -> ain a0 (aun (asing (asing a2)) a4) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> ain a2 (aun a4 (asing (apow a2))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> asubq a4 (aun (asing (asing a2)) a4) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal3 (asm a4 a2)) -> (~ aal4 (asm (apow a2) (asing a1))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> aal2 (asm (apow a2) a2) -> aal4 (aun a3 (asing (apow a2))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 a2 -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex3 (asm (apow a2) (asing (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))).
admit.
Qed.

Theorem conj_AbstrHF_TMT9ySvCZSk6Lw5vtTHmhPrBrKXz1w975GY: (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> ain a2 a3 -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (~ ain a1 a0) -> (~ ain a2 a1) -> (forall X24:set, forall X25:set, asubq X25 (asing X24) -> ((X25 = a0) \/ (X25 = asing X24))) -> (~ asubq a1 (asing a2)) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ ain a1 (asing a2)) -> (~ ain a3 (asing a1)) -> (~ ain (asm a3 (asing a1)) a2) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ (a2 = asing a2)) -> (~ asubq (apow a2) (asing a2)) -> (~ ain (apow a2) a3) -> (~ ain a0 (asing (apow (asing a1)))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> (~ ain a2 (aun a1 (asing a3))) -> ain a1 (asm a4 (asing a2)) -> ain a3 (asm a4 (asing a2)) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain a2 (asm a4 (apow (asing a2))) -> ain a3 (asm a4 (apow (asing a2))) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain a0 (aun a1 (asing (apow a2))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal5 (aun (asing (asing a2)) a4) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 a2 -> aex2 (asm a4 a2) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex3 (asm (apow a2) (asing a0)) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMU6KgmoVMjikAUNykngBdUjsutzQEieDwz: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> ain a1 a4 -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (~ (a0 = a1)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (~ ain (asing a1) a0) -> (~ asubq a1 (asing a1)) -> (~ (a1 = asing a1)) -> (~ ain a0 (asing (asing a1))) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ asubq a2 (asm a3 (asing a1))) -> (~ ain a2 (asing (asing a1))) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (~ (asing (asing a1) = apow (asing a1))) -> asubq a3 (apow a2) -> (~ (asing a2 = asm (apow a2) a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> (~ (asm a3 (asing a1) = apow a2)) -> ain a1 (apow (apow (asing a1))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> ain a3 (aun (asing (asing a2)) a4) -> ain a0 (aun (asing (asing a2)) a4) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain a1 (aun a3 (asing (apow a2))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asm a2 (asing a1)) a1 -> asubq (asm a3 (asing a2)) a2 -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (~ aal4 a3) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aal5 (aun a4 (asing (apow a2))) -> aex3 a3 -> aex2 (asm a3 (asing a2)) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex3 (asm a4 (asing a0)) -> aex5 (aun (apow a2) (asing (apow a2))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 a3.
admit.
Qed.

Theorem conj_AbstrHF_TMQz9NsJJVLsmRT69qjFcncWuacMC1rbghr: (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (~ ain a3 a3) -> asubq a1 a2 -> (~ (a0 = a2)) -> (~ asubq a1 a0) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> ain (asing a1) (asing (asing a1)) -> ain (asing a1) (asm (apow a2) a2) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ asubq (asm a3 (asing a1)) a2) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ ain a3 (asing a2)) -> (~ ain (apow a2) (asing a2)) -> (~ asubq (apow a2) (asing a2)) -> (~ ain (asing a2) a3) -> (~ (asm a3 (asing a1) = a3)) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> ain a1 (aun (asing a1) (asing a3)) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> aex2 (asm (apow a2) a2) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex3 (asm a4 (asing a3)) -> aex5 (aun (asing (asing a1)) a4) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMFWaTXjMEPvKzRf2xN8YLYRLk5oFLhkQcQ: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> asubq (asing a0) a1 -> (a1 = asing a0) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> asubq a2 a3 -> (~ asubq a2 a0) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ ain (asing a1) a0) -> ain a2 (asm (apow a2) (apow (asing a1))) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ (asing a1 = asm a3 (asing a1))) -> (~ (asing a1 = asm (apow a2) a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a2) (apow a2)) -> (~ ain (apow a2) a3) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> ain a0 (apow (asing (asing a1))) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> (asm a2 (asing a1) = a1) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq a2 (asm a3 (asing a2)) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (~ aal4 (asm (apow a2) (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> aal2 (asm a3 (asing a1)) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq a1 (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMXwQEjH7zqbNWKwV4yiC5GuTM2pHBgms76: (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> asubq (asing a0) a1 -> (a1 = asing a0) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (~ asubq a3 a2) -> (~ asubq a4 a3) -> (~ asubq a1 a0) -> (~ asubq a2 a0) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain a0 (asm a3 (asing a1)) -> (~ asubq a1 (asing a2)) -> ain a0 (apow (asing a2)) -> (~ (a1 = asing a2)) -> (~ ain a1 (asing (asing a1))) -> (~ ain a1 (asm (apow a2) a2)) -> (~ ain (apow a2) a2) -> (~ asubq (asm (apow a2) a2) a2) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> (~ ain a1 (asing (apow (asing a1)))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (apow a2) (apow (asing a2))) -> ain a0 (asm a4 (asing a1)) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> ain a1 (aun (asing (asing a2)) a4) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> ain a1 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> (asm (apow a2) (asing (asing a1)) = a3) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (~ aal3 (aun a1 (asing a3))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal2 (apow (asing (asing a1))) -> aal3 (asm a4 (asing a1)) -> aal3 (aun a2 (asing (apow a2))) -> aal5 (aun (asing (apow (asing a1))) a4) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex4 a4 -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> (~ ain a1 (asing a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMM9672Qv237bbV4jqnZbgYbu1mhF746anx: (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (~ asubq a2 a0) -> (~ (a0 = asing a1)) -> (~ ain (asing (asing a1)) a2) -> (~ ain (asing a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a3 (apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ (a2 = apow a2)) -> (~ asubq (apow a2) (asing a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> (~ ain a2 (aun a1 (asing a3))) -> (~ ain (asing (asing a1)) a4) -> (~ ain (apow a2) a4) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain a1 (aun (asing (asing a2)) a4) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq a4 (aun (asing (asing a1)) a4) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq a2 (asm a3 (asing a2)) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> (asm (apow a2) (asing (asing a1)) = a3) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> aal2 (asm (apow a2) (apow (asing a1))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal3 (aun a2 (asing (apow a2))) -> aal4 a4 -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm a4 (asing a1)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> aex4 (apow a2) -> aex3 (asm a4 (asing a3)) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asing (apow (asing a1))) a4) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3).
admit.
Qed.

Theorem conj_AbstrHF_TMHcUtb37aV34wUYBrSUmaptL4jyb94Kw2P: (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> ain a0 a1 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> asubq a2 a3 -> (~ asubq a3 a2) -> (~ (a0 = a3)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> (~ ain a1 X24) -> (X24 = a0)) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ (a0 = asing (asing a1))) -> (~ (a0 = asm a3 (asing a1))) -> ain a2 (asm a3 (asing a1)) -> ain a2 (asm (apow a2) a2) -> (~ (a1 = asing a2)) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ ain (asm a3 (asing a1)) a2) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> asubq (asing (asing a1)) (apow (asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ (asing a2 = a3)) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> ain a0 (apow (asing (asing a1))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> ain a3 (asm a4 a2) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain (apow a2) (asing (apow a2)) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> (asm (apow a2) (asing (asing a1)) = a3) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq a2 (apow (asm a3 (asing a1))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asing a1)) -> (~ aal2 (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm a4 (asing a1))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aex2 a2 -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex5 (aun (asing (asing a1)) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))).
admit.
Qed.

Theorem conj_AbstrHF_TMakJ3n9sGi7KwCkJqpCAc4T9j8V3JnNRAZ: ain a0 a2 -> ain a1 a3 -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ asubq a3 a2) -> (~ asubq a1 a0) -> (~ asubq a2 a0) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ ain a0 (asing a1)) -> ain a1 (apow a2) -> ain a0 (asm (apow a2) (asing a1)) -> (~ ain (asing a1) a1) -> ain (asing a1) (apow (asing a1)) -> (~ ain (asing a1) (asing a2)) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ asubq a2 (asing a1)) -> ain a2 (asm (apow a2) (asing a1)) -> (~ asubq a2 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) a3) -> (~ (a2 = apow (asing a1))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (~ ain (asing (asing a1)) a3) -> (~ (asing a2 = a3)) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> (~ ain a2 (asing a3)) -> (~ ain a2 (aun a1 (asing a3))) -> ain a3 (asm a4 a2) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm a4 (asing a3)) a3 -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal3 (aun (asing a1) (asing a3))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (~ aal4 (asm a4 (asing a1))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> aal2 a2 -> aal2 (aun (asing a1) (asing (asing a1))) -> aal3 (asm (apow a2) (asing a1)) -> aal4 a4 -> aal5 (aun (asing (asing a2)) a4) -> aex2 (aun (asing a3) (asing (apow a2))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex4 (aun a3 (asing (apow a2))) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex5 (aun (asing (asing a1)) a4) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> aal2 (apow (asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMGfsy2udFAxjmHzC9RWE97sBS7u5yfNnY2: (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> ain a3 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (~ (a2 = a3)) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ (a0 = asing a1)) -> (~ ain a1 (asing (asing a1))) -> (~ ain (asing (asing a1)) a2) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ (a2 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (apow a2) a3) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ (asm a3 (asing a1) = apow a2)) -> (~ ain a0 (asing (apow (asing a1)))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a3 (asing (asing a2))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> ain a3 (asm a4 (asing a2)) -> (~ ain (asing a1) (asm a4 a2)) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a1 (aun a4 (asing (apow a2))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq a2 (aun a2 (asing (apow a2))) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm a2 (asing a1)) a1 -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (~ aal3 (aun a1 (asing a3))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> aal2 (asm a3 (asing a1)) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex3 (asm (apow a2) (asing a0)) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMKwXr4hjfXY9ppgWP3dU8E3vnucshWwcda: (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> ain a1 a4 -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (~ ain a1 a0) -> asubq a3 a4 -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> ain a0 (asm (apow a2) (asing a1)) -> (~ ain a3 (asing a1)) -> (~ asubq (asing a1) (asing (asing a1))) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ ain (apow a2) (asing (asing a1))) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ (a1 = asm (apow a2) a2)) -> (~ (a3 = apow a2)) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> ain a0 (asm a4 (asing a1)) -> (~ ain (asing a1) a4) -> (~ ain (asing a2) a4) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> (~ ain (apow a2) a4) -> ain a2 (asm a4 a2) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun a4 (asing (apow a2))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (asm a2 (asing a1)) a1 -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (asm a3 (asing a1)) a4 -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 (asm (apow a2) a2) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 (asm (apow a2) (asing a2)) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex5 (aun (asing (asing a1)) a4) -> aex5 (aun (apow a2) (asing (apow a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (~ ain a0 (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMRngMQFsbC8TYdqaYbjQoNTQCwUDrpfxns: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> asubq a1 a2 -> (~ asubq a1 (asing a2)) -> ain a2 (asm (apow a2) a2) -> (~ (a1 = asing a2)) -> (~ ain a3 (asing a1)) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ (asing a1 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ ain a3 (asm a3 (asing a1))) -> (~ (asing a2 = asm a3 (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain a3 (aun a1 (asing a3)) -> ain a0 (asm a4 (asing a2)) -> ain (asing a2) (aun (asing (asing a2)) a4) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun a4 (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (~ aal5 (apow a2)) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aal5 (aun a4 (asing (apow a2))) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex3 (aun a2 (asing (apow a2))) -> aex5 (aun (apow a2) (asing (apow a2))) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMdDEPmdegT7GhUDGqo4cPsXHPqug6Vsn5x: (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> ain a1 a2 -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ ain a1 a0) -> (~ ain a3 a3) -> (~ asubq a2 a1) -> (~ ain (asing a2) a1) -> (~ (a0 = asm (apow a2) a2)) -> ain a2 (asm (apow a2) (apow (asing a1))) -> (~ (a1 = asing a2)) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a1 (asm (apow a2) a2)) -> (~ ain (asm a3 (asing a1)) a2) -> (~ (asing a1 = a3)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ (a2 = asm (apow a2) a2)) -> (~ ain (asing a2) (asm (apow a2) a2)) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> (~ (asm (apow a2) a2 = apow a2)) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> (~ ain a0 (asing a3)) -> ain a3 (asing a3) -> (~ ain (asing (asing a1)) a4) -> (~ ain a0 (asm a4 a2)) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> (~ ain (asing a1) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain a0 (aun a3 (asing (apow a2))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal3 a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal5 a4) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex3 a3 -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMbBowYkycNXrqyhmJTyjNV6e5sMxh6Nmy1: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (~ ain a3 a3) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ asubq (asing a2) a2) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ ain (asing (asing a1)) a3) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> (~ ain (asm a3 (asing a1)) a4) -> (~ ain a1 (asing (apow a2))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain a2 (aun a3 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> ain a1 (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex2 (asm a3 (asing a2)) -> aex3 (asm (apow a2) (asing a1)) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)).
admit.
Qed.

Theorem conj_AbstrHF_TMJtLzu8dL2P8fbC5TZhjsJEjqbNREjE8sC: (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> ain a2 a3 -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (~ ain a2 a1) -> ain a0 (apow a2) -> (~ ain a1 (apow (asing a2))) -> (~ ain (asing a2) a1) -> (~ ain a3 (asing a1)) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ (asm (apow a2) a2 = apow a2)) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> ain a0 (asm a4 (asing a2)) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain a0 (aun a2 (asing (apow a2))) -> ain a1 (aun a2 (asing (apow a2))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq a2 (asm a4 (asing a2)) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> (asm (asm a4 a2) (asing a3) = asing a2) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (~ aal3 (apow (asing a2))) -> (~ aal3 (aun a1 (asing a3))) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> aal5 (aun (asing (asing a2)) a4) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 a4 -> aex5 (aun (asing (apow (asing a1))) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> ain a1 (aun (asing a1) (asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMRroPdwUazWeAZaUHLvdcWPQtu94anArZD: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> ain a3 a4 -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, asubq X25 (asing X24) -> ((X25 = a0) \/ (X25 = asing X24))) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> ain a0 (asm (apow a2) (asing a2)) -> ain a1 (apow a2) -> (~ (a0 = asm a3 (asing a1))) -> ain a2 (asm (apow a2) a2) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ (a1 = asing (asing a1))) -> (~ (asing a1 = a3)) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> asubq (asm a3 (asing a1)) (apow a2) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> (~ (asm (apow a2) a2 = apow a2)) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> (~ ain (asm a3 (asing a1)) a4) -> (~ ain (apow a2) a4) -> ain a1 (asm a4 (apow (asing a2))) -> (~ ain (asing a1) (asing (apow a2))) -> ain a0 (aun a1 (asing (apow a2))) -> ain a1 (aun a3 (asing (apow a2))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (asm a3 (asing a1)) a4 -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal2 (asing a1)) -> (~ aal4 (asm (apow a2) (asing a2))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm a4 (asing a2))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (apow a2)) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal2 (asm (apow a2) a2) -> aal2 (asm a4 a2) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aal5 (aun (asing (asing a2)) a4) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex3 (asm (apow a2) (asing a1)) -> aex3 (asm a4 (asing a2)) -> aex3 (asm a4 (asing a1)) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> (~ (asing a2 = asm a3 (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMJGYhN4vUTWGNHgh3VZNqD622gcdKKG2d8: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> ain a1 a2 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (~ ain a2 a0) -> (~ ain a0 (asing a2)) -> ain (asing a1) (apow a2) -> (~ ain a0 (asing (asing a1))) -> asubq a1 (apow (asing a1)) -> ain a2 (apow a2) -> ain a0 (apow (asing a2)) -> (~ ain (asing (asing a1)) a2) -> (~ ain (asing a2) a2) -> (~ ain (asing a2) (asing (asing a1))) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ (asing (asing a1) = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ ain (asing a2) (asm a3 (asing a1))) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> ain a0 (aun (asing a2) (apow (asing a2))) -> ain a1 (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain a0 (aun a1 (asing a3)) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> asubq a2 (asm a4 (asing a2)) -> asubq a2 (aun a2 (asing (apow a2))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (asm a2 (asing a0) = asing a1) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> (asm (apow a2) (asing (asing a1)) = a3) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal2 (asing a2)) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal3 (asm a4 (asing a2)) -> aal3 (asm a4 (asing a1)) -> aex3 (asm (apow a2) (asing a1)) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMHbVubSt64JjYSGaAQ6HYJEtypjxKvw1Gi: (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> ain a1 a4 -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> ain a1 (aun (asing a1) (asing (asing a1))) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> (~ ain a1 (asm a3 (asing a1))) -> (~ ain a1 (asm (apow a2) a2)) -> (~ (a1 = asing (asing a1))) -> (~ ain (asing (asing a1)) a2) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ asubq (asm (apow a2) a2) a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ (asing a2 = asm a3 (asing a1))) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> (~ ain a0 (asing (apow (asing a1)))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asing a2) a4) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain a2 (aun a3 (asing (asing a2))) -> ain a1 (apow (asm a3 (asing a1))) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain a1 (aun a3 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain a0 (aun a4 (asing (apow a2))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> asubq (asing a1) (asm a2 (asing a0)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal2 a1) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal3 (asm (apow a2) (asing a1)) -> aal3 (asm (apow a2) (apow (asing a2))) -> aex2 a2 -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex3 (asm (apow a2) (asing a0)) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> (~ (a1 = apow a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMb4Bo4HEhqK19JBYFSZQ1VSF3wK5sdMdKB: (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> ain a0 a2 -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 (asm X24 (asing X25)) -> aal5 X24) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (~ (asing a1 = asing a2)) -> (~ ain (apow a2) (asing (asing a1))) -> (~ asubq (apow a2) (asing (asing a1))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> (~ (a1 = apow a2)) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ (asing a2 = apow a2)) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> ain a0 (asm a4 (asing a2)) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> (~ ain a0 (asm a4 a2)) -> ain a1 (asm a4 (apow (asing a2))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain a0 (asing (apow a2))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> asubq a4 (aun (asing (asing a1)) a4) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> (asm (apow a2) (asing (asing a1)) = a3) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal4 (apow a2) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> (~ ain (asing a2) a1).
admit.
Qed.

Theorem conj_AbstrHF_TMYjbTHVr5YhCPshySPvEfJwTZ6rQoujxho: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (~ asubq a2 a1) -> (forall X24:set, forall X25:set, asubq X25 (asing X24) -> ((X25 = a0) \/ (X25 = asing X24))) -> (~ ain a1 (apow (asing a1))) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ asubq a2 (asing a1)) -> (~ ain (asing a1) (asing a1)) -> (~ (asing a1 = a3)) -> (~ (a2 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asing a2) (apow a2)) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> (~ (a1 = apow a2)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> (~ ain a3 (asm (apow a2) (asing a1))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain a3 (asm a4 (asing a1)) -> ain a2 (asm a4 (apow (asing a2))) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain (asing a2) (aun (asing (asing a2)) a4) -> (~ ain a0 (asing (apow a2))) -> ain a1 (aun a2 (asing (apow a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asing a1) (asm a2 (asing a0)) -> asubq a2 (asm a3 (asing a2)) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal3 (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 (asm (apow a2) a2) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm (apow a2) (asing a2)) -> aex3 (asm (apow a2) (asing a1)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex4 (apow a2) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> (~ ain a3 (asing (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TML7jVPxrKWQFw2PqXXqwiqpxSXjVt8wV7o: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> ain a0 a2 -> ain a3 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, aex2 (apow (asing X24))) -> ain a1 (asing a1) -> (~ (a0 = asing a1)) -> (~ (a0 = apow (asing a1))) -> (~ ain a2 (apow (asing a2))) -> (~ asubq (asing a1) (asing a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ (a2 = asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a2 (asm a4 (asing a1)) -> ain a1 (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> (~ ain a1 (asing a3)) -> ain a3 (aun a1 (asing a3)) -> (~ ain (asm (apow a2) a2) a4) -> ain a2 (aun (asing (asing a2)) a4) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a1 (aun a4 (asing (apow a2))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq a2 (apow (asm a3 (asing a1))) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aex3 (asm (apow a2) (asing a2)) -> aex3 a3 -> aex2 (asm a3 (asing a2)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex4 (apow a2) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex5 (aun (asing (asing a2)) a4) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> (~ ain a1 (apow (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMJVMZ2REiyBFFoxCuiztqG4bnV6dtc5wNm: (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> ain a0 a1 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (~ ain a2 a0) -> (~ (a0 = a1)) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> ain a1 (asm (apow a2) (apow (asing a1))) -> ain a2 (asm a3 (asing a1)) -> (~ ain (asing a1) (asing a1)) -> (~ asubq (asing a1) (asing a2)) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> asubq (asing (asing a1)) (apow (asing a1)) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a2) (apow a2)) -> (~ ain (asing a2) a3) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> (~ ain (asing a1) a4) -> ain a0 (aun a3 (asing (asing a2))) -> (~ ain a2 (asing a3)) -> (~ ain (asing a2) (asing a3)) -> ain a0 (aun a1 (asing a3)) -> (~ ain (asing a2) (aun a1 (asing a3))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> ain a1 (aun (asing a1) (asing a3)) -> ain a1 (asm a4 (apow (asing a2))) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> (~ ain a3 (asing (apow a2))) -> ain a0 (aun a2 (asing (apow a2))) -> ain a1 (aun a2 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq a3 (aun a3 (asing (apow a2))) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (asm a2 (asing a0) = asing a1) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ aal3 (asm a4 a2)) -> (~ aal4 (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal3 a3 -> aal3 (asm a4 (asing a1)) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> ain a1 (asm (apow a2) (asing a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMWko9PMsiJqXpk8uwz9VebeyZ5zQ4YhX8f: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (~ ain a3 a3) -> (~ (a1 = a2)) -> (~ (a2 = a3)) -> (~ ain a1 (apow (asing a2))) -> (~ (a0 = asm a3 (asing a1))) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ ain (asing a1) (apow (asing a2))) -> (~ (asing a1 = asm (apow a2) a2)) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ ain a3 (apow a2)) -> (~ ain (asing (asing a1)) a3) -> (~ (asing a2 = asm a3 (asing a1))) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> (~ (a3 = apow a2)) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> ain a0 (apow (asm a3 (asing a1))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> ain a3 (aun (asing a1) (asing a3)) -> ain a0 (asm a4 (asing a2)) -> (~ ain (asing (asing a1)) a4) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> (~ ain a0 (asm a4 a2)) -> ain a3 (asm a4 (apow (asing a2))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (asm a3 (asing a1)) a4 -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal3 (asm a4 a2)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aex2 a2 -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)).
admit.
Qed.

Theorem conj_AbstrHF_TMR1NRfz2rXWfUerLqowXD56y5z4XhYeEwc: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> ain a1 a3 -> ain a2 a3 -> ain a1 a4 -> ain a3 a4 -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (~ ain a3 a3) -> (~ (a0 = a2)) -> (~ asubq a1 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> ain (asing a1) (asing (asing a1)) -> (~ ain a0 (asing a2)) -> (~ (a0 = asing a2)) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a1 (asm a3 (asing a1))) -> (~ (asing a1 = asing (asing a1))) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ ain (asing a2) (apow a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> ain a2 (aun a4 (asing (apow a2))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq a3 (aun a3 (asing (apow a2))) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm a2 (asing a1)) a1 -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal3 a2) -> (~ aal3 (aun (asing a1) (asing a3))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> aal5 (aun (asing (apow (asing a1))) a4) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex2 (aun a1 (asing a3)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex5 (aun (asing (asing a2)) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMQj6dYX46Xcs78sfnZHBBXUa1sWkuSabjq: (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> ain a0 a2 -> ain a1 a2 -> ain a2 a3 -> ain a2 a4 -> ain a3 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (~ ain a0 (asing a2)) -> (~ (a0 = asm (apow a2) a2)) -> (~ ain a2 (asing a1)) -> asubq a1 (asm a3 (asing a1)) -> (~ asubq a2 (asing a2)) -> (~ (a1 = asing a2)) -> (~ ain a1 (asm (apow a2) a2)) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ (asing a1 = asing a2)) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a0 (aun a1 (asing (apow a2))) -> ain a1 (aun a2 (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (asm a4 (asing a2)) a2) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> asubq (aun (asing a1) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal3 a2) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal2 (asm a4 a2) -> aal4 (aun a3 (asing (asing a2))) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun (asing (apow (asing a1))) a4) -> aal5 (aun (asing (asing a2)) a4) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex4 a4 -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> (asm a2 (asing a1) = a1).
admit.
Qed.

Theorem conj_AbstrHF_TMXceDPPcWm5gPfmuLP8qoPqAXrroCDh4WZ: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> ain a1 (asing a1) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a0 (asm (apow a2) a2)) -> (~ asubq (asing a2) a2) -> (~ (asing a1 = asing (asing a1))) -> (~ (asing (asing a1) = apow (asing a1))) -> (~ ain a3 (apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ ain (apow a2) (asing a2)) -> (~ asubq a3 (asing a2)) -> (~ ain a3 (asm a3 (asing a1))) -> (~ (apow (asing a1) = a3)) -> (~ (asm a3 (asing a1) = a3)) -> (~ (a3 = asm (apow a2) a2)) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a3 (asing (asing a2))) -> ain a2 (asm a4 (asing a1)) -> (~ ain (asing a2) (asing a3)) -> ain a3 (aun a1 (asing a3)) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> aal2 a2 -> aal2 (asm a3 (asing a1)) -> aal3 (asm a4 (asing a2)) -> aal4 (aun a3 (asing (apow a2))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aal5 (aun (asing (apow (asing a1))) a4) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex3 (asm a4 (asing a3)) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))).
admit.
Qed.

Theorem conj_AbstrHF_TMR3ZsGpNkisT1xznPq9LnTosLiJVE2oLRF: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> ain a1 a2 -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> asubq a2 a3 -> (~ asubq a3 a2) -> (~ (a1 = a2)) -> ain (asing a1) (asing (asing a1)) -> ain a0 (apow (asing a1)) -> ain a2 (asing a2) -> (~ ain (asing a1) a2) -> (~ (a0 = asing (asing a1))) -> ain a2 (asm (apow a2) (apow (asing a2))) -> ain a0 (apow (asing a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ ain (asing a2) (apow a2)) -> (~ ain (apow a2) (apow a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ (asing a2 = asm a3 (asing a1))) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> asubq (asm a3 (asing a1)) (apow a2) -> (~ (asing (asing a1) = a3)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asing a1) a4) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> ain a1 (aun (asing a1) (asing a3)) -> (~ ain a0 (asm a4 a2)) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm a2 (asing a1)) a1 -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> aal2 (asm (apow a2) a2) -> aal3 (asm (apow a2) (asing a2)) -> aal3 (asm a4 (asing a2)) -> aal5 (aun (asing (asing (asing a1))) a4) -> aal5 (aun (apow a2) (asing (apow a2))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> ain a2 a3.
admit.
Qed.

Theorem conj_AbstrHF_TMNsu9Q5YEWUeABWU3GCXw2mxoAGX7rPNrt: (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> ain a0 a1 -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> ain a1 a4 -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (~ ain a2 a1) -> (~ ain a0 (asing a2)) -> ain a2 (asm (apow a2) (apow (asing a1))) -> (~ ain a1 (asing (asing a1))) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ (a2 = asing a2)) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a2 (asm a4 (apow (asing a2))) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain a1 (aun a2 (asing (apow a2))) -> ain a0 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq a2 (apow (asm a3 (asing a1))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal3 (asm a4 (asing a1)) -> aal4 (aun a3 (asing (asing a2))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex2 a2 -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex2 (apow (asing a2)) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex2 (asm a4 a2) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> (~ aal5 (aun a3 (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMaKcT4PXBszjViTZG7gJNUooWmNFkF4ejh: (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a1 a1) -> (~ (a0 = a1)) -> (~ (a0 = a2)) -> (~ ain a0 (asing a1)) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ ain a1 (asm (apow a2) a2)) -> (~ ain (asing (asing a1)) a2) -> (~ asubq (asing a2) a2) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (~ ain (asing a1) a3) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (apow a2) (apow a2)) -> (~ (a2 = apow a2)) -> (~ (a1 = apow a2)) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> ain (asing a2) (apow (asing a2)) -> ain a1 (aun (asing a1) (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) a4) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> ain a1 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal3 (aun a1 (asing a3))) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> aal3 a3 -> aal4 (aun a3 (asing (apow a2))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex5 (aun a4 (asing (apow a2))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> ain a1 (asm (apow a2) (apow (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMR3u22ChDZcFoE96qth7ornheiqJYr4cCT: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (~ ain a3 a2) -> (~ ain a3 a3) -> (~ (a1 = a2)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ (a1 = asing a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ ain (asing a2) a3) -> (~ (a0 = apow a2)) -> (~ (asing a2 = asm a3 (asing a1))) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> (~ ain (asing a2) a4) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain a3 (aun a1 (asing a3)) -> ain a1 (asm a4 (apow (asing a2))) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> ain a2 (aun (asing (asing a2)) a4) -> (~ ain a0 (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> asubq a2 (asm a4 (asing a2)) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 (asm (apow a2) a2)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal3 a3 -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMWoQaPGkYv4rNQQvoNMVmXcZgDMQhasuXa: (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (~ ain a2 a0) -> (~ (a0 = a1)) -> (~ (a1 = a2)) -> (~ (a0 = a3)) -> (~ (a2 = a3)) -> (~ ain (asing a1) a0) -> (~ (a0 = apow (asing a1))) -> ain a2 (asm (apow a2) a2) -> ain a2 (asm (apow a2) (apow (asing a2))) -> (~ ain a1 (asing (asing a1))) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ asubq a3 (asing a2)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> ain a0 (apow (apow (asing a1))) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> (~ ain a1 (asing a3)) -> ain a1 (asm a4 (asing a2)) -> (~ ain (apow (asing a1)) a4) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a0 (aun a1 (asing (apow a2))) -> ain a0 (aun a2 (asing (apow a2))) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq (asm a3 (asing a1)) a4 -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (~ aal4 (asm a4 (asing a2))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (asm a4 a2) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ ain a3 (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMXRFnbmKtm1jVVh3kv9BG3HTZHpgyBk6po: (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (~ ain a2 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (~ (a0 = apow (asing a1))) -> (~ ain a2 (apow (asing a2))) -> ain a2 (asm (apow a2) (apow (asing a2))) -> (~ asubq (asing a1) (asing a2)) -> (~ ain (asing a1) (apow (asing a2))) -> (~ ain a2 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (a0 = apow a2)) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain a3 (aun (asing a1) (asing a3)) -> ain a3 (asm a4 (asing a2)) -> (~ ain (apow a2) a4) -> ain a2 (asm a4 a2) -> ain a3 (asm a4 (asing a1)) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain a0 (aun (asing (asing a2)) a4) -> ain a1 (aun a3 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq a2 (asm a4 (asing a2)) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (apow a2)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex2 (asm a3 (asing a2)) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asing (asing a1)) a4) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMcPE2NYzFz9cbBxKY1hQxhg9EvdZfvN3TK: (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> ain a1 a2 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (~ ain a0 a0) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> ain a0 (asm a3 (asing a1)) -> asubq a1 (apow (asing a1)) -> (~ ain a2 (apow (asing a1))) -> ain a2 (asm (apow a2) (apow (asing a1))) -> ain a2 (asm (apow a2) a2) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain (asm a3 (asing a1)) a2) -> (~ (asing a1 = asm a3 (asing a1))) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a1 (aun a3 (asing (asing a2))) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> ain a0 (aun a3 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (~ asubq (asm a4 (asing a2)) a2) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asm a2 (asing a0)) (asing a1) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> (asm (asm a4 a2) (asing a2) = asing a3) -> asubq a3 (asm a4 (asing a3)) -> (asm a4 (asing a3) = a3) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal3 (apow (asing a2))) -> (~ aal4 a3) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun (asing (asing a2)) a4) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asing (asing a1)) a4) -> aex5 (aun (asing (apow (asing a1))) a4) -> aex5 (aun (asing (asing a2)) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))).
admit.
Qed.

Theorem conj_AbstrHF_TMJE5G3LFd2uh6RUAH4qYXrnrrk88t6yUJs: (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (~ asubq a2 (asing a2)) -> (~ ain a3 (asing a1)) -> (~ asubq (asing a1) (asing a2)) -> (~ (a1 = asing (asing a1))) -> (~ ain (asing (asing a1)) a2) -> (~ ain (asm a3 (asing a1)) a2) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a3 (asm a3 (asing a1))) -> asubq (asm a3 (asing a1)) (apow a2) -> (~ (asing (asing a1) = a3)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain a1 (apow (apow (asing a1))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq a2 (apow (asm a3 (asing a1))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> aal2 (asm (apow a2) a2) -> aal2 (apow (asing (asing a1))) -> aal3 (asm (apow a2) (asing a1)) -> aal4 (aun a3 (asing (apow a2))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> aex4 (apow a2) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)).
admit.
Qed.

Theorem conj_AbstrHF_TMWLEewGn9RBdQpAs2fwjQeKdrSbCGneiuR: (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (~ ain a1 a1) -> (~ ain a2 a2) -> (~ asubq a2 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (~ ain (asing a1) a0) -> ain a0 (apow a2) -> asubq (asing a1) a2 -> (~ asubq a1 (asing a2)) -> (~ ain a1 (apow (asing a2))) -> (~ (a0 = asing (asing a1))) -> (~ ain a2 (asing a1)) -> (~ ain a2 (apow (asing a1))) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (~ ain (asing (asing a1)) a2) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ ain (asing a2) a3) -> (~ ain (apow a2) a3) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> (~ (asm a3 (asing a1) = a3)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain a1 (aun a3 (asing (asing a2))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> ain a3 (aun a1 (asing a3)) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (apow (asing a1)) -> aex2 (asm a3 (asing a1)) -> aex2 (apow (asing a2)) -> aex3 a3 -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm (apow a2) (asing a0)) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4).
admit.
Qed.

Theorem conj_AbstrHF_TMTbiuzZREH7wA47gSqeeNBsU9boQ3ecuiZ: (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (~ ain a2 a2) -> (~ asubq a2 a1) -> (~ asubq a4 a3) -> ain a1 (asing a1) -> ain a1 (apow a2) -> (~ ain (asing a2) a1) -> (~ ain a2 (apow (asing a1))) -> (~ ain a3 (asing a1)) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a2) (asing (asing a1))) -> (~ ain (apow a2) (asing (asing a1))) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ (a1 = asm (apow a2) a2)) -> (~ ain (asing a2) (asm (apow a2) a2)) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> ain a1 (aun (asing a1) (asing a3)) -> ain a1 (asm a4 (asing a2)) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain a1 (aun a2 (asing (apow a2))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq a1 (asm a2 (asing a1)) -> (asm a2 (asing a1) = a1) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> asubq (asm a4 (asing a3)) a3 -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (~ aal2 (asing (asing a1))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal3 (asm (apow a2) (apow (asing a2))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> (~ aal4 (asm (apow a2) (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMZQSeg9KUHopUFataB9WL9nPpinThhd6qq: (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> ain a1 a2 -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (~ asubq a4 a3) -> (~ (a1 = a2)) -> ain a0 (asm (apow a2) (asing a1)) -> (~ (a0 = asm a3 (asing a1))) -> (~ ain (asing a2) a2) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (~ ain (asing a2) (apow a2)) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ (a2 = apow a2)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ (asing a2 = apow a2)) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> ain a0 (asm a4 (asing a1)) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> ain a1 (aun a3 (asing (asing a2))) -> (~ ain a0 (asm a4 a2)) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> asubq a4 (aun (asing (asing a2)) a4) -> (asm a3 (asing a2) = a2) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> (asm (apow a2) (asing (asing a1)) = a3) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq a2 (apow (asm a3 (asing a1))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal3 (apow (asing a2))) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm a4 (asing a2))) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex3 (asm (apow a2) (asing a0)) -> aex3 (asm a4 (asing a3)) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ (a0 = a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMKs6igREbgfU4HeWfVKKDDcpTMametAfKH: (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> ain a1 (asm (apow a2) (apow (asing a1))) -> (~ (asing a1 = a2)) -> (~ ain a2 (apow (asing a2))) -> ain a2 (asm (apow a2) (apow (asing a2))) -> (~ ain (asing a1) (asing a1)) -> (~ ain a3 (asing a1)) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ (asing (asing a1) = apow (asing a1))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ ain (apow (asing a1)) a3) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> (~ ain a0 (asing (apow (asing a1)))) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> (~ ain a3 (asing (asing a2))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> ain a2 (asm a4 (asing a1)) -> ain a3 (aun (asing (asing a2)) a4) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain a2 (aun (asing (asing a2)) a4) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a1 (aun a3 (asing (apow a2))) -> ain a0 (aun a4 (asing (apow a2))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (asm a2 (asing a1) = a1) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (asm a4 (asing a3)) a3 -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 (aun a1 (asing a3))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal3 (asm a4 (asing a1)) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 a2 -> aex3 a3 -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMcUC4G8Cx5qboH7RLiapXNjH9Q3ttj8bfs: (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a3 a2) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain a1 (asm (apow a2) (apow (asing a1))) -> (~ (a0 = asing a1)) -> (~ ain a1 (apow (asing a2))) -> (~ ain (asing a1) a1) -> (~ ain (asing a2) (asing (asing a1))) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ ain a3 (asing a2)) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ (a1 = asm (apow a2) a2)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> (~ ain a0 (asing (apow (asing a1)))) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> ain a0 (aun (asing a2) (apow (asing a2))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex2 (apow (asing a2)) -> aex3 (asm a4 (asing a3)) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMKRDNmF787B3KGKvTri5Hj3quCDqKJcQL2: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> ain a0 (asm a3 (asing a1)) -> asubq (asing a1) a2 -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ ain a2 (apow (asing a1))) -> ain a2 (asm (apow a2) (apow (asing a2))) -> (~ ain (asing a1) (apow (asing a2))) -> (~ ain a1 (asing (asing a1))) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ (asing a1 = apow a2)) -> (~ (a2 = asm (apow a2) a2)) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> (~ (asm a3 (asing a1) = a3)) -> (~ (asing a2 = apow a2)) -> ain a0 (apow (apow (asing a1))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> ain a2 (asm a4 (asing a1)) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> (asm a3 (asing a2) = a2) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal5 a4) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal3 (asm a4 (asing a2)) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal5 (aun a4 (asing (apow a2))) -> aex2 (aun a1 (asing a3)) -> aex3 (asm (apow a2) (asing a2)) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (~ asubq a3 a2).
admit.
Qed.

Theorem conj_AbstrHF_TMa6WAEvHEz3eNsq4BhpdaskCdu9JoHCx4Q: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> ain a1 a3 -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> asubq (asing a1) a2 -> (~ (a0 = asing a1)) -> (~ (a0 = asm (apow a2) a2)) -> (~ ain (asing a1) (asing a2)) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ asubq (asing a1) (asing a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ (a2 = asm (apow a2) a2)) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> asubq a3 (apow a2) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ (asm a3 (asing a1) = apow a2)) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> ain a1 (aun (asing a1) (asing a3)) -> ain a3 (asm a4 (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain a3 (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a3 (aun a3 (asing (apow a2))) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (asm a2 (asing a1) = a1) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal4 a3) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal5 a4) -> (~ aal6 (aun (asing (asing a2)) a4)) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> aal2 (asm a3 (asing a1)) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal5 (aun (asing (asing a2)) a4) -> aex2 (aun (asing (asing a1)) (asing a3)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMXwcg4Zg7sc2hvQfcbjoPKRtAVhyj6vVbp: (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 (asm X24 (asing X25)) -> aal5 X24) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, asubq X25 (asing X24) -> ((X25 = a0) \/ (X25 = asing X24))) -> ain a0 (apow a2) -> (~ ain a0 (asing a1)) -> (~ asubq a2 (asing a2)) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ ain (apow a2) (apow a2)) -> (~ ain (asing (asing a1)) a3) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain a1 (asing a3)) -> ain a1 (aun (asing (asing a2)) a4) -> ain (asing a2) (aun (asing (asing a2)) a4) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (apow a2) (asing (apow a2)) -> ain a0 (aun a1 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (asm a4 (asing a3)) a3 -> asubq a3 (asm a4 (asing a3)) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (~ aal3 a2) -> (~ aal3 (asm a4 a2)) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> aal2 a2 -> aal2 (apow (asing (asing a1))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal4 (aun a3 (asing (apow a2))) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex2 (apow (asing a2)) -> aex2 (asm a3 (asing a2)) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2).
admit.
Qed.

Theorem conj_AbstrHF_TMQyeBdyXDy74W5WcLHEhvSrTFHKohCkhcA: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> ain a3 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (~ asubq a3 a2) -> ain a0 (apow (asing a1)) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> ain (asing a1) (apow a2) -> (~ ain (asing a2) a1) -> asubq a1 (apow (asing a1)) -> (~ asubq a2 (asing a1)) -> (~ (asing a1 = a3)) -> (~ (asing a1 = asing (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (~ ain (asing a2) (apow a2)) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a2 (asm a4 a2) -> ain a1 (aun a2 (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> (asm (asm a4 a2) (asing a3) = asing a2) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> (asm a4 (asing a3) = a3) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal3 (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (asm a4 a2) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun a3 (asing (asing a2))) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq a4 (aun (asing (asing a1)) a4).
admit.
Qed.

Theorem conj_AbstrHF_TMJcFvFEaf4cvZBrdeH47Qwf7aFeV5VVrw9: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (~ (a1 = a2)) -> (~ asubq a2 a0) -> ain a0 (apow (asing a1)) -> ain (asing a1) (apow a2) -> ain a1 (asm (apow a2) (asing a2)) -> (~ (asing a1 = a2)) -> (~ asubq a2 (asing a2)) -> ain a0 (apow (asing a2)) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ ain (apow a2) (asing a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> ain a0 (apow (apow (asing a1))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a1 (aun a3 (asing (asing a2))) -> (~ ain (apow (asing a1)) a4) -> ain a3 (asm a4 (asing a1)) -> ain a1 (asm a4 (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain a1 (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> asubq a3 (aun a3 (asing (apow a2))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (asm a3 (asing a2)) a2 -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq a3 (asm a4 (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> aal2 (asm (apow a2) (apow (asing a1))) -> aal3 a3 -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 a2 -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (asm (apow a2) a2) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex2 (aun a1 (asing (apow a2))) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain (asing a1) (asm (apow a2) (asing a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMbaV5dxFkc97kJtdMRLga4MM7KkBr377pJ: ain a0 a4 -> ain a1 a4 -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (~ ain a2 a1) -> ain (asing a1) (apow (asing a1)) -> ain a2 (asm (apow a2) a2) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (~ (asing a2 = asm a3 (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ (asing a2 = asm (apow a2) a2)) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> aal2 (asm a4 a2) -> aal3 (asm a4 (asing a1)) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal5 (aun (asing (apow (asing a1))) a4) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex5 (aun (asing (asing a1)) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMbfH9pgtP49ZT8VRGt3Z8dNvZkxKHRhr9Q: (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (~ (a1 = asing a1)) -> (~ ain a1 (apow (asing a2))) -> (~ ain (asing a1) (apow (asing a2))) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (~ ain (apow a2) a2) -> (~ asubq (asing a2) a2) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ ain a0 (asing (apow (asing a1)))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> ain a1 (asm a4 (asing a2)) -> (~ ain (apow a2) a4) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal3 (asm a4 a2)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal2 (asm (apow a2) a2) -> aal2 (apow (asing (asing a1))) -> aal3 a3 -> aal4 (aun a3 (asing (asing a2))) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (apow (asing a2)) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex3 (asm a4 (asing a2)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex3 (asm a4 (asing a3)) -> aex5 (aun (asing (asing a1)) a4) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMFG2E4cayoQdpVtEYL1jgX6DLWeSb61tUL: (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> ain a0 a3 -> ain a0 a4 -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (~ ain a3 a3) -> (~ ain a0 (asing (asing a1))) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ (a2 = asing (asing a1))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ ain (apow a2) (asing a2)) -> (~ ain (asing (asing a1)) a3) -> (~ (a1 = asm (apow a2) a2)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> asubq a3 (apow a2) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain a1 (aun a3 (asing (asing a2))) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain a3 (asm a4 a2) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (apow a2) (asing (apow a2)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> (asm a2 (asing a0) = asing a1) -> (asm a2 (asing a1) = a1) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal3 (asm a4 a2)) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex2 (apow (asing a1)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (apow a2) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> (~ ain (asing a2) a3).
admit.
Qed.

Theorem conj_AbstrHF_TMKe6XZxevien8pLbWnvF9ULnFp8LBsS29q: (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (~ asubq a1 a0) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> (~ (a0 = asing (asing a1))) -> (~ ain a1 (asing a2)) -> (~ (a1 = apow (asing a1))) -> (~ ain (asing a2) a2) -> (~ ain (asing a2) (asing (asing a1))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ ain a3 (asing a2)) -> (~ asubq (apow a2) (asing a2)) -> (~ ain (asm (apow a2) a2) a3) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain a2 (asm a4 (apow (asing a2))) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> (asm (apow a2) (asing (asing a1)) = a3) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal4 a4 -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex3 (asm (apow a2) (asing (asing a1))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> asubq a1 (apow (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMUTLKBKmiqyNF8VWvZ2z5tthYqAc5kxDVu: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (~ asubq a3 a2) -> (~ ain a0 (asing a1)) -> (~ asubq (asing a1) (asing a2)) -> (~ (a1 = apow (asing a1))) -> (~ (a2 = asing (asing a1))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ ain a3 (asm a3 (asing a1))) -> (~ ain (asing a2) (asm (apow a2) a2)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> ain a1 (apow (asm a3 (asing a1))) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain (apow a2) (asing (apow a2)) -> ain (apow a2) (aun a1 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> asubq (asm a2 (asing a0)) (asing a1) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> (~ aal3 (apow (asing a1))) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> aal4 (apow a2) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex2 (asm a3 (asing a1)) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex5 (aun (asing (asing a1)) a4) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> ain a1 (aun (asing a1) (asing a3)).
admit.
Qed.

Theorem conj_AbstrHF_TMZeKYRgCtkShpu7thReybEc82F4Y1Rnphr: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> ain a1 a2 -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (~ ain a2 a0) -> (~ ain a2 a1) -> (~ asubq a3 a2) -> (~ (a0 = a2)) -> (~ (a2 = a3)) -> ain a2 (asm (apow a2) (apow (asing a1))) -> (~ ain (asing a1) (asing a1)) -> (~ asubq (asing a1) (asing a2)) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ (a1 = apow (asing a1))) -> (~ ain (asm (apow a2) a2) a3) -> asubq a3 (apow a2) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> ain a0 (asm a4 (asing a1)) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain a3 (asm a4 (asing a1)) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing a1)) a4) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm a2 (asing a1)) a1 -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> asubq a2 (asm a3 (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal4 (apow a2) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 a3 -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex5 (aun (asing (asing a1)) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))).
admit.
Qed.

Theorem conj_AbstrHF_TMZ3CBa1rZNn1tduqEnGg4j1SwKEDqA9NvG: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> ain a2 a3 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> asubq a2 a3 -> ain a2 (asing a2) -> ain a1 (asm (apow a2) (apow (asing a1))) -> asubq a1 (asm a3 (asing a1)) -> (~ ain a0 (asm (apow a2) a2)) -> (~ ain (asing a1) (asing a1)) -> (~ (a1 = asing a2)) -> (~ (a2 = apow (asing a1))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> asubq (asm a3 (asing a1)) (apow a2) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> ain a0 (aun a1 (asing a3)) -> ain a2 (asm a4 a2) -> ain a2 (asm a4 (apow (asing a2))) -> (~ ain a0 (asing (apow a2))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (asing a1) (asm a2 (asing a0)) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal3 (asm a4 a2)) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal2 (asm (apow a2) (apow (asing a1))) -> aex3 (asm a4 (asing a2)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMMn26K4jGMctdz2duaj7a9t4y8SD4ze331: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (~ ain a2 a0) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> ain a1 (asm (apow a2) (apow (asing a1))) -> (~ ain a1 (asing a2)) -> (~ ain a2 (apow (asing a1))) -> ain a0 (apow (asing a2)) -> (~ asubq (asm a3 (asing a1)) a2) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ (a2 = asm a3 (asing a1))) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> (~ (asing a2 = a3)) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain a0 (asing a3)) -> (~ ain a2 (asing a3)) -> ain a1 (aun (asing a1) (asing a3)) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> ain a3 (aun (asing (asing a2)) a4) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (~ aal3 a2) -> (~ aal3 (apow (asing a1))) -> (~ aal3 (apow (asing a2))) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal2 (asm (apow a2) a2) -> aal3 a3 -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (apow (asing a2)) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex3 (asm (apow a2) (asing a1)) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex4 (aun a3 (asing (apow a2))) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> aex5 (aun (asing (apow (asing a1))) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 (asm X24 (asing X25)) -> aal5 X24).
admit.
Qed.

Theorem conj_AbstrHF_TMTFUdWYE8ZJCbGGEL7a5mmjtpu4tu93swQ: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> ain a1 a2 -> ain a3 a4 -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (~ ain a1 a1) -> (~ ain a2 a1) -> (~ (a0 = a3)) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> (~ ain a0 (asing a2)) -> (~ ain a1 (apow (asing a1))) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> ain a0 (apow (asing a2)) -> (~ ain a1 (asing (asing a1))) -> (~ ain a1 (asm (apow a2) a2)) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (~ (asing a1 = asing (asing a1))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (~ ain (apow a2) a3) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> ain a0 (apow (asing (asing a1))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> ain a0 (asm a4 (asing a1)) -> ain a2 (asm a4 (asing a1)) -> ain a2 (aun (asing a2) (apow (asing a2))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> ain a1 (aun (asing a1) (asing a3)) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain a1 (asm a4 (apow (asing a2))) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain a1 (aun a3 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq a2 (asm a4 (asing a2)) -> asubq a2 (aun a2 (asing (apow a2))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (asm a4 (asing a3) = a3) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal2 a1) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 (asm a3 (asing a1)) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex5 (aun (asing (asing a1)) a4) -> aex5 (aun a4 (asing (apow a2))) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))).
admit.
Qed.

Theorem conj_AbstrHF_TMTF7vwrgfYc6SYeWg2dSHUZppRZmyXrmn6: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> ain a0 a3 -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> ain a1 (asing a1) -> ain a1 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) (apow a2) -> (~ ain a1 (asing a2)) -> asubq a1 (apow (asing a1)) -> (~ ain a2 (asing a1)) -> ain a2 (asm (apow a2) a2) -> (~ ain (asm a3 (asing a1)) a2) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ ain a3 (asing a2)) -> (~ (a2 = apow a2)) -> (~ asubq (apow a2) (asing a2)) -> (~ (asing (asing a1) = a3)) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> ain a2 (aun a3 (asing (asing a2))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> ain a3 (asing a3) -> (~ ain a2 (aun a1 (asing a3))) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> (asm a4 (asing a3) = a3) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> aal2 (asm a4 a2) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex3 (asm a4 (asing a1)) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex5 (aun (asing (asing a1)) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal3 a2).
admit.
Qed.

Theorem conj_AbstrHF_TMLshzS2eG7Z6e6SzF8Le3hQGPSYiNxJGVX: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> ain a1 a2 -> ain a0 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ ain a3 a2) -> (~ (a1 = a2)) -> (~ (a0 = a3)) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ (a0 = apow (asing a1))) -> ain a2 (apow a2) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (a2 = asm (apow a2) a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> asubq (asm a3 (asing a1)) (apow a2) -> (~ (asm (apow a2) a2 = apow a2)) -> ain a1 (apow (apow (asing a1))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> ain a3 (asing a3) -> ain a3 (asm a4 (asing a2)) -> (~ ain (asm (apow a2) a2) a4) -> (~ ain (asing a1) (asm a4 a2)) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain a0 (aun a1 (asing (apow a2))) -> ain a0 (aun a2 (asing (apow a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (~ aal4 a3) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 (aun a2 (asing (apow a2))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex4 (aun a3 (asing (asing a2))) -> aex3 (asm a4 (asing a3)) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMYiuQmka6sJ7SKvatzny9DtMD8HCc9uGUC: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> asubq a1 a2 -> asubq a2 a3 -> (~ (a0 = a3)) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain a0 (asm (apow a2) (asing a2)) -> ain a0 (asm a3 (asing a1)) -> asubq a1 (asm a3 (asing a1)) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ (asing (asing a1) = apow (asing a1))) -> (~ (a2 = asing a2)) -> (~ asubq (apow a2) (asing a2)) -> (~ ain (asing a2) a3) -> (~ (a1 = asm (apow a2) a2)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a2) (asing (asing a2)) -> ain a3 (asing a3) -> ain a0 (aun a1 (asing a3)) -> ain a3 (aun a1 (asing a3)) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal4 a3) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex2 (apow (asing a2)) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex3 (asm a4 (asing a1)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))).
admit.
Qed.

Theorem conj_AbstrHF_TMdqeeguJ28c2Z73KZE9L7Mpg2wDj64ngHK: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (~ ain a1 a0) -> (~ (a1 = a2)) -> (~ ain a2 (apow (asing a1))) -> (~ (a1 = asing a2)) -> (~ (a2 = asm (apow a2) a2)) -> (~ ain (asing a2) a3) -> (~ ain (asm (apow a2) a2) a3) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> ain a3 (aun a1 (asing a3)) -> ain a3 (aun (asing a1) (asing a3)) -> ain a3 (asm a4 (apow (asing a2))) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain (apow a2) (aun a2 (asing (apow a2))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal2 (asing a1)) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal4 a3) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMdxGy6JkSAByyfuaqwHcA41Q5vrRyr3HWW: (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a1 a0) -> (~ ain a1 a1) -> (~ ain a3 a3) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> ain a0 (apow (asing a1)) -> ain a0 (apow a2) -> (~ ain (asing a1) a2) -> ain a0 (asm (apow a2) (asing a1)) -> (~ asubq a1 (asing a2)) -> (~ ain (asm a3 (asing a1)) a2) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a3 (asing a2)) -> ain a0 (apow (apow (asing a1))) -> ain a1 (apow (apow (asing a1))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a1 (aun a3 (asing (asing a2))) -> (~ ain (asing a2) (asing a3)) -> ain a0 (asm a4 (asing a2)) -> ain a3 (asm a4 (asing a2)) -> (~ ain a3 (asing (apow a2))) -> ain a2 (aun a3 (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing a2)) a4) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asing a1) (asm a2 (asing a0)) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (asm (asm a4 a2) (asing a3) = asing a2) -> asubq (asm a4 (asing a3)) a3 -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal3 (aun a1 (asing a3))) -> (~ aal4 (asm (apow a2) (asing a2))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (apow a2)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> aal2 (asm a3 (asing a1)) -> aal3 (asm (apow a2) (apow (asing a2))) -> aal4 (aun a3 (asing (asing a2))) -> aex2 (asm a4 a2) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aex3 (asm (apow a2) (asing a0)) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))).
admit.
Qed.

Theorem conj_AbstrHF_TMHMj7zr9dEdgqANMHNo9uhLWTFcngoXoFK: ain a2 a3 -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (~ ain a0 (asing a1)) -> ain a0 (asm (apow a2) (asing a1)) -> (~ ain (asing a2) a1) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ asubq a2 (asing a1)) -> (~ ain a3 (asing a1)) -> (~ asubq (asing a1) (asing a2)) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (~ (a2 = apow (asing a1))) -> (~ ain (asing (asing a1)) a3) -> (~ ain (asing a2) (asm a3 (asing a1))) -> (~ (a1 = asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> ain (asing a2) (apow (asing a2)) -> ain a0 (aun (asing a2) (apow (asing a2))) -> ain a3 (asing a3) -> (~ ain a2 (aun a1 (asing a3))) -> (~ ain (apow a2) a4) -> ain a3 (asm a4 (apow (asing a2))) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain (asing a1) (asing (apow a2))) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq a4 (aun (asing (asing a2)) a4) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq a2 (asm a3 (asing a2)) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (~ aal2 (asing a1)) -> (~ aal2 (asing (asing a1))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (~ aal4 (asm a4 (asing a2))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> aal2 a2 -> aal3 a3 -> aal5 (aun (apow a2) (asing (apow a2))) -> aex2 (asm a3 (asing a2)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (~ ain (asing a1) (asm a4 a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMJRWJ8V3Jm949Jt2wbeEbcMyn7TkqLuhmB: (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> ain a0 a3 -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ ain a0 a0) -> ain a2 (asm (apow a2) a2) -> ain a0 (apow (asing a2)) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ ain a1 (asm (apow a2) a2)) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (~ (a1 = apow (asing a1))) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> (~ (asm a3 (asing a1) = a3)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ (a3 = apow a2)) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> ain (asing a2) (apow (asing a2)) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> (~ ain (asing a2) a4) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain a0 (asm a4 (asing a2)) -> (~ ain (asing (asing a1)) a4) -> ain a1 (asm a4 (apow (asing a2))) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain a0 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> asubq a4 (aun (asing (asing a1)) a4) -> asubq a4 (aun a4 (asing (apow a2))) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> asubq a3 (asm a4 (asing a3)) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal2 (asing a1)) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex2 (asm a3 (asing a2)) -> aex3 (aun (asing a2) (apow (asing a2))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMPLKn5W9rFtX7xPNfnxwsHuhpP2wtxziwv: (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> asubq a1 (asing a0) -> (a1 = asing a0) -> (~ ain a3 a2) -> asubq a3 a4 -> (~ ain a0 (asing a1)) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> (~ (a0 = asing (asing a1))) -> (~ asubq a2 (asing a2)) -> (~ ain (asing a1) (asing a1)) -> (~ asubq (asing a1) (asing a2)) -> (~ ain (asing (asing a1)) a2) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> asubq (asing (asing a1)) (apow (asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> (~ (asing (asing a1) = a3)) -> (~ (asm a3 (asing a1) = a3)) -> (~ ain (asing a2) (asm (apow a2) a2)) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ (asing a2 = apow a2)) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a0 (asm a4 (asing a1)) -> ain a0 (aun (asing a2) (apow (asing a2))) -> ain a0 (aun a3 (asing (asing a2))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain a2 (asm a4 (apow (asing a2))) -> (~ ain (asing a2) (asing (apow a2))) -> ain a1 (aun a2 (asing (apow a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq a2 (asm a3 (asing a2)) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal3 (asm (apow a2) (asing a2)) -> aal3 (asm (apow a2) (apow (asing a2))) -> aal5 (aun (asing (asing a1)) a4) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> (~ ain (asing a2) (asm a3 (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMUegnTqSQu6ai4jkFG1Th7FjSSs3qxpwDr: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (~ ain a0 a0) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> ain a1 (apow a2) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a1) (asing a2)) -> (~ ain a2 (apow (asing a1))) -> ain a2 (asm (apow a2) (asing a1)) -> (~ ain a2 (apow (asing a2))) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ asubq (asing a2) a2) -> (~ asubq (asm (apow a2) a2) a2) -> (~ (asing a1 = asm a3 (asing a1))) -> (~ ain (asing a1) a3) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ (a2 = asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (~ ain (asing a2) (asm (apow a2) a2)) -> ain a0 (apow (asing (asing a1))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (~ aal3 (asm a4 a2)) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> aal5 (aun (asing (asing a1)) a4) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (asm a4 a2) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMGdcXiaSH9yF6v4MTA3QA6SetbBara42E9: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (~ ain a2 a0) -> (~ asubq a1 a0) -> ain a2 (asing a2) -> (~ ain (asing a1) a2) -> ain (asing a1) (asm (apow a2) a2) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ (a0 = asing (asing a1))) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ ain (asing (asing a1)) a3) -> (~ (asing a2 = asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (apow a2) (apow (asing a2))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> (~ ain (asm (apow a2) a2) a4) -> ain (asing a1) (aun (asing (asing a1)) a4) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain a1 (aun (asing (asing a2)) a4) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a0 (aun (asing (asing a2)) a4) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal2 (asing (asing a1))) -> (~ aal4 (asm a4 (asing a1))) -> aal3 (asm (apow a2) (asing a1)) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMdspvfVrX3WsbXvYRuXnWJThFKdTz8qt5A: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a2 a2) -> (~ asubq a3 a2) -> (~ asubq a4 a3) -> (~ (a2 = a3)) -> ain a2 (asing a2) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> (~ ain (asing a1) a2) -> ain a2 (apow a2) -> (~ ain a3 (asing a1)) -> (~ asubq (asm a3 (asing a1)) a2) -> (~ (asing a1 = asm (apow a2) a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ ain (asing a2) a3) -> asubq (asm a3 (asing a1)) (apow a2) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain a0 (apow (apow (asing a1))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> (~ ain a2 (aun a1 (asing a3))) -> ain a1 (asm a4 (apow (asing a2))) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a2 (aun a3 (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> (asm (apow a2) (asing (asing a1)) = a3) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> aal3 (asm a4 (asing a2)) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex2 (aun (asing a2) (asing (asing a2))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (~ ain a3 (apow a2)).
admit.
Qed.

Theorem conj_AbstrHF_TML31nJVUBU9P5iZ1qaB5vpuUT8uA7gGtYF: ain a1 a3 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> (~ ain a2 (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) a2) -> (~ asubq (asm (apow a2) a2) a2) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ ain (apow a2) (apow a2)) -> (~ ain a3 (asing a2)) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (~ ain (apow a2) a3) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> (~ (a3 = asm (apow a2) a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ (asing a2 = apow a2)) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> ain a3 (aun a1 (asing a3)) -> ain a1 (asm a4 (asing a2)) -> adisjoint (apow (asing a1)) (asm a4 a2) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a2 (aun a2 (asing (apow a2))) -> asubq a4 (aun (asing (asing a1)) a4) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (~ aal2 (asing a1)) -> (~ aal3 (apow (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> aal3 a3 -> aal3 (aun (asing a2) (apow (asing a2))) -> aal5 (aun (asing (asing a2)) a4) -> aex2 (aun a1 (asing (apow a2))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex3 (asm (apow a2) (asing a0)) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)).
admit.
Qed.

Theorem conj_AbstrHF_TMM61w67AkjJw1y58cKHBLNbntwWXF24rWT: (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> ain a1 a2 -> ain a0 a4 -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (~ ain a2 a2) -> asubq (asing a1) a2 -> ain a2 (asm a3 (asing a1)) -> (~ ain (asing a1) (asing a1)) -> (~ asubq (asm a3 (asing a1)) a2) -> (~ (a2 = asing (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (~ ain (asing a2) (apow a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ (asing a2 = asm a3 (asing a1))) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> ain a3 (asing a3) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> aal3 (asm (apow a2) (asing a2)) -> aal4 (apow a2) -> aal4 (aun a3 (asing (apow a2))) -> aal5 (aun (asing (asing a2)) a4) -> aex2 a2 -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex4 (aun a3 (asing (apow (asing a1)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMb7YgX7tJ5cRNwdbNGjzhiqWjTMWFmbgwK: (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> ain a1 a2 -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (~ (a0 = a1)) -> (~ (a0 = asing (asing a1))) -> (~ ain (asing a1) (asing a1)) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a1) a3) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (~ (a2 = asm a3 (asing a1))) -> (~ (a2 = asm (apow a2) a2)) -> (~ ain a3 (asm a3 (asing a1))) -> ain a0 (apow (asing (asing a1))) -> (~ ain a0 (asing (apow (asing a1)))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> (~ ain a2 (aun a1 (asing a3))) -> ain a3 (asm a4 a2) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> asubq (asm a3 (asing a1)) a4 -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal4 (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal5 (aun (asing (asing a1)) a4) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex2 (apow (asing a2)) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))).
admit.
Qed.

Theorem conj_AbstrHF_TMTDd3hNsK1Sm6VmmrpjH4Wmp6Pch6PyxYw: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> ain a1 a2 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (~ (a1 = a3)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> (~ ain (asing a1) a0) -> (~ (asing a1 = a2)) -> (~ ain a0 (asm (apow a2) a2)) -> (~ asubq (asing a1) (asing (asing a1))) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ asubq (asm a3 (asing a1)) a2) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ (asing a1 = asing (asing a1))) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (~ asubq (apow a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> (~ ain a1 (asing (apow (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> ain a2 (aun a3 (asing (asing a2))) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain a2 (aun a3 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> asubq (asing a1) (asm a2 (asing a0)) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 (aun (asing a1) (asing a3))) -> (~ aal3 (asm a4 a2)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (apow (asing a1)) -> aex2 (asm a4 a2) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex3 (aun a2 (asing (apow a2))) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex5 (aun a4 (asing (apow a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))).
admit.
Qed.

Theorem conj_AbstrHF_TMJ7NTWpwpEUFXSPrT8thC6qg2BXREkbbFU: (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (~ asubq a2 a0) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (~ ain (asing a1) (asing a2)) -> (~ (a1 = asm a3 (asing a1))) -> (~ (asing a1 = asm a3 (asing a1))) -> asubq (asing (asing a1)) (apow (asing a1)) -> (~ (a2 = asm (apow a2) a2)) -> (~ (asm a3 (asing a1) = a3)) -> asubq a3 (apow a2) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain a1 (apow (apow (asing a1))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain a3 (asing (asing a2))) -> (~ ain (apow a2) (asing (asing a2))) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> (~ ain (apow a2) (apow (asing a2))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain a0 (aun a1 (asing a3)) -> ain a3 (asm a4 (apow (asing a2))) -> ain a1 (aun a3 (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> asubq a4 (aun (asing (asing a2)) a4) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex2 (aun a1 (asing (apow a2))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMNJYV98YoTsLwntgp9wMRGNHM1EPd4VLTE: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (~ ain a2 a0) -> (~ ain a2 a1) -> (~ ain a1 (apow (asing a2))) -> (~ (a0 = asing (asing a1))) -> (~ ain a1 (asing a2)) -> ain a2 (apow a2) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ (asing a2 = asm a3 (asing a1))) -> (~ (asing a2 = a3)) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> ain a0 (apow (apow (asing a1))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm a2 (asing a0)) (asing a1) -> (asm a2 (asing a0) = asing a1) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> aal2 a2 -> aal2 (asm a3 (asing a1)) -> aal3 (asm (apow a2) (asing a1)) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex3 (aun a2 (asing (apow a2))) -> aex4 (apow a2) -> aex3 (asm (apow a2) (asing a0)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> (~ ain a3 (asm (apow a2) (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMLquGZFn7yhRZqpe49qaAYyM1PFRSi8DpC: (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> ain a1 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> ain a0 (asm a3 (asing a1)) -> asubq (asing a1) a2 -> (~ ain a1 (apow (asing a2))) -> (~ (asing a1 = a2)) -> (~ asubq a2 (asing a1)) -> (~ asubq (asing a1) (asing a2)) -> (~ ain a1 (asm (apow a2) a2)) -> asubq (asing (asing a1)) (apow (asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (~ ain (asing a2) (apow a2)) -> (~ ain (apow a2) (asing a2)) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (~ (asing a2 = a3)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> (~ ain (asing a1) a4) -> (~ ain a1 (asing a3)) -> (~ ain (asm a3 (asing a1)) a4) -> ain a3 (asm a4 (asing a2)) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain a3 (asm a4 a2) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain a0 (aun a3 (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun a4 (asing (apow a2))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> asubq a2 (asm a4 (asing a2)) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> asubq a4 (aun (asing (asing a2)) a4) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal3 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (asm a4 a2) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex4 (aun a3 (asing (asing a2))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)).
admit.
Qed.

Theorem conj_AbstrHF_TMbUUj8UAtZtvj7xfVkfJyApH1HNBnTtDN4: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> ain a1 a3 -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (~ ain a2 a0) -> (~ ain a3 a3) -> asubq a2 a3 -> (~ asubq a1 (asing a1)) -> (~ (a0 = asing a2)) -> (~ (a0 = asm a3 (asing a1))) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ ain (apow a2) a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (a2 = asing a2)) -> (~ ain (asm (apow a2) a2) a3) -> (~ (apow (asing a1) = a3)) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> ain a0 (apow (asing (asing a1))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> ain a1 (asm a4 (asing a2)) -> (~ ain (apow (asing a1)) a4) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain a2 (asm a4 a2) -> ain a3 (asm a4 (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq a4 (aun a4 (asing (apow a2))) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (asm a4 (asing a3)) a3 -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (~ aal3 (aun (asing a1) (asing a3))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal4 a4 -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex4 (apow a2) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMWdSPAyy5yutSf2iCSJxpXQXrSWkQut1ps: (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (~ asubq a2 a0) -> ain a1 (aun (asing a1) (asing (asing a1))) -> (~ (a0 = asm a3 (asing a1))) -> (~ (a1 = asm a3 (asing a1))) -> (~ (asing a1 = a3)) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> (~ ain a1 (asing (apow (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain (apow a2) (apow (asing a2))) -> ain a0 (asm a4 (asing a1)) -> ain a3 (asing a3) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> ain (apow a2) (asing (apow a2)) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> asubq a2 (asm a4 (asing a2)) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (~ aal2 (asing a3)) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex3 (asm (apow a2) (asing a0)) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> aal5 (aun (asing (asing (asing a1))) a4).
admit.
Qed.

Theorem conj_AbstrHF_TMby3LETewPfHyQYcdGWRXPkmR479kA9Kmd: (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> ain a1 (asing a1) -> (~ ain a0 (asing a2)) -> (~ ain a0 (asing a1)) -> (~ asubq a1 (asing a2)) -> (~ ain (asing a1) a1) -> ain (asing a1) (apow (asing a1)) -> (~ ain a2 (apow (asing a1))) -> (~ ain (asing a1) (asing a1)) -> (~ (a1 = asm a3 (asing a1))) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ (a0 = apow a2)) -> (~ (a3 = asm (apow a2) a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> ain a0 (apow (asm a3 (asing a1))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> ain a3 (aun a1 (asing a3)) -> ain a1 (aun (asing a1) (asing a3)) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ ain (asing a1) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> asubq a3 (asm a4 (asing a3)) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (~ aal2 (asing a2)) -> (~ aal3 a2) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal3 (asm a4 (asing a2)) -> aex2 (asm a3 (asing a1)) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex2 (asm a3 (asing a2)) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))).
admit.
Qed.

Theorem conj_AbstrHF_TMQRuotbw7AZtWbFzFvePicJJjrShupXRX5: (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (~ ain a2 a0) -> (~ (a2 = a3)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> (~ (a0 = apow (asing a1))) -> (~ (a0 = asm (apow a2) a2)) -> asubq a1 (apow (asing a1)) -> ain a2 (asm (apow a2) (apow (asing a1))) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ asubq (asing a2) a2) -> (~ asubq (asm a3 (asing a1)) a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a3 (apow a2)) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> (~ (a0 = apow a2)) -> (~ ain (apow a2) a3) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain a1 (apow (apow (asing a1))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain a2 (aun a3 (asing (asing a2))) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal2 (asing a3)) -> (~ aal3 (apow (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (~ aal5 a4) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal2 (asm a3 (asing a1)) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex2 (aun a1 (asing a3)) -> aex2 (aun a1 (asing (apow a2))) -> aex4 a4 -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMQ7nFYE9ZMDeKa9NPHnYQLMYK2MuS9C1V3: (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> ain a0 a1 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (~ (a0 = a1)) -> (~ (a1 = a3)) -> (~ asubq a2 (asing a1)) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ asubq a2 (asm a3 (asing a1))) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ (asing a1 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ ain (apow a2) (asing a2)) -> (~ (a3 = asm (apow a2) a2)) -> (~ ain a1 (asing (apow (asing a1)))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a2) (asing (asing a2)) -> (~ ain (asing a2) (aun a1 (asing a3))) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain a3 (asm a4 a2) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a1 (aun a3 (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> (asm (asm a4 a2) (asing a2) = asing a3) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (~ aal2 (asing (apow a2))) -> (~ aal3 (apow (asing a1))) -> (~ aal4 (asm (apow a2) (asing a1))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> aal2 (asm a4 a2) -> aal3 a3 -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal5 (aun (apow a2) (asing (apow a2))) -> aex3 (asm (apow a2) (asing a2)) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex3 (asm a4 (asing a0)) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))).
admit.
Qed.

Theorem conj_AbstrHF_TMYi8VX6WWMPnbr3TZpGmJvexghBQDTYHp2: ain a1 a4 -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a0 a0) -> (~ (a1 = a3)) -> ain (asing a1) (asm (apow a2) a2) -> ain a0 (asm (apow a2) (asing a1)) -> (~ (a0 = apow (asing a1))) -> (~ asubq (asing a1) (asing a2)) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ ain (asing a2) (asm a3 (asing a1))) -> (~ ain (apow a2) a3) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ (asm (apow a2) a2 = apow a2)) -> (~ ain a1 (asing (apow (asing a1)))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> (~ ain a0 (asing (apow a2))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (~ aal3 (asm a4 a2)) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex3 (asm (apow a2) (asing a1)) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> aex4 (apow a2) -> aex3 (asm a4 (asing a0)) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))).
admit.
Qed.

Theorem conj_AbstrHF_TMVkthpDTMP69aAabXYWps51LXTEHuNp5tN: ain a0 a2 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> ain a1 (asm (apow a2) (asing a2)) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (~ ain (asing a1) (asing (asing a2))) -> ain (asing a2) (asing (asing a2)) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> (asm (asm a4 a2) (asing a3) = asing a2) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (~ aal4 (asm a4 (asing a2))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> aal2 (asm a3 (asing a1)) -> aal3 (aun a2 (asing (apow a2))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal5 (aun (asing (asing a1)) a4) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ ain (apow a2) (apow (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMKjS7ETQyXRmURRsJQMyovvh1Y1BYPbfn7: ain a1 a2 -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (~ ain a1 a0) -> (~ (a1 = a3)) -> (~ asubq a1 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (~ asubq a1 (asing a1)) -> (~ (a0 = asm (apow a2) a2)) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ ain (asing a1) (apow (asing a2))) -> (~ ain (asing (asing a1)) a2) -> (~ asubq (asing a2) a2) -> (~ ain a2 (asing (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (~ (asing (asing a1) = apow (asing a1))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (~ (a0 = apow a2)) -> (~ (asing (asing a1) = a3)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain a1 (asm a4 (apow (asing a2))) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> ain a0 (aun a2 (asing (apow a2))) -> ain a1 (aun a2 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (asm a2 (asing a0)) (asing a1) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal2 (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal3 (asm a4 a2)) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (aun a1 (asing a3)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMdSvPT98j1YoJNytuCMBUq2e7jb2fDoyTn: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> ain a2 a3 -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (~ ain a3 a2) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> (forall X24:set, forall X25:set, asubq X25 (asing X24) -> ((X25 = a0) \/ (X25 = asing X24))) -> (~ ain (asing a1) a0) -> ain a1 (aun (asing a1) (asing (asing a1))) -> ain a0 (apow a2) -> (~ asubq a1 (asing a2)) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ (a0 = asm a3 (asing a1))) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> asubq (asing (asing a1)) (apow (asing a1)) -> (~ (asing (asing a1) = apow (asing a1))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ ain (asm (apow a2) a2) a3) -> (~ (asing (asing a1) = a3)) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> ain a0 (aun (asing (asing a2)) a4) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> asubq (asing a1) (asm a2 (asing a0)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> (asm (apow a2) (asing (asing a1)) = a3) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal3 (aun (asing a1) (asing a3))) -> (~ aal3 (asm a4 a2)) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal5 (apow a2)) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> (~ aal6 (aun (asing (asing a2)) a4)) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal4 (aun a3 (asing (apow a2))) -> aex2 a2 -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMRGdvdKKQoJHAggMWTpdjspa6C8PcjYBoA: (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> ain a0 a4 -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (~ ain a3 a2) -> (~ (a0 = a1)) -> (~ (a1 = a3)) -> ain (asing a1) (asm (apow a2) a2) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a3 (asing a1)) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ asubq (asing a1) (asing a2)) -> (~ ain (asing a1) a3) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ ain (apow a2) (apow a2)) -> (~ (a1 = apow a2)) -> (~ (a3 = apow a2)) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asing a2) a4) -> (~ ain a2 (asing a3)) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> (~ ain (asing a1) (asm a4 a2)) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> (~ ain a1 (asing (apow a2))) -> ain a1 (aun a2 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (asm a4 (asing a3) = a3) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal5 (apow a2)) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal2 (asm (apow a2) (apow (asing a1))) -> aal3 (aun a2 (asing (apow a2))) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2.
admit.
Qed.

Theorem conj_AbstrHF_TMQHEcKGcMMrACbX4VHhCSZXX6gwiq2sTRf: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> ain a1 a2 -> ain a1 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> asubq a2 a3 -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> ain a0 (asm (apow a2) (asing a2)) -> ain a1 (asm (apow a2) (apow (asing a1))) -> (~ ain (asing a1) a2) -> ain a2 (asm a3 (asing a1)) -> asubq a1 (asm a3 (asing a1)) -> (~ ain a2 (apow (asing a2))) -> (~ ain (asing a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ (a2 = apow a2)) -> (~ ain (apow a2) (asing a2)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (~ (asing a2 = asm (apow a2) a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain a1 (apow (asm a3 (asing a1))) -> ain a3 (aun (asing a1) (asing a3)) -> (~ ain (asing (asing a1)) a4) -> ain a2 (asm a4 a2) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> (asm (asm a4 a2) (asing a3) = asing a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal2 a1) -> (~ aal2 (asing a2)) -> (~ aal3 (aun a1 (asing a3))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aal5 (aun a4 (asing (apow a2))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (aun a1 (asing a3)) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex4 (apow a2) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMLrewqJqHYAw7sF4gVvdbKRsgb8op5vEXC: (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> ain a0 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> ain a0 (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> ain a0 (asm (apow a2) (asing a1)) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ ain (asing a2) a1) -> (~ (asing a1 = a2)) -> (~ ain a2 (asing (asing a1))) -> (~ (asing a1 = asing a2)) -> (~ (a2 = asing (asing a1))) -> (~ ain a3 (asing a2)) -> (~ (a2 = asm (apow a2) a2)) -> (~ (a3 = apow a2)) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain a1 (apow (apow (asing a1))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> (~ ain (asing a2) (asing a3)) -> ain a0 (asm a4 (asing a2)) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> aal2 (asm a3 (asing a1)) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMV1G25UnhSF2m6GaEp3LrHM2Et4ww3RyiF: (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> ain a1 a4 -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (~ asubq a3 a2) -> (~ asubq a1 a0) -> (~ (a0 = asing (asing a1))) -> (~ ain a2 (asing a1)) -> (~ ain a0 (asm (apow a2) a2)) -> ain a0 (apow (asing a2)) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ asubq a2 (asm a3 (asing a1))) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ (a2 = asm (apow a2) a2)) -> (~ (a2 = apow a2)) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain a0 (asm a4 (asing a1)) -> ain a0 (aun (asing a2) (apow (asing a2))) -> ain a1 (apow (asm a3 (asing a1))) -> ain a1 (asm a4 (apow (asing a2))) -> ain (asing a2) (aun (asing (asing a2)) a4) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (apow a2) (asing (apow a2)) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a0 (aun a4 (asing (apow a2))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal3 (aun (asing a1) (asing a3))) -> (~ aal4 a3) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal5 (aun a4 (asing (apow a2))) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex2 (asm a4 a2) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))).
admit.
Qed.

Theorem conj_AbstrHF_TMKZNTWR91rse1HPeBgFRKzjTZbnVmCK1tr: (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ (a0 = a3)) -> (~ (a2 = a3)) -> ain a0 (asm (apow a2) (asing a2)) -> (~ asubq a1 (asing a1)) -> ain a2 (apow a2) -> (~ ain a2 (apow (asing a1))) -> ain a2 (asm (apow a2) (apow (asing a1))) -> (~ asubq (asm (apow a2) a2) a2) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (~ asubq (apow a2) (asing (asing a1))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ ain a1 (asing (apow (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain (asing a2) (asing a3)) -> (~ ain (asm a3 (asing a1)) a4) -> ain a2 (aun (asing (asing a2)) a4) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain a0 (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm a3 (asing a2)) a2 -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal3 (apow (asing a1))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> ain (asing (asing a1)) (apow (asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMW67yu9YHKdHqSejfM4KfwqDyNDZRvoJRt: (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> ain a0 a2 -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> asubq a2 a3 -> (~ asubq a3 a2) -> (~ ain a2 (apow (asing a1))) -> ain a2 (asm (apow a2) (apow (asing a2))) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ (a2 = asm a3 (asing a1))) -> ain a0 (apow (asing (asing a1))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a2 (asm a4 (asing a1)) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> (~ ain a2 (aun a1 (asing a3))) -> (~ ain (asm (apow a2) a2) a4) -> (~ ain (asing a1) (asm a4 a2)) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain a1 (aun a3 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a1 (aun a4 (asing (apow a2))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq a2 (asm a4 (asing a2)) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal3 (aun (asing a1) (asing a3))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (~ aal5 a4) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex3 (asm a4 (asing a1)) -> aex5 (aun (asing (apow (asing a1))) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)).
admit.
Qed.

Theorem conj_AbstrHF_TMQgYWrT28AvBDsDBgdt4tEibKiswZw11ds: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> asubq a1 (asing a0) -> (forall X24:set, aex2 (apow (asing X24))) -> ain a1 (asing a1) -> (~ ain a1 (apow (asing a1))) -> (~ (a0 = asing (asing a1))) -> (~ (a0 = asm (apow a2) a2)) -> asubq a1 (apow (asing a1)) -> ain a2 (asm (apow a2) (apow (asing a1))) -> (~ (a1 = asing a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (apow a2) (apow (asing a1))) -> asubq a3 (apow a2) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain a1 (apow (apow (asing a1))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asing a2) (asing a3)) -> ain a0 (aun a1 (asing a3)) -> ain a1 (asm a4 (asing a2)) -> (~ ain (asing a1) (asm a4 a2)) -> ain a2 (asm a4 a2) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain a1 (asing (apow a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain a2 (aun a3 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (~ aal3 (asm a3 (asing a1))) -> (~ aal3 (asm a4 a2)) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal4 (asm a4 (asing a2))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aex2 (asm (apow a2) a2) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex4 (aun a3 (asing (asing a2))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex5 (aun (asing (asing a2)) a4) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ (asm (apow a2) a2 = apow a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMMvokmR5NPu8YYbunss7H6NhV5xN8QDEWS: (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (~ ain a0 a0) -> (~ ain a1 a1) -> (~ ain a0 (asing (asing a1))) -> asubq a1 (asm a3 (asing a1)) -> ain a2 (apow a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ (asing a2 = a3)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> (~ ain (asing a2) a4) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> (~ ain (apow a2) a4) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a0 (aun a4 (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (asm a4 (asing a2)) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing a1)) a4) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm a2 (asing a1)) a1 -> asubq a1 (asm a2 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> aal2 a2 -> aal3 (asm (apow a2) (apow (asing a2))) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex2 (aun a1 (asing (apow a2))) -> aex3 (asm a4 (asing a2)) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))).
admit.
Qed.

Theorem conj_AbstrHF_TMTzHiLGZ6cVijXyRqkUuoKSSC4R253HNYk: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> ain a0 a3 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (~ ain a2 a1) -> (~ ain (asing a1) a1) -> ain a1 (asm (apow a2) (asing a2)) -> (~ ain (asing a2) a1) -> asubq a1 (apow (asing a1)) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ (a1 = apow (asing a1))) -> (~ (asing a1 = asing (asing a1))) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ ain (apow a2) a3) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> ain a0 (apow (asing (asing a1))) -> (~ ain a1 (asing (apow (asing a1)))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain a0 (asm a4 (asing a1)) -> ain a2 (aun a3 (asing (asing a2))) -> ain a3 (asm a4 (asing a1)) -> ain a0 (aun (asing (asing a2)) a4) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> (~ ain a1 (asing (apow a2))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> (asm (apow a2) (asing (asing a1)) = a3) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> (asm a4 (asing a3) = a3) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (~ aal2 (asing a1)) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (apow (asing a2)) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex3 a3 -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> aex4 (aun a3 (asing (apow a2))) -> aex5 (aun (asing (asing a1)) a4) -> aex5 (aun (apow a2) (asing (apow a2))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> (~ (a3 = asm (apow a2) a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMMXUT5frMrnDqZQVF8SX2CGX9jid4B5y77: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (~ asubq a2 a1) -> (~ (a2 = a3)) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (~ ain a0 (asing a1)) -> (~ ain a0 (asing (asing a1))) -> ain a2 (asm (apow a2) (apow (asing a2))) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a1) a3) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (asing (asing a1) = a3)) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain a1 (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> (~ ain a2 (aun a1 (asing a3))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> (~ ain (asing a2) (asing (apow a2))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain a2 (aun a3 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq (asing a1) (asm a2 (asing a0)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (asm a3 (asing a1)) a4 -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (~ aal3 (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> aal4 (aun a3 (asing (asing a2))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex3 (asm a4 (asing a1)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> (~ (asm (apow a2) a2 = apow a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMZPL7wUsyxvr3ye8mgy9MMS6yiB9t26Kdu: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> ain a3 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> asubq a3 a4 -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> ain (asing a1) (asing (asing a1)) -> (~ ain a1 (apow (asing a1))) -> asubq (asing a1) a2 -> (~ ain a1 (asm (apow a2) a2)) -> (~ ain (asing a2) (asing (asing a1))) -> (~ ain (apow (asing a1)) a3) -> (~ (a1 = apow a2)) -> (~ (asing a2 = asm a3 (asing a1))) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> (~ ain a1 (asing a3)) -> (~ ain a2 (aun a1 (asing a3))) -> (~ ain (asing a1) (asm a4 a2)) -> ain a2 (asm a4 a2) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain a3 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> (asm (asm a4 a2) (asing a2) = asing a3) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> (asm a4 (asing a3) = a3) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aex2 (asm a3 (asing a2)) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex3 (asm a4 (asing a2)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> ain (apow a2) (aun a2 (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMZUuzoALxYvYhscmg413HJgUPUeGqvwgc6: (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (~ ain a0 a0) -> (~ ain a2 a1) -> (~ (a1 = a2)) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ ain (asing a1) a0) -> ain a1 (aun (asing a1) (asing (asing a1))) -> (~ (a1 = asing a1)) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ ain (asing a1) (asing a2)) -> ain a2 (asm (apow a2) (apow (asing a1))) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ ain (asing a2) a2) -> (~ (asing (asing a1) = apow (asing a1))) -> (~ ain a3 (apow a2)) -> (~ (asing a2 = asm a3 (asing a1))) -> (~ (asm a3 (asing a1) = a3)) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> (~ (asm a3 (asing a1) = apow a2)) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain a0 (aun a3 (asing (asing a2))) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain a2 (aun a3 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq a3 (aun a3 (asing (asing a2))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> asubq (asing a1) (asm a2 (asing a0)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq a2 (apow (asm a3 (asing a1))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal2 a1) -> (~ aal4 (asm (apow a2) (asing a1))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex3 (asm a4 (asing a3)) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2).
admit.
Qed.

Theorem conj_AbstrHF_TMT19iRdtVT39TEwjPkRGodbdZhE45fdCww: ain a0 a2 -> ain a0 a3 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a1 a1) -> (~ (a0 = a2)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> ain a2 (asm (apow a2) a2) -> (~ ain (apow a2) a2) -> (~ (asing a1 = asing a2)) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ (apow (asing a1) = a3)) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ (asm (apow a2) a2 = apow a2)) -> ain a0 (apow (apow (asing a1))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> (~ ain (asing a2) a4) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> (~ ain a0 (asing a3)) -> ain (asing a1) (aun (asing (asing a1)) a4) -> adisjoint (apow (asing a1)) (asm a4 a2) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain (asing a1) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (asm a3 (asing a2) = a2) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) a4 -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal3 (apow (asing a1))) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal3 (asm a4 a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (~ aal5 a4) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal3 (asm (apow a2) (asing a2)) -> aal3 (asm (apow a2) (asing a1)) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMJJ1B4LSaiPjT86s1rAsdaRZwV8TnUMYAM: (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> asubq a1 a2 -> ain a0 (apow a2) -> ain a0 (asm (apow a2) (asing a2)) -> (~ ain (asing a1) a2) -> (~ ain a1 (asm a3 (asing a1))) -> (~ asubq (apow a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> ain a0 (apow (asing (asing a1))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a0 (asing a3)) -> (~ ain a2 (aun a1 (asing a3))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asing (asing a1))) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal5 (aun (asing (asing a2)) a4) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 a2 -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex5 (aun (asing (apow (asing a1))) a4) -> (~ ain (apow a2) a2).
admit.
Qed.

Theorem conj_AbstrHF_TMY2wbBRgixKCZYusiP8ypKWyJQicu3phwd: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, (~ ain X24 a0)) -> ain a1 a3 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> (~ ain a1 (asing a2)) -> (~ (a1 = asing a2)) -> (~ ain a3 (asing a1)) -> (~ (a2 = asing (asing a1))) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ ain a3 (apow a2)) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ ain (apow a2) a3) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> (~ ain a0 (asing (apow (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> (~ ain a1 (asing a3)) -> ain a3 (asing a3) -> (~ ain (asing (asing a1)) a4) -> ain a3 (asm a4 (asing a2)) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq a2 (asm a3 (asing a2)) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> asubq (asm a4 (asing a3)) a3 -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> (~ aal6 (aun a4 (asing (apow a2)))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm a4 (asing a3)) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> aex5 (aun a4 (asing (apow a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> asubq a1 (apow (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMKXawqwGmx22mG2wX7kEuCuezkZhPayiqE: (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (~ (a0 = a2)) -> (~ (a0 = a3)) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> asubq (asing a1) a2 -> (~ (a0 = asing a2)) -> (~ (a0 = asm a3 (asing a1))) -> ain a2 (apow a2) -> (~ asubq (asing a1) (asing a2)) -> (~ ain (asing a2) a2) -> (~ ain (apow a2) a2) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (~ asubq a3 (asing a2)) -> (~ (a0 = apow a2)) -> (~ (a1 = apow a2)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (~ ain a3 (asm (apow a2) (asing a1))) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> (~ (a3 = apow a2)) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> ain a0 (aun (asing a2) (apow (asing a2))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> (~ ain (apow (asing a1)) a4) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> ain a0 (aun (asing (asing a2)) a4) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (asm a4 (asing a2)) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asing a1) (asm a2 (asing a0)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 (apow (asing a2))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (~ ain a0 a0).
admit.
Qed.

Theorem conj_AbstrHF_TMTRD7ABLGMcFD5sas5sJJ4je48BH9xQtYL: ain a1 a2 -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> ain a1 (asing a1) -> ain a1 (apow a2) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> (~ ain (asing a1) a1) -> ain (asing a1) (apow (asing a1)) -> (~ ain (asing a1) (asing a2)) -> ain a0 (apow (asing a2)) -> (~ asubq (asing a1) (asing a2)) -> (~ ain (asing a1) (apow (asing a2))) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ (asing a1 = asing a2)) -> (~ (asing a1 = a3)) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) a2) a3) -> (~ (asing a2 = a3)) -> (~ (asing a2 = asm (apow a2) a2)) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a2) (apow (asing a2)) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> ain a1 (apow (asm a3 (asing a1))) -> (~ ain a1 (asing a3)) -> (~ ain (asm a3 (asing a1)) a4) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal4 (asm a4 (asing a2))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal2 (asm (apow a2) (apow (asing a1))) -> aal5 (aun a4 (asing (apow a2))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex4 (apow a2) -> aex5 (aun (apow a2) (asing (asing a2))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)).
admit.
Qed.

Theorem conj_AbstrHF_TMYPAnmiycbbjrZfHZMZfiUmz1KQamEUQzT: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, (~ ain X24 a0)) -> ain a3 a4 -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> asubq a1 a2 -> (~ ain (asing a1) a1) -> ain a2 (asm a3 (asing a1)) -> (~ ain a3 (asing a1)) -> (~ (asing a1 = asing (asing a1))) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> (~ ain a1 (asing (apow (asing a1)))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a2 (asm a4 (asing a1)) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> (~ ain (asing a1) (asm a4 a2)) -> ain a1 (aun (asing (asing a2)) a4) -> (~ ain (asing a1) (asing (apow a2))) -> ain a0 (aun a1 (asing (apow a2))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun a4 (asing (apow a2))) -> ain a3 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (asm a4 (asing a2)) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> (asm (asm a4 a2) (asing a2) = asing a3) -> (asm (asm a4 a2) (asing a3) = asing a2) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (~ aal3 a2) -> (~ aal3 (asm a4 a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> aal2 (asm (apow a2) (apow (asing a1))) -> aal3 (asm (apow a2) (asing a1)) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMUyK69FMGDq4d4KNBVH5uGiw64JVSKixGe: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> ain a1 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (~ ain a3 a2) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> (~ ain a1 (asing a2)) -> (~ asubq a2 (asing a2)) -> (~ ain a2 (apow (asing a2))) -> (~ ain (asing a1) (asing a1)) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ ain a2 (asing (asing a1))) -> (~ (a2 = asing (asing a1))) -> (~ (apow (asing a1) = a3)) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> ain a0 (apow (apow (asing a1))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> (~ ain (asing a1) a4) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> (~ ain a1 (asing (apow a2))) -> ain (apow a2) (asing (apow a2)) -> ain a0 (aun a2 (asing (apow a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (asm a2 (asing a1) = a1) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm a4 (asing a3)) a3 -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal4 a4 -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex3 (asm (apow a2) (asing a2)) -> aex3 (asm (apow a2) (asing a1)) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> asubq a4 (aun a4 (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMNkPgCqqebEj7FxJjWDVMM6NsL55FYHeM9: ain a1 a2 -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (~ ain a2 a2) -> (~ ain a3 a3) -> asubq a3 a4 -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> (~ (a1 = asing a1)) -> (~ ain a1 (apow (asing a2))) -> (~ (a0 = apow (asing a1))) -> asubq a1 (asm a3 (asing a1)) -> (~ ain a3 (asing a1)) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (~ (asing (asing a1) = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ (asing a2 = a3)) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain a3 (asm a4 (asing a1)) -> ain a2 (asm a4 (apow (asing a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> (~ ain a3 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (aun a2 (asing (apow a2))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal2 a1) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (~ aal4 (asm a4 (asing a2))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> aal2 (asm a4 a2) -> aal3 (asm a4 (asing a1)) -> aal4 (apow a2) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (asm a3 (asing a2)) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex3 (asm a4 (asing a0)) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex5 (aun (asing (asing a1)) a4) -> aex5 (aun (asing (asing a2)) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMGTXECN5gK46w8h2qAWP4j6sgF6nqW5PPt: (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> ain a2 a3 -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> ain a0 (apow a2) -> (~ ain a0 (asing a1)) -> ain a0 (asm (apow a2) (asing a1)) -> (~ (a0 = asing (asing a1))) -> (~ (a0 = asing a2)) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ asubq (apow a2) (asing a2)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> ain a1 (aun a3 (asing (asing a2))) -> ain a2 (aun a3 (asing (asing a2))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> (~ ain (asing a2) (asing a3)) -> ain a1 (aun (asing a1) (asing a3)) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain a3 (asm a4 (apow (asing a2))) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> asubq (asm a4 (asing a3)) a3 -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal2 (asm (apow a2) a2) -> aal3 (aun (asing a2) (apow (asing a2))) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex2 (asm a4 a2) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)).
admit.
Qed.

Theorem conj_AbstrHF_TMaEvZBEvZs2dn9Jc8CtAzPvz6nivw1uHkL: (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> ain a0 a4 -> ain a2 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (~ (a0 = a3)) -> ain a1 (aun (asing a1) (asing (asing a1))) -> ain a0 (asm (apow a2) (asing a2)) -> ain (asing a1) (asm (apow a2) a2) -> asubq a1 (apow (asing a1)) -> asubq a1 (asm a3 (asing a1)) -> (~ ain (asing a1) (asing a1)) -> (~ (a2 = apow (asing a1))) -> asubq (asm a3 (asing a1)) (apow a2) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> (~ ain (asm a3 (asing a1)) a4) -> ain (asing a2) (aun (asing (asing a2)) a4) -> ain a2 (aun (asing (asing a2)) a4) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a1 (aun a2 (asing (apow a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (asm a2 (asing a0) = asing a1) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asing a1)) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal3 a3 -> aal4 (apow a2) -> aal5 (aun (asing (asing a1)) a4) -> aex3 (asm (apow a2) (asing a2)) -> aex3 (asm a4 (asing a3)) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMQFscpYezmjE2W4z7KLRbLxPZJb3pKbF29: (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> ain a0 a1 -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (~ (a0 = a1)) -> ain a0 (asm (apow a2) (asing a1)) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ ain a2 (asing (asing a1))) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ (asing a1 = asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ ain (asing (asing a1)) a3) -> (~ ain (asing a2) (asm a3 (asing a1))) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain a0 (asm a4 (asing a2)) -> (~ ain (apow (asing a1)) a4) -> ain a1 (asm a4 (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> asubq a4 (aun (asing (asing a1)) a4) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> (asm a2 (asing a0) = asing a1) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> (asm (asm a4 a2) (asing a3) = asing a2) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> asubq (aun (asing a1) (apow (asing a2))) (aun (asing (asing a2)) a4) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (~ aal4 (asm a4 (asing a2))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aal3 (asm (apow a2) (asing a2)) -> aex3 (asm (apow a2) (asing a2)) -> aex2 (asm a3 (asing a2)) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> aex3 (aun a2 (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMNQv2S81bd2Rx39DZXUWoZNbceReTKS7hs: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> ain a0 a3 -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (~ ain a2 a1) -> (~ (a1 = a3)) -> (~ asubq a1 a0) -> ain (asing a1) (asing (asing a1)) -> (~ ain a0 (asing a1)) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> ain a2 (asm (apow a2) (asing a1)) -> (~ (a1 = apow (asing a1))) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (~ asubq (apow a2) (asing (asing a1))) -> (~ (a2 = apow (asing a1))) -> asubq a3 (apow a2) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain a1 (apow (apow (asing a1))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> ain a1 (aun a3 (asing (asing a2))) -> ain a0 (aun (asing (asing a2)) a4) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq a3 (aun a3 (asing (apow a2))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> (asm a4 (asing a3) = a3) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm a3 (asing a1)) a4 -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal3 (aun a1 (asing a3))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal2 a2 -> aal3 (aun (asing a1) (apow (asing a2))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aal5 (aun (asing (asing a1)) a4) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aex2 (asm a4 a2) -> aex2 (aun a1 (asing (apow a2))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (~ ain a2 a2).
admit.
Qed.

Theorem conj_AbstrHF_TMYeVLeSecvCzjbpdk2wwuwpBjg24Yw7zRk: ain a0 a4 -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (~ ain a3 a2) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain (asing a1) (apow a2) -> (~ ain a2 (asing a1)) -> ain a2 (asm (apow a2) a2) -> (~ (asing a1 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> ain a0 (apow (apow (asing a1))) -> (~ ain a0 (asing (apow (asing a1)))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a2 (asing a3)) -> ain a1 (asm a4 (apow (asing a2))) -> ain a0 (aun (asing (asing a2)) a4) -> (~ ain (asing a1) (asing (apow a2))) -> (~ ain (asing a2) (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> asubq a1 (asm a2 (asing a1)) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> (asm (apow a2) (asing (asing a1)) = a3) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) a4 -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> (~ aal3 (asm a3 (asing a1))) -> (~ aal3 (apow (asing a2))) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (~ aal5 (apow a2)) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal3 (asm (apow a2) (asing a2)) -> aal5 (aun (apow a2) (asing (apow a2))) -> aex3 (aun a2 (asing (apow a2))) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (asing a1) (asm (apow a2) a2).
admit.
Qed.

Theorem conj_AbstrHF_TMLqtu3TzvWWrVfb15MoU7pvE6UrWrYaE8F: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> asubq a1 (asing a0) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, aex2 (apow (asing X24))) -> ain (asing a1) (asm (apow a2) a2) -> (~ ain a1 (apow (asing a2))) -> ain a2 (asm (apow a2) a2) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ (a1 = apow (asing a1))) -> (~ asubq (asing a2) a2) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asing a2) a4) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> (~ ain a1 (asing a3)) -> (~ ain (asm (apow a2) a2) a4) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> (~ ain (asing a1) (asm a4 a2)) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (asing a1) (asing (apow a2))) -> ain a0 (aun a1 (asing (apow a2))) -> ain a0 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> asubq a2 (asm a4 (asing a2)) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> aex2 (apow (asing a1)) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex2 (apow (asing a2)) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex3 (asm a4 (asing a1)) -> aex3 (asm (apow a2) (asing a0)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (~ (a1 = asm (apow a2) a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMKS9kGp5WzMFSWgaRmTqaKpM4FRttQD3aa: (forall X24:set, (~ ain X24 a0)) -> ain a0 a2 -> ain a1 a2 -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a0 a0) -> (~ ain a3 a3) -> (~ (a0 = asing (asing a1))) -> (~ ain (asing a1) (asing a2)) -> (~ (a1 = asing a2)) -> (~ (a1 = asm a3 (asing a1))) -> (~ ain a3 (asing a1)) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ (a2 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ (asing a2 = apow a2)) -> (~ (asm a3 (asing a1) = apow a2)) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> ain a3 (asm a4 (asing a1)) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> (asm (asm a4 a2) (asing a3) = asing a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> aal3 (asm (apow a2) (asing a2)) -> aal3 a3 -> aex2 (asm a3 (asing a2)) -> aex3 (asm (apow a2) (asing a1)) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ aal3 (apow (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMbz9LUrZWGQdiHiYC5TWE3FvNW1SZar8sH: (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (~ asubq a2 a1) -> (~ (a2 = a3)) -> (~ ain a0 (asing (asing a1))) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ ain a2 (asing a1)) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ asubq a3 (asing a2)) -> (~ (a0 = apow a2)) -> (~ (asing a2 = asm a3 (asing a1))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain a3 (aun (asing a1) (asing a3)) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain a2 (aun a3 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal2 (asing a2)) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aal5 (aun a4 (asing (apow a2))) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex3 a3 -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> ain (asing a1) (aun (asing (asing a1)) a4).
admit.
Qed.

Theorem conj_AbstrHF_TMdEnw6NLBRzJDwtKRtFU9y3pewqvFyM3GE: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (~ ain a0 a0) -> (~ (a0 = a1)) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ ain a0 (asing a2)) -> ain a0 (asm a3 (asing a1)) -> (~ ain a1 (apow (asing a2))) -> (~ ain (asing a1) a1) -> (~ (a0 = asm a3 (asing a1))) -> asubq a1 (asm a3 (asing a1)) -> (~ asubq a2 (asm a3 (asing a1))) -> (~ ain a2 (asing (asing a1))) -> (~ (asing a1 = asm (apow a2) a2)) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (~ (asing a2 = asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> ain a0 (aun a3 (asing (asing a2))) -> ain a0 (apow (asm a3 (asing a1))) -> (~ ain a2 (aun a1 (asing a3))) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain a3 (asm a4 (asing a1)) -> ain a3 (asm a4 (apow (asing a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (~ aal2 (asing a1)) -> (~ aal2 (asing (asing a1))) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 a2) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal4 (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal3 (aun a2 (asing (apow a2))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun a4 (asing (apow a2))) -> aex2 (asm a3 (asing a1)) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex3 (aun a2 (asing (apow a2))) -> aex3 (asm (apow a2) (asing (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMafo5fMvccnPMApkQMAKt8rBAaXyGJtYty: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> ain a1 a2 -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> ain a0 (apow (asing a1)) -> (~ ain a2 (apow (asing a1))) -> ain a2 (asm (apow a2) (apow (asing a2))) -> (~ asubq (asing a1) (asing a2)) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ asubq (asing a2) a2) -> (~ (asing a1 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (apow a2) (apow a2)) -> (~ ain a3 (asing a2)) -> (~ (a2 = asm (apow a2) a2)) -> (~ ain (asm (apow a2) a2) a3) -> (~ (asm a3 (asing a1) = a3)) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> ain a3 (asing a3) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> (~ ain (asing a1) (asm a4 a2)) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain a0 (aun (asing (asing a2)) a4) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain a0 (aun a3 (asing (apow a2))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq a1 (asm a2 (asing a1)) -> asubq a2 (asm a3 (asing a2)) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> aal2 (asm (apow a2) a2) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex2 (asm a3 (asing a2)) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex4 (apow a2) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))).
admit.
Qed.

Theorem conj_AbstrHF_TMZRPCoPASG4wFZbN1cnfeFJAwP8sMNtP6Q: (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> ain a1 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> asubq a1 (asing a0) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (~ ain a2 a2) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> ain a0 (apow a2) -> (~ ain a0 (asing a1)) -> ain a0 (asm (apow a2) (asing a1)) -> (~ ain a0 (asing (asing a1))) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ ain a0 (asm (apow a2) a2)) -> (~ ain (asing a1) (asing a1)) -> (~ (asing a1 = asing (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ (a2 = asm a3 (asing a1))) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ ain (asm (apow a2) a2) a3) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a0 (asm a4 (asing a1)) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain a3 (aun a1 (asing a3)) -> ain a1 (asm a4 (asing a2)) -> (~ ain (asing a1) (asm a4 a2)) -> ain (asing a2) (aun (asing (asing a2)) a4) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a0 (aun a2 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a3 (aun a4 (asing (apow a2))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a2 (aun a2 (asing (apow a2))) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> (asm (asm a4 a2) (asing a2) = asing a3) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal2 (asing (asing a1))) -> (~ aal2 (asing (apow a2))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal2 (asm a4 a2) -> aex2 (asm a3 (asing a1)) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> (~ ain (asing a1) a0).
admit.
Qed.

Theorem conj_AbstrHF_TMFGyxQVjzqCCM4y3uWbvMnrPGBQdzDgZwe: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> ain (asing a1) (asing (asing a1)) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> ain a1 (apow (asm a3 (asing a1))) -> ain a3 (asm a4 a2) -> ain a2 (asm a4 (apow (asing a2))) -> (~ ain a0 (asing (apow a2))) -> (~ ain (asing a1) (asing (apow a2))) -> (~ ain a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> asubq (asm a2 (asing a0)) (asing a1) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq (asm a3 (asing a1)) a4 -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aal5 (aun a4 (asing (apow a2))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMNHcLp8Ri9Yk6YocBQ2naUPnJCBAjNAywA: ain a0 a2 -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (~ asubq a2 a0) -> (~ ain (asing a2) a1) -> asubq a1 (apow (asing a1)) -> (~ ain a2 (apow (asing a1))) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ (asing (asing a1) = apow (asing a1))) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ ain a3 (apow a2)) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ (a2 = asm (apow a2) a2)) -> (~ ain (apow a2) a3) -> (~ (asing a2 = asm (apow a2) a2)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> ain a1 (apow (apow (asing a1))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> ain (asing a2) (aun (asing (asing a2)) a4) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm a3 (asing a2) = a2) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal2 a1) -> (~ aal3 (apow (asing a1))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal5 (aun a4 (asing (apow a2))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex4 a4 -> aex5 (aun (asing (apow (asing a1))) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMTD7qGSWLabMwT9BVYFYMxjW1k2U1iUcSg: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> ain a1 a3 -> ain a1 a4 -> ain a3 a4 -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (~ ain a3 a3) -> (~ (a2 = a3)) -> (~ ain (asing a1) a0) -> ain (asing a1) (asing (asing a1)) -> (~ (a0 = asm (apow a2) a2)) -> ain a2 (asm a3 (asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a2) (apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ ain (apow a2) (apow a2)) -> (~ (a0 = apow a2)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain a0 (apow (asing (asing a1))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> (~ ain a2 (aun a1 (asing a3))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal3 (apow (asing a1))) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (~ aal4 (asm (apow a2) (asing a1))) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun (asing (apow (asing a1))) a4) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (aun a1 (asing a3)) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex5 (aun (apow a2) (asing (asing a2))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMdD5anGu9EQZGCqEZhonEjQpswLDmgqAso: (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> asubq a2 a3 -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> ain a1 (asing a1) -> ain a1 (asm (apow a2) (asing a2)) -> ain a2 (asm a3 (asing a1)) -> (~ ain (asing (asing a1)) a2) -> (~ (asing a1 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (~ (a2 = apow a2)) -> (~ (asing a2 = asm a3 (asing a1))) -> (~ (asing a2 = a3)) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a2) (asing (asing a2)) -> ain a1 (asm a4 (apow (asing a2))) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal3 a3 -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))).
admit.
Qed.

Theorem conj_AbstrHF_TMMnFVAhDM5UHJuLX9ptAJkMX38vsaCHLme: (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> asubq a1 a2 -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ (a2 = apow a2)) -> (~ ain (apow a2) (asing a2)) -> (~ asubq a3 (asing a2)) -> (~ ain (asing a2) a3) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> ain a0 (asm a4 (asing a1)) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> (~ ain a1 (asing a3)) -> (~ ain (asing a2) (aun a1 (asing a3))) -> (~ ain (asing (asing a1)) a4) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain a1 (asm a4 (apow (asing a2))) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> (~ ain (asing a2) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain a0 (aun a1 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> asubq (asm a4 (asing a3)) a3 -> asubq a2 (apow (asm a3 (asing a1))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (asm a4 a2) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex3 (asm a4 (asing a1)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> aex3 (asm a4 (asing a0)) -> aex3 (asm a4 (asing a3)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))).
admit.
Qed.

Theorem conj_AbstrHF_TMS4QwA997HGBCdWYx9mNo58ghoncRMYbWD: (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> ain a1 a2 -> ain a0 a3 -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (~ ain a0 a0) -> asubq a1 a2 -> (~ asubq a2 a1) -> asubq a3 a4 -> (~ (a1 = a2)) -> (~ asubq a1 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> ain a1 (asing a1) -> asubq a1 (apow (asing a1)) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ (a1 = apow (asing a1))) -> (~ ain (asing a2) a2) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ (asing a1 = apow a2)) -> (~ (a2 = apow a2)) -> (~ (apow (asing a1) = a3)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> (~ (a3 = apow a2)) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain (asing a2) (aun (asing (asing a2)) a4) -> (~ ain (asing a2) (asing (apow a2))) -> (~ ain a3 (asing (apow a2))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> (~ asubq (asm a4 (asing a2)) a2) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> (asm a4 (asing a3) = a3) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> (~ aal2 a1) -> (~ aal2 (asing a3)) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal3 a3 -> aal3 (aun (asing a2) (apow (asing a2))) -> aal3 (aun a2 (asing (apow a2))) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal4 a4 -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (aun a1 (asing a3)) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex3 (asm a4 (asing a2)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMWUVgk3V5okYRBoM3AvZ5CjUCFFKHKJCy3: (forall X24:set, (~ ain X24 X24)) -> ain a2 a4 -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (~ ain a2 a1) -> (~ (a0 = a2)) -> ain a2 (asing a2) -> ain a1 (asm (apow a2) (apow (asing a1))) -> (~ ain a1 (apow (asing a2))) -> (~ (asing a1 = a2)) -> (~ asubq a2 (asing a1)) -> ain a2 (asm (apow a2) (apow (asing a2))) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ ain (asing a2) (asm (apow a2) a2)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ (asing a2 = apow a2)) -> (~ (a3 = apow a2)) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> ain a1 (aun (asing (asing a2)) a4) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain a0 (aun (asing (asing a2)) a4) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> asubq (aun (asing a1) (apow (asing a2))) (aun (asing (asing a2)) a4) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal2 (asing (asing a1))) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal4 (asm (apow a2) (asing a2))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (asm a3 (asing a2)) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMbaEd5SpXQrdyvbupkrCKzR2YDSF67jLp6: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 (asm X24 (asing X25)) -> aal5 X24) -> (~ ain a3 a2) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> (~ (a0 = apow (asing a1))) -> ain a1 (asm (apow a2) (asing a2)) -> (~ ain a2 (apow (asing a1))) -> (~ ain a3 (asing a1)) -> (~ asubq a2 (asm a3 (asing a1))) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ ain (asing (asing a1)) a3) -> (~ ain a3 (asm a3 (asing a1))) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> (~ (asing a2 = apow a2)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a2 (asing a3)) -> ain a0 (asm a4 (asing a2)) -> (~ ain (asm a3 (asing a1)) a4) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain a0 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> ain a2 (aun a4 (asing (apow a2))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq a4 (aun (asing (asing a1)) a4) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex2 (apow (asing a2)) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (apow a2) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex5 (aun (asing (asing a2)) a4) -> aex5 (aun a4 (asing (apow a2))) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))).
admit.
Qed.

Theorem conj_AbstrHF_TMGZiHvX2QBFjnX3LVSYczVxSu5biExq7x8: (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (~ (a1 = a2)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> ain (asing a1) (apow (asing a1)) -> (~ ain (asing a1) (asing a1)) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ (a2 = asm (apow a2) a2)) -> (~ ain a3 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> (~ (asing a2 = apow a2)) -> (~ ain (apow a2) (apow (asing a2))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> (~ ain (asing (asing a1)) a4) -> (~ ain (asm a3 (asing a1)) a4) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> asubq a1 (asm a2 (asing a1)) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal2 (asm (apow a2) (apow (asing a1))) -> aal4 a4 -> aex3 (asm a4 (asing a2)) -> aex3 (asm a4 (asing a0)) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (aun a1 (asing a3)).
admit.
Qed.

Theorem conj_AbstrHF_TMdYdpBg7bkJbHJAJ9XZBeSqaMmHTvMcvvH: (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (~ ain a0 (asing a2)) -> ain a0 (asm (apow a2) (asing a2)) -> (~ (a0 = asing a1)) -> ain a2 (asm (apow a2) a2) -> (~ ain (asing a1) (asing a1)) -> (~ asubq (asing a1) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a3 (asing a2)) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> ain (asing a2) (asing (asing a2)) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> (~ ain a3 (apow (asing a2))) -> ain a1 (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> ain a1 (aun (asing a1) (asing a3)) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain a3 (aun (asing (asing a2)) a4) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (asing a1) (asm a2 (asing a0)) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal3 (aun a1 (asing a3))) -> (~ aal3 (asm a4 a2)) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex2 (asm a3 (asing a1)) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMcGY7Euxkmac6TsKV15D487FGBnir2uaWW: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> ain a0 a3 -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (~ ain a1 a0) -> (~ asubq a3 a2) -> ain a2 (asing a2) -> (~ ain (asing a1) a2) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> (~ ain a1 (asing (asing a1))) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asing a2) a3) -> (~ (asing a2 = asm (apow a2) a2)) -> ain a0 (apow (asing (asing a1))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain a3 (asing (asing a2))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> (~ ain (asing (asing a1)) a4) -> (~ ain (asing a1) (asm a4 a2)) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain a1 (aun a2 (asing (apow a2))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> asubq a3 (asm a4 (asing a3)) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> aal5 (aun a4 (asing (apow a2))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex2 (aun a1 (asing (apow a2))) -> aex3 a3 -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex5 (aun (asing (asing (asing a1))) a4) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> (~ asubq a2 (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMWF3na4MGUzRKXUyzvEW39nCCK3sdhk1P8: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> ain a0 a2 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> asubq a3 a4 -> (~ asubq a1 (asing a2)) -> ain a1 (asm (apow a2) (asing a2)) -> (~ ain (asing a1) (asing a1)) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ ain (asm a3 (asing a1)) a2) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (~ (asing (asing a1) = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> (~ (asm (apow a2) a2 = apow a2)) -> ain a0 (apow (apow (asing a1))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain a3 (aun (asing a1) (asing a3)) -> ain a0 (aun (asing (asing a2)) a4) -> ain a2 (aun (asing (asing a2)) a4) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> (~ ain a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq a4 (aun a4 (asing (apow a2))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> (~ aal6 (aun (asing (asing a2)) a4)) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> aal2 (asm (apow a2) (apow (asing a1))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal4 (apow a2) -> aal5 (aun a4 (asing (apow a2))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMVQbAP1x9fpX7zc7fEFQenpMLKULFh7Mbb: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (~ ain a2 a1) -> (~ (a1 = a3)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> (~ ain a1 (apow (asing a1))) -> (~ ain (asing a1) a2) -> (~ asubq a1 (asing a2)) -> (~ ain a1 (asing a2)) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ ain a2 (apow (asing a1))) -> (~ asubq a2 (asing a2)) -> (~ ain a3 (asing a1)) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a2) (apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ (a1 = asm (apow a2) a2)) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> asubq a3 (apow a2) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain a3 (aun (asing a1) (asing a3)) -> (~ ain (apow a2) a4) -> (~ ain a0 (asm a4 a2)) -> ain a0 (aun (asing (asing a2)) a4) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (~ aal3 a2) -> (~ aal3 (asm a4 a2)) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal2 (asm a3 (asing a1)) -> aal3 (asm (apow a2) (asing a2)) -> aal3 (aun (asing a1) (apow (asing a2))) -> aex2 (aun a1 (asing (apow a2))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex3 (asm (apow a2) (asing a0)) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex4 (aun a3 (asing (apow (asing a1)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMUrBfRq3VrhS8zDkH3ijC1Gk34jbVW81NK: (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> ain a1 (apow a2) -> ain (asing a1) (apow a2) -> (~ ain a0 (asm (apow a2) a2)) -> (~ ain (apow a2) a2) -> (~ asubq (asing a2) a2) -> (~ asubq a2 (asm a3 (asing a1))) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ (a2 = asing a2)) -> (~ ain (apow (asing a1)) a3) -> (~ ain a3 (asm a3 (asing a1))) -> (~ ain (asm (apow a2) a2) a3) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain a0 (apow (asm a3 (asing a1))) -> (~ ain a2 (aun a1 (asing a3))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain a1 (asing (apow a2))) -> (~ ain (asing a1) (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal3 (apow (asing a2))) -> (~ aal4 (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex5 (aun (asing (asing a1)) a4) -> aex5 (aun (asing (asing a2)) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> (~ ain a2 a0).
admit.
Qed.

Theorem conj_AbstrHF_TMHAJtz6Wwg79Nj3BTuzyDF8WAvemHnb48s: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (~ asubq a1 a0) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain a1 (asing a1) -> ain a2 (asing a2) -> (~ (a0 = asm a3 (asing a1))) -> (~ ain (asing a1) (asing a2)) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ (a0 = apow a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> (~ ain a1 (asing (apow (asing a1)))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> ain a0 (asm a4 (asing a2)) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal2 (asing (apow a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> aal3 a3 -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> ain (apow a2) (aun a2 (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMEpC4goMTLzXZJ5FHEqsk6jkL9jDektkg3: (forall X24:set, (~ ain X24 a0)) -> ain a0 a1 -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (~ ain a2 a1) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (forall X24:set, forall X25:set, asubq X25 (asing X24) -> ((X25 = a0) \/ (X25 = asing X24))) -> (~ ain (asing a1) a0) -> ain a0 (asm a3 (asing a1)) -> ain a1 (asm (apow a2) (apow (asing a1))) -> asubq (asing a1) a2 -> (~ ain (asing a1) a2) -> (~ (a0 = asm a3 (asing a1))) -> (~ (a1 = asing a2)) -> (~ ain (asing a1) (apow (asing a2))) -> (~ ain a1 (asing (asing a1))) -> (~ asubq (apow a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ (a2 = apow a2)) -> (~ ain (apow a2) a3) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ (asm (apow a2) a2 = apow a2)) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain a0 (aun (asing a2) (apow (asing a2))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> (~ ain a0 (asing a3)) -> ain a0 (aun a1 (asing a3)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal2 a2 -> aal3 (aun (asing a2) (apow (asing a2))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm (apow a2) (asing a1)) -> aex3 (asm a4 (asing a1)) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun a4 (asing (apow a2))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMSgWX4LHCs5v5ascGvjzqqfwJQnJi2eoXS: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> ain a0 a2 -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (~ asubq a2 a1) -> (~ (a0 = a1)) -> ain a0 (apow a2) -> ain a0 (asm a3 (asing a1)) -> (~ (a0 = asm a3 (asing a1))) -> (~ ain a0 (asm (apow a2) a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ ain (apow a2) (asing a2)) -> asubq (asm a3 (asing a1)) (apow a2) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> (~ (apow (asing a1) = a3)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> (~ (a3 = apow a2)) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> ain (asing a2) (apow (asing a2)) -> (~ ain (asing a2) (asing a3)) -> ain a3 (aun a1 (asing a3)) -> ain a3 (asm a4 (asing a2)) -> ain a2 (asm a4 (apow (asing a2))) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a0 (aun a1 (asing (apow a2))) -> ain a2 (aun a3 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun a4 (asing (apow a2))) -> ain a2 (aun a4 (asing (apow a2))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq a3 (asm a4 (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal3 (asm (apow a2) (asing a2)) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal4 a4 -> aal4 (aun a3 (asing (apow a2))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm (apow a2) (asing a2)) -> aex5 (aun (asing (apow (asing a1))) a4) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 a3.
admit.
Qed.

Theorem conj_AbstrHF_TMY6RHde6viowrVdiyYRbv84V6ZaoKzZtxd: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> asubq (asing a0) a1 -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (~ asubq a2 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> ain a1 (asing a1) -> ain a2 (asing a2) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (~ ain (asing a1) a3) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a3 (apow a2)) -> (~ ain (apow a2) (asing a2)) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> ain a0 (aun a3 (asing (asing a2))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain a2 (aun (asing (asing a2)) a4) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> asubq a4 (aun (asing (asing a1)) a4) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (~ aal2 (asing a1)) -> (~ aal3 a2) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal3 (aun a1 (asing a3))) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal2 a2 -> aal2 (asm (apow a2) (apow (asing a1))) -> aal3 (asm (apow a2) (asing a2)) -> aal4 (apow a2) -> aex2 (aun a1 (asing a3)) -> aex2 (asm a4 a2) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex5 (aun (asing (asing a1)) a4) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> ain (asing (asing a1)) (apow (asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMc5PMSaiMRERaUbdZAs3ZGjxWr9UwqXkcQ: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> ain a1 a3 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (~ ain a2 a2) -> (~ ain a3 a3) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> ain a0 (asm (apow a2) (asing a2)) -> ain a1 (apow a2) -> asubq a1 (apow (asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asing (asing a1)) a3) -> asubq a3 (apow a2) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> (~ (asing a2 = apow a2)) -> ain a0 (apow (asing (asing a1))) -> ain a1 (apow (apow (asing a1))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain a3 (asing a3) -> (~ ain a2 (aun a1 (asing a3))) -> ain a3 (asm a4 (asing a1)) -> ain a2 (asm a4 (apow (asing a2))) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (asing (asing a2)) a4) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> (~ aal4 a3) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (~ aal4 (asm a4 (asing a2))) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aex2 (aun a1 (asing a3)) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex3 (asm (apow a2) (asing a2)) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))).
admit.
Qed.

Theorem conj_AbstrHF_TMPhhkCFgVs2iXYHYTLkphzohoJPk4m59ET: (forall X24:set, (~ ain X24 X24)) -> ain a2 a4 -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (~ ain a1 a0) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> ain a2 (asing a2) -> (~ asubq a1 (asing a1)) -> ain a0 (asm (apow a2) (asing a1)) -> (~ ain a1 (apow (asing a2))) -> (~ (a0 = asing a2)) -> ain (asing a1) (apow (asing a1)) -> (~ ain (asing a1) (asing a1)) -> (~ (a1 = asing a2)) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ asubq a2 (asm a3 (asing a1))) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (~ (asing a2 = a3)) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> (~ ain a0 (asing a3)) -> (~ ain a1 (asing a3)) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asing a1) (asing (apow a2))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (asm a3 (asing a2)) a2 -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> (asm (asm a4 a2) (asing a2) = asing a3) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> (asm (asm a4 a2) (asing a3) = asing a2) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (~ aal4 a3) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex2 (aun a1 (asing a3)) -> aex3 (asm a4 (asing a2)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMFQLbKCGHhzQE3RAt76nY1qfMCJ2perSF3: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> ain a0 a1 -> (forall X24:set, asubq a0 X24) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (~ ain a1 a0) -> (~ ain a3 a2) -> (~ (a1 = a3)) -> (~ (a2 = a3)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain a1 (asing a1) -> (~ ain a0 (asing a2)) -> (~ ain (asing a1) a2) -> asubq a1 (asm a3 (asing a1)) -> (~ (a1 = asm a3 (asing a1))) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ ain a2 (asing (asing a1))) -> (~ ain (apow a2) (asing (asing a1))) -> (~ ain (asm (apow a2) a2) a3) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> (~ (asing a2 = apow a2)) -> ain a0 (apow (apow (asing a1))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> (~ ain a3 (asing (asing a2))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain a0 (asm a4 (asing a2)) -> (~ ain a0 (asm a4 a2)) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a0 (aun a2 (asing (apow a2))) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aal5 (aun (asing (asing a1)) a4) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex3 (asm (apow a2) (asing a0)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> ain a0 (aun (apow (asing a2)) (asing a3)).
admit.
Qed.

Theorem conj_AbstrHF_TMFYVLi8CJngoT6QChM6YcuvgWjtoHrSfoa: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> ain a0 a1 -> ain a0 a2 -> ain a2 a3 -> ain a1 a4 -> (forall X24:set, asubq X24 X24) -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (~ (a0 = a1)) -> ain a0 (apow a2) -> ain a1 (asm (apow a2) (apow (asing a1))) -> ain (asing a1) (asm (apow a2) a2) -> (~ ain a1 (apow (asing a2))) -> (~ ain (asing a2) a1) -> (~ ain a3 (asing a1)) -> (~ (asing a1 = a3)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a3 (asm a3 (asing a1))) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain a0 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> asubq a2 (asm a3 (asing a2)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal4 (asm (apow a2) (asing a2))) -> (~ aal4 (asm a4 (asing a2))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex2 (aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex4 a4 -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMdoq8jMQGyQessw39ogWjVNimvNXNpZZtK: (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a1 a0) -> (~ (a0 = a2)) -> (~ asubq a2 a0) -> ain a1 (aun (asing a1) (asing (asing a1))) -> ain a2 (asm (apow a2) a2) -> (~ ain (asing a2) a2) -> (~ ain (asing a2) (asing (asing a1))) -> (~ (asing (asing a1) = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a0 (asm a4 (asing a1)) -> (~ ain (asm a3 (asing a1)) a4) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain (apow a2) (aun a4 (asing (apow a2))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq a3 (asm a4 (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> aal3 a3 -> aal3 (asm (apow a2) (apow (asing a2))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex3 (aun a2 (asing (apow a2))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm (apow a2) (asing a0)) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (~ aal4 (aun a2 (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMYz8UctHw8ZdGDvYYdeYRM2FeE29PMJhvj: (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> ain a2 a3 -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (~ ain a2 a0) -> (~ asubq a2 a1) -> (~ asubq a4 a3) -> ain a1 (asm (apow a2) (apow (asing a2))) -> asubq a1 (apow (asing a1)) -> (~ (a1 = asing (asing a1))) -> (~ ain (asing (asing a1)) a2) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> (~ (a0 = apow a2)) -> (~ (asing a2 = asm a3 (asing a1))) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> (~ ain (asing (asing a1)) a4) -> ain a3 (asm a4 a2) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> (asm (apow a2) (asing (asing a1)) = a3) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> (~ aal2 (asing a3)) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> aal2 a2 -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal4 a4 -> aex2 (aun (asing a3) (asing (apow a2))) -> aex3 a3 -> aex4 (aun a3 (asing (apow a2))) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex5 (aun (asing (apow (asing a1))) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMQH5qid4H5uLAPzyuNWSJMPfnJkgBXWKqc: ain a3 a4 -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> asubq a3 a4 -> (~ (a2 = a3)) -> ain a1 (asing a1) -> (~ (a0 = asing a1)) -> (~ (a0 = asm (apow a2) a2)) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain (asing (asing a1)) a2) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ asubq (asing a2) a2) -> (~ ain (apow a2) (asing (asing a1))) -> (~ ain (asing a2) (asm a3 (asing a1))) -> (~ (asm a3 (asing a1) = a3)) -> (~ (asing a2 = apow a2)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> (~ ain (asing a1) a4) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain a3 (asing a3) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> (asm (asm a4 a2) (asing a3) = asing a2) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex2 (apow (asing a1)) -> aex3 (asm (apow a2) (asing a2)) -> aex2 (asm a3 (asing a2)) -> aex3 (asm (apow a2) (asing a1)) -> aex5 (aun (asing (apow (asing a1))) a4) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMXZftYxV5jdT8CUCUcBeVj1BQ9wr3rdqj2: (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> asubq a2 a3 -> (~ ain a1 (apow (asing a1))) -> ain (asing a1) (apow a2) -> asubq a1 (apow (asing a1)) -> (~ (asing a1 = asing (asing a1))) -> (~ asubq (apow a2) (asing (asing a1))) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ (apow (asing a1) = a3)) -> (~ (asing a2 = a3)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a3 (asing (asing a2))) -> ain a2 (asm a4 (asing a1)) -> (~ ain a1 (asing a3)) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain a0 (aun a2 (asing (apow a2))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq a4 (aun (asing (asing a1)) a4) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (~ aal2 (asing (apow a2))) -> (~ aal3 (asm a3 (asing a1))) -> (~ aal5 (apow a2)) -> (~ aal5 a4) -> (~ aal5 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal2 (asm (apow a2) a2) -> aal5 (aun (apow a2) (asing (asing a2))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex3 (asm (apow a2) (asing a1)) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex3 (asm a4 (asing a0)) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> ain (asing a2) (aun a3 (asing (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMSYRxGh7FUeC1bNrzrq8jmcmVpVTEYT5n8: (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (~ ain a3 a2) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ (asing a1 = a2)) -> (~ ain (asing a1) (asing a1)) -> (~ ain a1 (asing (asing a1))) -> (~ (asing (asing a1) = a3)) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> (~ ain (apow a2) a4) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> asubq a3 (aun a3 (asing (apow a2))) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asing a1) (asm a2 (asing a0)) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal3 (asm a4 a2)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> aal2 (asm (apow a2) a2) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun (asing (asing a2)) a4) -> aex2 (asm (apow a2) a2) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm a4 (asing a0)) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)).
admit.
Qed.

Theorem conj_AbstrHF_TMUtPBhLuRzBMx7ZLs1cEXzeauNQ7P4XKj2: (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> ain a1 a2 -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (~ (a0 = a1)) -> (~ (a2 = a3)) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a1) (asing a2)) -> (~ asubq a2 (asing a1)) -> ain a2 (asm (apow a2) (asing a1)) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ (asing a1 = asm a3 (asing a1))) -> (~ (asing a1 = a3)) -> (~ (asing a1 = asing (asing a1))) -> (~ ain (asing a1) a3) -> (~ (asing (asing a1) = apow (asing a1))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ ain (asing a2) a3) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> ain a2 (asm a4 a2) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal2 (asing a1)) -> (~ aal2 (asing (asing a1))) -> (~ aal3 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> aal4 (apow a2) -> aal4 a4 -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex3 (asm a4 (asing a0)) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))).
admit.
Qed.

Theorem conj_AbstrHF_TMHQL9pkqPkjmpqZpH71QtJEPuPgfYV1JRA: (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> asubq a1 (asing a0) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> ain (asing a1) (apow a2) -> (~ (a1 = asing a1)) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ ain (asing a1) (apow (asing a2))) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ ain (apow a2) a2) -> (~ asubq (asing a2) a2) -> (~ (asing (asing a1) = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (~ ain (asing a2) (asm a3 (asing a1))) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> ain a0 (apow (asing (asing a1))) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain a1 (apow (asm a3 (asing a1))) -> (~ ain (asing a2) (asing a3)) -> ain a3 (asm a4 (asing a2)) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> (~ ain a0 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asing (apow (asing a1))) a4) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)).
admit.
Qed.

Theorem conj_AbstrHF_TMFn3FWnMQ4JSNViDvXeXKpHBGAV2AAkQHq: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (~ asubq a3 a2) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> (forall X24:set, forall X25:set, asubq X25 (asing X24) -> ((X25 = a0) \/ (X25 = asing X24))) -> ain (asing a1) (asing (asing a1)) -> ain a0 (apow a2) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ asubq a2 (asing a2)) -> (~ (a1 = asing a2)) -> (~ ain (apow a2) a2) -> (~ ain (asing a2) (asing (asing a1))) -> (~ (a2 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ ain (asing a2) (asm (apow a2) a2)) -> (~ ain a0 (asing (apow (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> ain a2 (asm a4 (asing a1)) -> ain a1 (aun (asing a1) (asing a3)) -> (~ ain (apow (asing a1)) a4) -> (~ ain (apow a2) a4) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> asubq (asm a4 (asing a3)) a3 -> asubq (asm a3 (asing a1)) a4 -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal3 (aun a1 (asing a3))) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex3 (aun a2 (asing (apow a2))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> aex3 (asm a4 (asing a3)) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))).
admit.
Qed.

Theorem conj_AbstrHF_TMGubrCSaDoqJ1otDuVp2pakbqaYYyJHdJq: (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (~ ain a2 a0) -> (~ ain a3 a3) -> (~ asubq a1 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> ain a0 (apow a2) -> ain a2 (asing a2) -> ain (asing a1) (apow a2) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> ain a2 (apow a2) -> ain a2 (asm (apow a2) a2) -> ain a2 (asm (apow a2) (asing a1)) -> (~ asubq (asm a3 (asing a1)) a2) -> (~ ain (asing a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (~ (a2 = apow (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ (a2 = asm (apow a2) a2)) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (~ (a1 = asm (apow a2) a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> (~ ain a3 (apow (asing a2))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> ain a0 (asm a4 (asing a1)) -> (~ ain (asm a3 (asing a1)) a4) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain a0 (aun (asing (asing a2)) a4) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain (asing a1) (asing (apow a2))) -> ain a1 (aun a3 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> (asm a4 (asing a3) = a3) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal5 (apow a2)) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal3 (aun a2 (asing (apow a2))) -> aex2 (asm a3 (asing a1)) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (asm a4 a2) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> (~ (a0 = asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMcHYzd9PcxkddMMCtyrCCam3sQPfzLT1N7: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> ain a1 a3 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (~ (a0 = a2)) -> (~ (a1 = a3)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> (~ ain a1 X24) -> (X24 = a0)) -> ain (asing a1) (asing (asing a1)) -> ain a0 (apow (asing a1)) -> (~ (a0 = asm a3 (asing a1))) -> (~ (a1 = asing a2)) -> (~ asubq a2 (asm a3 (asing a1))) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ ain a2 (asing (asing a1))) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ ain (asing (asing a1)) a3) -> (~ ain (apow a2) a3) -> (~ (asing a2 = asm (apow a2) a2)) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> (~ ain a1 (asing a3)) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq a4 (aun (asing (asing a1)) a4) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (asm a3 (asing a2) = a2) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm a3 (asing a1)) a4 -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (~ aal2 a1) -> (~ aal4 (asm (apow a2) (asing a2))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> aal3 a3 -> aal5 (aun (asing (apow (asing a1))) a4) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex4 (aun a3 (asing (apow a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)).
admit.
Qed.

Theorem conj_AbstrHF_TMZ3aQSu4bjqGgpHctaoaJXEhZi6mbiq2AM: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (~ ain (asing a1) a0) -> ain a0 (apow (asing a1)) -> ain a0 (apow a2) -> ain a1 (asm (apow a2) (apow (asing a1))) -> (~ ain (asing a1) (asing a2)) -> (~ ain a1 (asm (apow a2) a2)) -> (~ ain (asing (asing a1)) a2) -> (~ asubq (apow a2) (asing (asing a1))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ ain (apow a2) (apow a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> (~ (asm (apow a2) a2 = apow a2)) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain a2 (asm a4 (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> ain a3 (aun (asing (asing a2)) a4) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq a4 (aun a4 (asing (apow a2))) -> (asm a2 (asing a0) = asing a1) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) a4 -> asubq (asm (apow a2) (apow (asing a1))) a4 -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal2 a1) -> (~ aal2 (asing a3)) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (asm a3 (asing a1)) -> aex2 (asm a4 a2) -> aex3 (asm (apow a2) (asing a2)) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMdY8hYec4xTxvzDSBzXiTMC7qpc2rQn2ck: (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> asubq a3 a4 -> (~ asubq a4 a3) -> (~ ain a1 (apow (asing a2))) -> (~ ain (asing a1) (asing a2)) -> (~ ain a2 (asing a1)) -> asubq a1 (asm a3 (asing a1)) -> (~ asubq a2 (asing a2)) -> (~ (a1 = asing a2)) -> (~ ain (asing (asing a1)) a2) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ ain (apow a2) (apow a2)) -> (~ ain (asing a2) a3) -> (~ (asm a3 (asing a1) = a3)) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> ain a3 (aun (asing a1) (asing a3)) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> ain a1 (asm a4 (apow (asing a2))) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun a4 (asing (apow a2))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> asubq a2 (asm a4 (asing a2)) -> asubq a3 (aun a3 (asing (asing a2))) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (~ aal5 a4) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal5 (aun (asing (asing a2)) a4) -> aex2 a2 -> aex3 a3 -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> ain (asing a1) (asm (apow a2) (asing a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMdNciLyfityckRuWh15ufDvNXi23JorvTq: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> ain a2 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (~ ain a1 (apow (asing a1))) -> (~ (a0 = asing (asing a1))) -> ain a2 (asm a3 (asing a1)) -> ain a0 (apow (asing a2)) -> (~ (a1 = apow (asing a1))) -> (~ asubq (asm (apow a2) a2) a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (~ ain (asing a2) (apow a2)) -> (~ ain a3 (asing a2)) -> (~ ain (asing (asing a1)) a3) -> (~ (a1 = apow a2)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (apow a2) (apow (asing a2))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> ain a3 (asm a4 (asing a1)) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain a1 (aun a3 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq a3 (asm a4 (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ aal2 (asing (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (~ aal4 (asm (apow a2) (asing a1))) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal5 (aun (asing (asing a1)) a4) -> aex2 (asm a3 (asing a1)) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex4 (aun a3 (asing (apow a2))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex5 (aun (asing (asing a1)) a4) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMZwCGjVgYfqfEq4noma3RnfzvywwNZgqud: ain a1 a3 -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (~ ain a2 a1) -> (~ (a0 = a1)) -> ain a1 (asing a1) -> ain a1 (aun (asing a1) (asing (asing a1))) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ ain (asing a2) a1) -> (~ (a0 = asm a3 (asing a1))) -> (~ ain a2 (asing a1)) -> ain a2 (asm a3 (asing a1)) -> ain a2 (asm (apow a2) (apow (asing a1))) -> ain a2 (asm (apow a2) (asing a1)) -> (~ ain a2 (apow (asing a2))) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ ain (asing a1) a3) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq a3 (asing a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> (~ (asm (apow a2) a2 = apow a2)) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> (~ ain a2 (aun a1 (asing a3))) -> ain a1 (asm a4 (asing a2)) -> (~ ain (asm a3 (asing a1)) a4) -> ain a3 (asm a4 a2) -> ain a2 (asm a4 (apow (asing a2))) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain (asing a1) (asing (apow a2))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq a1 (asm a2 (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> aal3 (asm (apow a2) (apow (asing a2))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> aex4 a4 -> aex4 (aun a3 (asing (apow a2))) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ ain (asing a2) (asm (apow a2) (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMFgkFLSVWJrZwszQEUoAvC8KoGyd2km9DK: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> ain a0 a2 -> ain a0 a3 -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (~ ain a0 a0) -> (~ ain a3 a2) -> (~ ain a3 a3) -> (~ asubq a2 a1) -> ain a0 (asm a3 (asing a1)) -> (~ asubq a2 (asing a1)) -> ain a2 (asm (apow a2) (asing a1)) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ (a2 = asm (apow a2) a2)) -> (~ ain (apow (asing a1)) a3) -> (~ (asing a2 = asm (apow a2) a2)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ (asm (apow a2) a2 = apow a2)) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> (~ ain (apow a2) a4) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain a0 (aun a3 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> ain a3 (aun a4 (asing (apow a2))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (asm (asm a4 a2) (asing a2) = asing a3) -> (asm (asm a4 a2) (asing a3) = asing a2) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal4 a3) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal4 (apow a2) -> aal4 (aun a3 (asing (asing a2))) -> aex2 (asm (apow a2) a2) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex5 (aun (asing (asing a1)) a4) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMKd5WLuNSDeDnj8nmLod3YxdmEPNMZPUr5: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 (asm X24 (asing X25)) -> aal5 X24) -> asubq a2 a3 -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> ain a0 (asm (apow a2) (asing a2)) -> ain (asing a1) (apow a2) -> (~ (a1 = asing a1)) -> (~ ain (asm a3 (asing a1)) a2) -> (~ asubq (asm (apow a2) a2) a2) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ ain (apow a2) (asing (asing a1))) -> (~ asubq (apow a2) (asing a2)) -> (~ ain (asing a2) a3) -> (~ (a3 = apow a2)) -> ain a0 (apow (asing (asing a1))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a0 (asm a4 (asing a1)) -> ain a2 (aun (asing a2) (apow (asing a2))) -> (~ ain (apow a2) a4) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> (~ ain a0 (asm a4 a2)) -> ain a2 (asm a4 a2) -> ain a3 (asm a4 (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain a3 (asing (apow a2))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal3 a2) -> (~ aal4 (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> aal5 (aun a4 (asing (apow a2))) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex5 (aun (asing (apow (asing a1))) a4) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ (a1 = apow a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMNS9BShEGU76nNrXpRDncRk42bvKi8gSqt: (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (~ ain a0 a0) -> (~ ain a2 a0) -> (~ (a1 = a3)) -> (~ asubq a2 a0) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> ain (asing a1) (asing (asing a1)) -> ain a1 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) (asm (apow a2) a2) -> (~ ain a1 (asing (asing a1))) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ (asing a1 = a3)) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ (asing a2 = asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> ain a0 (apow (asm a3 (asing a1))) -> ain a2 (aun (asing (asing a2)) a4) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq a1 (asm a2 (asing a1)) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal3 (aun (asing a1) (asing a3))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (~ aal5 (apow a2)) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal2 (asm a4 a2) -> aal5 (aun (asing (asing a1)) a4) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex4 (apow a2) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex5 (aun (asing (asing a2)) a4) -> aex5 (aun (apow a2) (asing (apow a2))) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (~ (a1 = apow a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMSn7W8wri52wiE1pWca7gxt4THXwRUApFf: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 (asm X24 (asing X25)) -> aal5 X24) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (~ ain a0 (asing a1)) -> asubq (asing a1) a2 -> (~ (a0 = asing (asing a1))) -> (~ ain (asing a1) (asing a2)) -> ain a2 (apow a2) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ ain (asing (asing a1)) a3) -> (~ (asm a3 (asing a1) = a3)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> ain a1 (aun a3 (asing (asing a2))) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> ain a1 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain a0 (aun a4 (asing (apow a2))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (~ asubq (asm a4 (asing a2)) a2) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq a1 (asm a2 (asing a1)) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> (asm (asm a4 a2) (asing a2) = asing a3) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (~ aal3 (asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> aal2 (apow (asing (asing a1))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 (aun a1 (asing (apow a2))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex5 (aun (asing (asing a2)) a4) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> (~ ain (asing a2) (asm (apow a2) a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMVX6xG72g8j1ZKWKHDLmgGLuLt7oTiGERc: (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (~ ain a2 a1) -> (~ ain a2 a2) -> (~ ain (asing a1) a0) -> ain a2 (asing a2) -> (~ (a0 = asm a3 (asing a1))) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> (~ ain a1 (asm (apow a2) a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a3 (apow a2)) -> (~ asubq (apow a2) (asing a2)) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ (a3 = apow a2)) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain a0 (apow (apow (asing a1))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain a0 (apow (asm a3 (asing a1))) -> (~ ain (asing a1) (asm a4 a2)) -> ain a2 (asm a4 (apow (asing a2))) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain a0 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq a4 (aun (asing (asing a1)) a4) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (asm a2 (asing a1)) a1 -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal4 a4 -> aal5 (aun (apow a2) (asing (asing a2))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asing (asing (asing a1))) a4) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)).
admit.
Qed.

Theorem conj_AbstrHF_TMGNfLoCgXqZ9EmGzHNf2sHAqN1RxB4Vzyo: ain a2 a3 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (~ ain a3 a2) -> (~ (a0 = a1)) -> ain a0 (apow a2) -> (~ ain (asing a1) a2) -> (~ (a0 = asing a2)) -> (~ ain (asing a2) a1) -> ain a2 (asm (apow a2) (asing a1)) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (~ ain (asing a2) (apow a2)) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> (~ ain a1 (asing (apow (asing a1)))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> (~ ain (asing a2) a4) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> ain a0 (aun (asing a2) (apow (asing a2))) -> ain a2 (aun a3 (asing (asing a2))) -> (~ ain a0 (asing a3)) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> ain a3 (asm a4 (asing a1)) -> ain (asing a2) (aun (asing (asing a2)) a4) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun a4 (asing (apow a2))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> aal2 (apow (asing (asing a1))) -> aal3 (asm (apow a2) (asing a1)) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> ain (asing a1) (aun (asing a1) (asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMFqoD37YJCay7ExgRkEYYYqpxXXAD1bDMN: (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> ain a2 a4 -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (~ ain a2 a0) -> ain a0 (apow a2) -> (~ asubq a1 (asing a1)) -> (~ ain (asing a1) a2) -> (~ (a1 = asm a3 (asing a1))) -> (~ asubq (asing a1) (asing a2)) -> (~ ain a1 (asm a3 (asing a1))) -> (~ asubq (asm (apow a2) a2) a2) -> (~ (asing a1 = asing (asing a1))) -> (~ (a2 = asing (asing a1))) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ ain (asing (asing a1)) a3) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ ain a1 (asing (apow (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a2 (asm a4 (asing a1)) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> ain a0 (aun (asing (asing a2)) a4) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain a1 (aun a3 (asing (apow a2))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq a3 (aun a3 (asing (apow a2))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asing a1) (asm a2 (asing a0)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm a3 (asing a2) = a2) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal2 a1) -> (~ aal2 (asing a3)) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (~ aal4 a3) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal5 (aun (asing (asing a1)) a4) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex2 (asm (apow a2) a2) -> aex2 (aun a1 (asing a3)) -> aex2 (aun a1 (asing (apow a2))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))).
admit.
Qed.

Theorem conj_AbstrHF_TMRw29v8vLQ6UwZizfR2prbDjJsQqSCf3ZJ: (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 (asm X24 (asing X25)) -> aal5 X24) -> (~ ain a1 a1) -> (~ ain a3 a2) -> (~ asubq a1 a0) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain a2 (asing a2) -> (~ ain a0 (asing a1)) -> ain (asing a1) (apow a2) -> (~ ain a2 (apow (asing a2))) -> (~ ain (asing a1) (asing a1)) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ (asing a1 = asing (asing a1))) -> (~ ain a3 (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> ain a1 (asm a4 (asing a2)) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal3 (asm a4 (asing a1)) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex2 a2 -> aex2 (apow (asing a1)) -> aex2 (asm a3 (asing a1)) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMSy7mLSskQ3BgBZrJaqMXK1cwGx3o92SsQ: (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (~ (a0 = a3)) -> (~ asubq a2 a0) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ ain a1 (apow (asing a1))) -> ain (asing a1) (apow a2) -> (~ asubq a1 (asing a2)) -> ain (asing a1) (asm (apow a2) (asing a2)) -> asubq a1 (asm a3 (asing a1)) -> (~ ain (asing (asing a1)) a2) -> (~ ain (asing a1) a3) -> (~ (a2 = asm a3 (asing a1))) -> (~ ain (apow a2) (asing a2)) -> (~ (asing a2 = apow a2)) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (asing a2) (apow (asing a2))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> ain a3 (aun a1 (asing a3)) -> ain a1 (asm a4 (apow (asing a2))) -> ain a2 (aun a3 (asing (apow a2))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> ain a0 (aun a4 (asing (apow a2))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal3 (apow (asing a1))) -> (~ aal3 (asm a4 a2)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex3 (asm a4 (asing a1)) -> aex3 (asm (apow a2) (asing a0)) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (~ ain (apow (asing a1)) a3).
admit.
Qed.

Theorem conj_AbstrHF_TMTmgWMuHyaYp4MY6JrXo5Rqeho9KTypndQ: (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a3 a3) -> (~ asubq a3 a2) -> (~ (a0 = a1)) -> (~ asubq a1 a0) -> (~ asubq a2 a0) -> ain a1 (asm (apow a2) (apow (asing a1))) -> (~ ain a2 (asing a1)) -> (~ ain a2 (asing (asing a1))) -> (~ (asing a1 = asing a2)) -> (~ ain (asing a1) a3) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ ain (apow a2) (apow a2)) -> (~ (asing a2 = a3)) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> ain a1 (aun a3 (asing (asing a2))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> (~ ain (asing (asing a1)) a4) -> (~ ain (apow (asing a1)) a4) -> ain a3 (asm a4 (asing a2)) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain a1 (aun a2 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq a1 (asm a2 (asing a1)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> (asm a4 (asing a3) = a3) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal3 (asm (apow a2) (asing a1)) -> aex2 (aun a1 (asing a3)) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun (apow a2) (asing (apow a2))) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, (~ aal2 (asing X24))).
admit.
Qed.

Theorem conj_AbstrHF_TMbLMELAy6r6Dw3Qt1y8oujfzavgdZtxoP9: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> asubq a3 a4 -> (~ ain (asing a1) a2) -> (~ (a1 = asm a3 (asing a1))) -> (~ ain (asing a1) (apow (asing a2))) -> (~ ain a1 (asing (asing a1))) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ ain (asing (asing a1)) a2) -> (~ (a1 = apow (asing a1))) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ (asing a1 = apow a2)) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (~ (a2 = apow (asing a1))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ ain (apow a2) (apow a2)) -> (~ ain (asing a2) (asm a3 (asing a1))) -> (~ (a0 = apow a2)) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> (~ ain (apow (asing a1)) a4) -> ain a3 (asm a4 a2) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain a1 (aun a2 (asing (apow a2))) -> ain a0 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (asm a2 (asing a0) = asing a1) -> (asm a2 (asing a1) = a1) -> asubq a2 (asm a3 (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal2 (asm (apow a2) (apow (asing a1))) -> aal3 (asm a4 (asing a2)) -> aal5 (aun (apow a2) (asing (apow a2))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex4 (apow a2) -> aex3 (asm a4 (asing a0)) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain (apow a2) (asing (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMMSQLGWT4DHgrPf2uH6fS2UijTtGT5BEam: (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> ain a0 a1 -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 (asm X24 (asing X25)) -> aal5 X24) -> (~ ain a3 a3) -> asubq a2 a3 -> (~ (a0 = a1)) -> ain (asing a1) (asing (asing a1)) -> ain a1 (asm (apow a2) (apow (asing a2))) -> asubq a1 (apow (asing a1)) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ asubq a2 (asm a3 (asing a1))) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ asubq (apow a2) (apow (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ (asm a3 (asing a1) = a3)) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> ain a3 (asm a4 (apow (asing a2))) -> (~ ain (asing a1) (asing (apow a2))) -> ain a0 (aun a1 (asing (apow a2))) -> ain a0 (aun a3 (asing (apow a2))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun a4 (asing (apow a2))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a3 (aun a3 (asing (asing a2))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (~ aal3 (asm a3 (asing a1))) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aal4 (aun a3 (asing (apow a2))) -> aal5 (aun (asing (asing a2)) a4) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex3 (asm (apow a2) (asing a1)) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex5 (aun (asing (asing a1)) a4) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMbPw1fQhmgrjyoaMxbxLLZ3wrvLy4UXyq4: ain a1 a4 -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a2 a2) -> (~ (a0 = a3)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> (~ ain (asing a1) a1) -> ain a2 (asm a3 (asing a1)) -> (~ ain a2 (apow (asing a2))) -> ain a2 (asm (apow a2) (apow (asing a2))) -> (~ (asing a1 = asm a3 (asing a1))) -> asubq (asing (asing a1)) (apow (asing a1)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (~ ain (apow a2) a3) -> (~ (asing a2 = asm a3 (asing a1))) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> (~ ain a2 (asing a3)) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal2 a1) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal2 (asm (apow a2) a2) -> aal4 (apow a2) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 (asm (apow a2) a2) -> aex2 (aun a1 (asing a3)) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex3 (asm a4 (asing a1)) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (asm (asm a4 (asing a2)) (asing a3) = a2).
admit.
Qed.

Theorem conj_AbstrHF_TMRERUF53CXGXTATEZCExLAimCJQYLDwMeC: (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (~ asubq a1 (asing a2)) -> (~ ain a2 (apow (asing a1))) -> (~ ain a1 (asing (asing a1))) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ ain a2 (asing (asing a1))) -> (~ (a2 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> asubq (asm a3 (asing a1)) (apow a2) -> (~ (asing a2 = a3)) -> ain a0 (apow (asing (asing a1))) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> (~ ain a1 (asing a3)) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain a2 (asm a4 (apow (asing a2))) -> ain a1 (aun (asing (asing a2)) a4) -> ain a3 (aun (asing (asing a2)) a4) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq a3 (aun a3 (asing (asing a2))) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> (asm a4 (asing a3) = a3) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal3 (aun a1 (asing a3))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal4 (asm a4 (asing a2))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal3 (asm a4 (asing a2)) -> aal3 (asm a4 (asing a1)) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex4 (apow a2) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMVvkKjS2vpWKdiby8jpbNWP73t2wy7KavF: (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ ain a1 (asing a2)) -> (~ ain (asing a1) (asing a2)) -> ain a2 (apow a2) -> (~ (a1 = asm a3 (asing a1))) -> (~ ain (asing a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ (a1 = apow a2)) -> (~ (asing a2 = apow a2)) -> (~ (a3 = apow a2)) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> ain (asing a2) (asing (asing a2)) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> (~ ain (asing a1) a4) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain (apow a2) (asing (apow a2)) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq a2 (asm a4 (asing a2)) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq a1 (asm a2 (asing a1)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal3 (asm a3 (asing a1))) -> aal2 (asm a4 a2) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal4 (aun a3 (asing (asing a2))) -> aex3 (asm (apow a2) (asing a2)) -> aex3 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMX3f9LE3VZJ9KiZqnjNkWR8teinok45RaK: (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (~ ain a2 a1) -> (~ (a0 = a1)) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> ain a1 (apow a2) -> (~ ain a1 (apow (asing a2))) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ (a0 = asing (asing a1))) -> (~ (a1 = asm a3 (asing a1))) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ ain a1 (asm (apow a2) a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (~ ain (asing a2) (apow a2)) -> (~ ain (asm (apow a2) a2) (apow a2)) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> (~ (asing a2 = asm (apow a2) a2)) -> (~ (asm a3 (asing a1) = apow a2)) -> (~ (a3 = apow a2)) -> ain a0 (apow (apow (asing a1))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> ain a1 (asm a4 (asing a2)) -> ain a3 (asm a4 (asing a2)) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> ain a2 (aun a3 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> ain a2 (aun a4 (asing (apow a2))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq a3 (aun a3 (asing (apow a2))) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)) -> asubq a1 (asm a2 (asing a1)) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> (asm (asm a4 a2) (asing a3) = asing a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> aal2 a2 -> aal3 (asm (apow a2) (asing a1)) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex2 (asm a3 (asing a2)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm a4 (asing a0)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> ain a1 a2.
admit.
Qed.

Theorem conj_AbstrHF_TMcj4sTGhs7DM5wwRHhjRGDJ5CTczRsRCL7: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (~ ain a0 a0) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> (~ ain (asing a2) a1) -> (~ ain a3 (asing a1)) -> (~ ain (asing a2) a2) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a0 (asm a4 (asing a1)) -> ain (asing a2) (aun a3 (asing (asing a2))) -> (~ ain a1 (asing a3)) -> ain a0 (aun a1 (asing a3)) -> (~ ain (asing a1) (asm a4 a2)) -> ain a2 (aun (asing (asing a2)) a4) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> (asm (asm a4 a2) (asing a2) = asing a3) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal4 a3) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (~ aal4 (asm a4 (asing a2))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> aal2 (asm (apow a2) a2) -> aal3 (aun (asing a2) (apow (asing a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (~ aal3 a2).
admit.
Qed.

Theorem conj_AbstrHF_TMZazKYd9vPmpzHTooKE72weSBz6m2ycTYh: (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> ain a0 a3 -> ain a1 a3 -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (~ ain a3 a2) -> (~ asubq a3 a2) -> (~ (a0 = a2)) -> (~ (a1 = a2)) -> ain a2 (asing a2) -> (~ (a0 = asing (asing a1))) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ ain a1 (asm a3 (asing a1))) -> (~ ain a1 (asm (apow a2) a2)) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (~ asubq (apow a2) (asing (asing a1))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ ain (asing a2) (asm a3 (asing a1))) -> (~ ain (asing a2) (asm (apow a2) a2)) -> (~ (asing a2 = asm (apow a2) a2)) -> ain (asing a2) (asing (asing a2)) -> (~ ain a3 (asing (asing a2))) -> ain (asing a2) (apow (asing a2)) -> ain a0 (aun (asing a1) (apow (asing a2))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain a3 (asm a4 (asing a1)) -> ain a3 (asm a4 (apow (asing a2))) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a2 (aun (asing (asing a2)) a4) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain a0 (aun a1 (asing (apow a2))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (asm a2 (asing a0) = asing a1) -> asubq a2 (asm a3 (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> (asm a4 (asing a3) = a3) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal3 (asm (apow a2) a2)) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal5 (aun (apow a2) (asing (apow a2))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (asm (apow a2) a2) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMUgMWnzsDeTa4H7p68edo3QV4ABJDSK5Ut: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (~ ain (asing a1) a2) -> (~ asubq (asing a1) (asing a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (apow (asing a1)) a3) -> (~ (a0 = apow a2)) -> (~ (asing a2 = asm a3 (asing a1))) -> (~ (asing a2 = a3)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a1 (aun a4 (asing (apow a2))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (asm a2 (asing a0) = asing a1) -> (asm a2 (asing a1) = a1) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> (asm a4 (asing a3) = a3) -> asubq (aun (asing a1) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal2 (asing (apow a2))) -> (~ aal3 (aun a1 (asing a3))) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> aal3 (aun a2 (asing (apow a2))) -> aal5 (aun (apow a2) (asing (apow a2))) -> aex2 (asm a4 a2) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> aex5 (aun a4 (asing (apow a2))) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))).
admit.
Qed.

Theorem conj_AbstrHF_TMRwRtnrLcc4QsLeDd6qzmh6CiYhwFR7mHb: (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> ain a1 a3 -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (~ asubq a2 a1) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (~ ain (asing a2) a2) -> (~ ain (apow a2) a2) -> (~ ain (apow a2) a3) -> (~ (asing a2 = apow a2)) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> ain a2 (asm a4 (asing a1)) -> ain a0 (aun (asing a2) (apow (asing a2))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> (~ ain a2 (aun a1 (asing a3))) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain a0 (aun a2 (asing (apow a2))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (asm a3 (asing a2) = a2) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> (asm (apow a2) (asing (asing a1)) = a3) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (~ aal3 (apow (asing a2))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal3 (asm (apow a2) (apow (asing a2))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (~ asubq a3 a2).
admit.
Qed.

Theorem conj_AbstrHF_TMHKxNtwkEXsXESp4totVgEcJfb1pD5kSF6: (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (~ (a0 = a3)) -> (~ (asing a1 = a2)) -> ain a0 (apow (asing a2)) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (~ (a1 = asing (asing a1))) -> (~ asubq a2 (asm a3 (asing a1))) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ ain a3 (asm a3 (asing a1))) -> (~ (a1 = asm (apow a2) a2)) -> (~ (a1 = apow a2)) -> (~ (a3 = asm (apow a2) a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> (~ ain (asing a2) (asing a3)) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain a1 (asm a4 (apow (asing a2))) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> aex3 (asm a4 (asing a3)) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex5 (aun a4 (asing (apow a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMZuSFxCQZvtH6QYKVhbBrusxtMg25p3JQZ: (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (~ ain a2 a2) -> (~ (a2 = a3)) -> (~ ain (asing a2) a1) -> (~ asubq a2 (asing a2)) -> (~ ain (asing a2) a3) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> ain a1 (apow (apow (asing a1))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (asing a2) (aun (asing (asing a2)) a4) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal2 (asing a3)) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> aal3 (asm a4 (asing a2)) -> aal5 (aun (asing (asing a2)) a4) -> aal5 (aun (apow a2) (asing (apow a2))) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (apow (asing a2)) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex5 (aun (asing (asing a1)) a4) -> aex5 (aun (asing (asing a2)) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))).
admit.
Qed.

Theorem conj_AbstrHF_TMS5PEKxtRQuK7CFWWtiTvbVkhzrQcN9gSE: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> ain a1 (aun (asing a1) (asing (asing a1))) -> (~ (a0 = asing a1)) -> (~ ain (asing a1) a2) -> (~ asubq a1 (asing a2)) -> (~ (asing a1 = asm a3 (asing a1))) -> (~ (a0 = apow a2)) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> ain a0 (aun a1 (asing a3)) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> asubq a4 (aun (asing (asing a2)) a4) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> (asm (asm a4 a2) (asing a3) = asing a2) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> (asm a4 (asing a3) = a3) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (~ aal5 a4) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> aal2 (apow (asing (asing a1))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex2 (apow (asing a2)) -> aex2 (aun a1 (asing (apow a2))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))).
admit.
Qed.

Theorem conj_AbstrHF_TMLAKYFJtTz1At1gQAmkpeTZJgFvZXHPYkQ: (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (~ ain a0 a0) -> (~ asubq a1 a0) -> (forall X24:set, forall X25:set, asubq X25 (asing X24) -> ((X25 = a0) \/ (X25 = asing X24))) -> ain a0 (apow a2) -> (~ ain a0 (asing a1)) -> (~ (asing a1 = a2)) -> (~ asubq a2 (asing a2)) -> (~ (a1 = asing a2)) -> (~ asubq (asing a2) a2) -> (~ asubq (asm (apow a2) a2) a2) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> (~ (a1 = asm (apow a2) a2)) -> (~ (apow (asing a1) = a3)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> (~ (asing a2 = apow a2)) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain a2 (aun a1 (asing a3))) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm a4 (asing a3)) a3 -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aex2 (asm a4 a2) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex4 (aun a3 (asing (apow a2))) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMVRSZxRPNm3vGqorHQaGH2RMRweyAFwJfV: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> ain a2 a3 -> ain a1 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> asubq (asing a0) a1 -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (~ ain a1 a1) -> ain a0 (apow a2) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> ain a2 (asm a3 (asing a1)) -> ain a0 (apow (asing a2)) -> (~ ain a1 (asing (asing a1))) -> (~ (a2 = asm (apow a2) a2)) -> (~ asubq a3 (asing a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> ain a0 (asm a4 (asing a1)) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain a3 (aun a1 (asing a3)) -> (~ ain (apow (asing a1)) a4) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> ain (asing a2) (aun (asing (asing a2)) a4) -> ain a0 (aun (asing (asing a2)) a4) -> ain a1 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq a4 (aun (asing (asing a2)) a4) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> asubq a1 (asm a2 (asing a1)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal3 (apow (asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> aal3 (asm (apow a2) (asing a2)) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 (asm a3 (asing a1)) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMTEEmx9m6Ao8ZAHdtHjAh91wkFmGyi6CC7: (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> ain a1 a3 -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> ain a1 (aun (asing a1) (asing (asing a1))) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> (~ ain a3 (asing a1)) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ ain a2 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ (a2 = asm a3 (asing a1))) -> (~ (a3 = asm (apow a2) a2)) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a0 (aun (asing a2) (apow (asing a2))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> ain a2 (asm a4 a2) -> ain a1 (asm a4 (apow (asing a2))) -> ain a1 (aun (asing (asing a2)) a4) -> ain a0 (aun (asing (asing a2)) a4) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a1 (aun a4 (asing (apow a2))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> asubq a3 (asm a4 (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> aal4 (apow a2) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (aun (asing a2) (asing (asing a2))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex4 (apow a2) -> aex3 (asm a4 (asing a3)) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))).
admit.
Qed.

Theorem conj_AbstrHF_TMUvRRUeFDetaFatYP2WrC9bmtmz86UF3vK: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 (asm X24 (asing X25)) -> aal5 X24) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> asubq (asing a1) a2 -> ain a0 (asm (apow a2) (asing a1)) -> (~ ain a1 (apow (asing a2))) -> (~ ain a1 (asing a2)) -> (~ (a0 = asm a3 (asing a1))) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ ain a3 (asing a1)) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ (a1 = asing (asing a1))) -> (~ ain (asing a2) a2) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a3 (asing a2)) -> (~ ain (apow a2) (asing a2)) -> (~ ain (asing (asing a1)) a3) -> (~ (a0 = apow a2)) -> ain a0 (apow (apow (asing a1))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (apow a2) (apow (asing a2))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain a3 (asm a4 (asing a2)) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (aun (asing a1) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> aal2 (asm a3 (asing a1)) -> aal5 (aun (asing (apow (asing a1))) a4) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (asm a4 a2) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 a4 -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))).
admit.
Qed.

Theorem conj_AbstrHF_TMJ6SKTHUPwUz4HdcHKvjmniEQk13zTvapx: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> asubq a3 a4 -> (~ (a1 = a3)) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ ain (asing a1) a0) -> (~ ain a0 (asing a2)) -> (~ ain (asing a2) a1) -> ain (asing a1) (apow (asing a1)) -> (~ (asing a1 = a2)) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ (asing a1 = asing a2)) -> (~ (a2 = asing (asing a1))) -> (~ ain (asing a1) a3) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (~ (a2 = asing a2)) -> (~ ain (asing a2) a3) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain a2 (aun a3 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> (asm (apow a2) (asing (asing a1)) = a3) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal3 (asm (apow a2) (asing a2)) -> aal3 a3 -> aal4 (apow a2) -> aal5 (aun (asing (asing (asing a1))) a4) -> aex2 (apow (asing a2)) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex3 a3 -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex3 (asm a4 (asing a2)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ asubq (asing a1) (asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMPj4WXDq3uVmLrgR8mKupCxMjDd81bRcxg: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> ain a0 a3 -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> ain a1 (asing a1) -> ain a2 (asing a2) -> (~ asubq a1 (asing a1)) -> (~ (a1 = asing a1)) -> asubq a1 (apow (asing a1)) -> (~ ain (asing a1) (asing a2)) -> (~ ain a2 (asing a1)) -> ain a2 (apow a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ ain a3 (asing a2)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> (~ (asing a2 = apow a2)) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> ain a2 (asm a4 (asing a1)) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> (~ ain (apow (asing a1)) a4) -> ain a3 (asm a4 (asing a2)) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain a2 (asm a4 (apow (asing a2))) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> ain a1 (aun (asing (asing a2)) a4) -> ain a3 (aun (asing (asing a2)) a4) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain a3 (aun a4 (asing (apow a2))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq a1 (asm a2 (asing a1)) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 (asm a4 a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal5 (apow a2)) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> aex2 a2 -> aex2 (apow (asing a2)) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (aun a1 (asing a3)) -> aex2 (asm a3 (asing a2)) -> aex3 (aun a2 (asing (apow a2))) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))).
admit.
Qed.

Theorem conj_AbstrHF_TMYsTtoSpjcuDF7VXAYHMZZR1Phkf2ZL5Cj: (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (~ ain a3 a2) -> (~ (asing a1 = a2)) -> (~ asubq a2 (asing a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (~ (a2 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ ain a3 (apow a2)) -> (~ (a3 = asm (apow a2) a2)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> (~ ain (asing a2) (asing a3)) -> ain a2 (asm a4 a2) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> (~ ain a1 (asing (apow a2))) -> ain a2 (aun a3 (asing (apow a2))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> asubq (asm a3 (asing a2)) a2 -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> (asm a4 (asing a3) = a3) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal4 (asm (apow a2) (asing a1))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal4 (aun a3 (asing (apow a2))) -> aex2 (asm a3 (asing a1)) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))).
admit.
Qed.

Theorem conj_AbstrHF_TMGMp28iiFKfS8zeamiF2pCVbrvgmHuQdCc: (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ ain a2 a2) -> (~ asubq a1 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> asubq (asing (asing a1)) (apow (asing a1)) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a2) (apow a2)) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ asubq a3 (asing a2)) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ (asing (asing a1) = a3)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> ain a0 (apow (asing (asing a1))) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> ain a2 (asm a4 a2) -> ain a1 (asm a4 (apow (asing a2))) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain a0 (aun a3 (asing (apow a2))) -> ain a1 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> (asm (asm a4 a2) (asing a3) = asing a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> (~ aal2 (asing a2)) -> (~ aal3 (asm a3 (asing a1))) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal4 (asm a4 (asing a1))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal2 (asm (apow a2) (apow (asing a1))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex2 (asm (apow a2) a2) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ asubq (aun (asing (asing a2)) a4) a4).
admit.
Qed.

Theorem conj_AbstrHF_TMSs9482s5BKYGPHtpkoRpqjP23zjy8AHsF: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (~ asubq a2 (asing a2)) -> ain a2 (asm (apow a2) (apow (asing a2))) -> ain a0 (apow (asing a2)) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ asubq (asing a1) (asing a2)) -> (~ ain (apow a2) a2) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (~ (a2 = apow a2)) -> asubq (asm a3 (asing a1)) (apow a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ (a3 = apow a2)) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> ain a1 (aun a3 (asing (asing a2))) -> (~ ain (apow (asing a1)) a4) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> ain a0 (aun (asing (asing a2)) a4) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain a1 (aun a2 (asing (apow a2))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> asubq a3 (asm (apow a2) (asing (asing a1))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> aal2 (asm (apow a2) a2) -> aal3 (asm (apow a2) (asing a1)) -> aal4 (aun a3 (asing (asing a2))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> (~ aal2 (asing a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMKrZzDqukFAuU38QUgWsA21RakgUrAWwcV: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, asubq X24 X24) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (~ ain a0 a0) -> ain a0 (apow (asing a1)) -> ain (asing a1) (apow a2) -> (~ (a0 = asm (apow a2) a2)) -> (~ ain (asm a3 (asing a1)) a2) -> (~ ain a2 (asing (asing a1))) -> (~ (asing a1 = a3)) -> asubq (asing (asing a1)) (apow (asing a1)) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ asubq a3 (asing a2)) -> (~ ain (asing a2) (asm (apow a2) a2)) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain a3 (asing (asing a2))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain a1 (asm a4 (asing a2)) -> ain a3 (asm a4 (asing a2)) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> ain a1 (aun (asing (asing a2)) a4) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> asubq (asm a3 (asing a2)) a2 -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> (~ aal4 a3) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> aal2 (asm a3 (asing a1)) -> aal3 (aun (asing a1) (apow (asing a2))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (aun a3 (asing (apow a2))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex5 (aun (asing (apow (asing a1))) a4) -> aex5 (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMHSkVn6ztte1kLBD2qHm6igiixqD8QqHfK: (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a2 a0) -> (~ ain a3 a2) -> asubq a1 a2 -> (~ ain a0 (asing (asing a1))) -> asubq a1 (asm a3 (asing a1)) -> ain a2 (asm (apow a2) a2) -> (~ (a1 = asing (asing a1))) -> (~ (asing a1 = asm a3 (asing a1))) -> (~ (a2 = asm a3 (asing a1))) -> (~ (asm a3 (asing a1) = apow a2)) -> (~ (asm (apow a2) a2 = apow a2)) -> ain a1 (apow (apow (asing a1))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain a2 (asing a3)) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> (~ ain a0 (asm a4 a2)) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a0 (aun a2 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) a4 -> (~ aal2 (asing a1)) -> (~ aal2 (asing a3)) -> (~ aal3 (asm (apow a2) a2)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> aal3 (asm (apow a2) (apow (asing a2))) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex2 (asm (apow a2) a2) -> aex3 (asm (apow a2) (asing a0)) -> aex3 (asm a4 (asing a3)) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (forall X24:set, asubq a0 X24).
admit.
Qed.

Theorem conj_AbstrHF_TMFewfEF1dVG6k4EL86EYLZnsC61rWASTjq: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (~ ain a2 a1) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> (~ ain (asing a1) a2) -> (~ (a0 = asing a2)) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain (asing (asing a1)) a2) -> (~ ain (asm a3 (asing a1)) a2) -> (~ (a2 = apow (asing a1))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ ain (asing a2) (asm a3 (asing a1))) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain a2 (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> ain a0 (aun a1 (asing a3)) -> (~ ain a2 (aun a1 (asing a3))) -> (~ ain a0 (asm a4 a2)) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm a2 (asing a1)) a1 -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (asm a4 (asing a3)) a3 -> (asm a4 (asing a3) = a3) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> aal4 a4 -> aal4 (aun a3 (asing (apow a2))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex4 a4 -> aex4 (aun a3 (asing (apow a2))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> asubq a2 (aun (asing a1) (apow (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMM9JdJeDFpoUbsVQu5w9yxYWfhC8w86WDE: ain a1 a3 -> ain a2 a3 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (~ (a0 = a1)) -> (~ ain (asing a1) a0) -> ain a1 (apow a2) -> ain (asing a1) (asm (apow a2) a2) -> (~ ain a0 (asing (asing a1))) -> ain a2 (apow a2) -> ain a2 (asm (apow a2) (asing a1)) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (~ ain (asing (asing a1)) a2) -> (~ asubq (apow a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (~ ain (apow (asing a1)) a3) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> ain a0 (apow (apow (asing a1))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> ain a2 (asm a4 (asing a1)) -> ain a2 (aun a3 (asing (asing a2))) -> ain a3 (asing a3) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain a1 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a2 (aun a2 (asing (apow a2))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq (asing a1) (asm a2 (asing a0)) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal2 (asing a3)) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal5 (aun (apow a2) (asing (apow a2))) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex3 (asm a4 (asing a1)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex3 (asm a4 (asing a0)) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMZeyzBbiihQa5pCRJNs9SgcFtNSEP3Ai61: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> ain a0 a2 -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ asubq a2 a1) -> (~ ain (asing a1) a0) -> ain a0 (apow (asing a1)) -> ain a2 (asing a2) -> ain a1 (apow a2) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ (asing a1 = asm a3 (asing a1))) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ (a2 = asing (asing a1))) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (~ ain a3 (asing a2)) -> (~ (a2 = asing a2)) -> (~ (apow (asing a1) = a3)) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> ain a0 (asm a4 (asing a1)) -> (~ ain (asing a2) a4) -> ain a0 (aun a3 (asing (asing a2))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> (~ ain a0 (asm a4 a2)) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain a2 (aun (asing (asing a2)) a4) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain (apow a2) (asing (apow a2)) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal5 a4) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal2 (asm (apow a2) a2) -> aal3 a3 -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex3 a3 -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26).
admit.
Qed.

Theorem conj_AbstrHF_TMSmnjVJmZckneVkZemgWfdNmS15D6i5k3u: (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> ain a1 a3 -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (~ ain a3 a3) -> (~ asubq a4 a3) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (~ ain a0 (asing a1)) -> (~ asubq a1 (asing a1)) -> (~ ain (asing a1) a1) -> (~ ain a2 (apow (asing a2))) -> (~ ain a1 (asm a3 (asing a1))) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a2) (apow a2)) -> (~ (a1 = asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (~ ain a0 (asing (apow (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain a1 (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> ain a3 (asm a4 (asing a2)) -> ain a3 (asm a4 (apow (asing a2))) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal3 (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (~ aal5 (apow a2)) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aex2 (aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMJFXbb93ep9FZjTvdkX5hVLvtWm4v9bjDA: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> ain a0 a3 -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ (a2 = a3)) -> ain a0 (apow (asing a1)) -> (~ ain a1 (asing a2)) -> ain a2 (asm (apow a2) a2) -> (~ asubq (asing a2) a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (~ ain (asing a2) (asm (apow a2) a2)) -> (~ (asing a2 = asm (apow a2) a2)) -> (~ (a3 = asm (apow a2) a2)) -> (~ (asm a3 (asing a1) = apow a2)) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> ain a3 (aun a1 (asing a3)) -> (~ ain (asm a3 (asing a1)) a4) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (apow a2) (asing a2))) -> (~ aal5 (apow a2)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal4 a4 -> aex3 (asm a4 (asing a1)) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMK1fWA3jv5VtBs3f1fnr5HChHAhQaMn27S: ain a0 a2 -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (~ asubq a2 a1) -> (~ (a0 = a3)) -> (~ ain a0 (asing a1)) -> (~ asubq a1 (asing a1)) -> (~ (a1 = asing a1)) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ ain a2 (asing a1)) -> ain a2 (asm (apow a2) (asing a1)) -> ain a2 (asm (apow a2) (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ ain (apow a2) (asing (asing a1))) -> (~ (a2 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (~ ain (apow a2) (apow a2)) -> (~ ain (asing (asing a1)) a3) -> (~ ain (asing a2) (asm (apow a2) a2)) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> (~ ain (asing (asing a1)) a4) -> (~ ain (apow a2) a4) -> (~ ain a0 (asm a4 a2)) -> ain a2 (asm a4 (apow (asing a2))) -> ain a0 (aun (asing (asing a2)) a4) -> ain (apow a2) (asing (apow a2)) -> ain a1 (aun a3 (asing (apow a2))) -> ain a2 (aun a3 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> asubq (asm a3 (asing a1)) a4 -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (~ aal2 (asing a2)) -> (~ aal4 a3) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal4 (aun a3 (asing (apow a2))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex3 (asm (apow a2) (asing a0)) -> aex4 (aun a3 (asing (asing a2))) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ ain (apow (asing a1)) a3).
admit.
Qed.

Theorem conj_AbstrHF_TMV9BG9bMRBntPd1fjzmn73X9Rec3JwrAAt: (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> ain (asing a1) (asing (asing a1)) -> (~ asubq a1 (asing a2)) -> (~ ain a2 (asing a1)) -> ain a2 (asm (apow a2) (apow (asing a1))) -> ain (asing a1) (asm (apow a2) (asing a1)) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a1 (asm (apow a2) a2)) -> (~ (a1 = asing (asing a1))) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ ain a3 (asing a2)) -> (~ ain a3 (asm a3 (asing a1))) -> (~ (a3 = asm (apow a2) a2)) -> (~ (asing a2 = apow a2)) -> ain a1 (aun a3 (asing (asing a2))) -> ain a0 (asm a4 (asing a2)) -> (~ ain (apow a2) a4) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain a3 (asm a4 (asing a1)) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asing a1) (asing (apow a2))) -> ain (apow a2) (aun a1 (asing (apow a2))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a4 (aun a4 (asing (apow a2))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (asing a1) (asm a2 (asing a0)) -> asubq (asm a3 (asing a2)) a2 -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (~ aal4 a3) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal2 a2 -> aal3 (asm (apow a2) (apow (asing a2))) -> aal4 (aun a3 (asing (asing a2))) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 (apow (asing a1)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (apow a2) -> aex5 (aun (apow a2) (asing (apow a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMS4Giszsrig24tQTFS766HZmhKch7c8GcE: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> asubq a2 a3 -> ain a2 (asing a2) -> (~ ain a1 (asing a2)) -> (~ ain (asing a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> asubq a3 (apow a2) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain a1 (asing (apow (asing a1)))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> ain a0 (asm a4 (asing a2)) -> (~ ain (asm a3 (asing a1)) a4) -> ain a2 (asm a4 a2) -> ain a3 (asm a4 (asing a1)) -> ain a3 (asm a4 (apow (asing a2))) -> ain a1 (aun (asing (asing a2)) a4) -> ain a0 (aun a1 (asing (apow a2))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aal3 a3 -> aal3 (asm (apow a2) (apow (asing a2))) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex3 (asm (apow a2) (asing a1)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMPWiUk5vak8WFrLp8mTZGPhn4NEas5uKTH: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (~ ain a0 a0) -> (~ ain (asing a1) (asing a2)) -> (~ ain a3 (asing a1)) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ asubq a3 (asing a2)) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> (~ ain a2 (aun a1 (asing a3))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal2 (asing a1)) -> (~ aal2 (asing a2)) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> aal3 (asm (apow a2) (apow (asing a2))) -> aal3 (aun a2 (asing (apow a2))) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal5 (aun (apow a2) (asing (apow a2))) -> aex3 (asm a4 (asing a2)) -> aex3 (asm a4 (asing a0)) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))).
admit.
Qed.

Theorem conj_AbstrHF_TMX81LTRSVYTiQ3ksAFi7bSVxpiqn5xCRw8: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (~ ain a3 a2) -> (forall X24:set, forall X25:set, asubq X25 (asing X24) -> ((X25 = a0) \/ (X25 = asing X24))) -> (~ ain (asing a1) a2) -> (~ ain a1 (asing a2)) -> (~ (a0 = asing a2)) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> (~ asubq a2 (asing a1)) -> (~ ain a0 (asm (apow a2) a2)) -> (~ ain a2 (apow (asing a2))) -> (~ ain (apow a2) a2) -> (~ ain (asing a2) (asing (asing a1))) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ (asing a1 = apow a2)) -> (~ ain (apow a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ (a2 = apow a2)) -> (~ ain (asing a2) a3) -> (~ (asm a3 (asing a1) = apow a2)) -> ain a1 (apow (apow (asing a1))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain a0 (asing a3)) -> (~ ain a2 (asing a3)) -> ain a1 (aun (asing (asing a2)) a4) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (asm a2 (asing a1) = a1) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal3 (aun a1 (asing a3))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> aex2 (asm (apow a2) a2) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> (~ (a1 = asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMR5adY1ZSb9dx8Asn3iu2XkFHhRqrFVS8L: (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, (~ ain X24 a0)) -> ain a1 a2 -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (~ ain a2 a0) -> (~ asubq a2 a1) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> ain a0 (apow a2) -> (~ asubq a1 (asing a2)) -> (~ asubq a2 (asing a1)) -> ain a0 (apow (asing a2)) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ ain (asing (asing a1)) a2) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ ain a3 (apow a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ (asm a3 (asing a1) = apow a2)) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> ain a3 (aun (asing a1) (asing a3)) -> ain a3 (asm a4 (asing a1)) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain a0 (aun a1 (asing (apow a2))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a0 (aun a4 (asing (apow a2))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (asm a4 (asing a3)) a3 -> asubq a3 (asm a4 (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (~ aal4 (asm (apow a2) (asing a1))) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal2 (asm a4 a2) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aal5 (aun (apow a2) (asing (apow a2))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (asm a3 (asing a2)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex3 (asm a4 (asing a1)) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))).
admit.
Qed.

Theorem conj_AbstrHF_TMZR5SSJKx4cJjMAuuPrKscVAFzynJE2DT6: ain a2 a3 -> ain a3 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (~ asubq a3 a2) -> (~ (a0 = a1)) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ asubq a1 (asing a2)) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ ain a2 (asing (asing a1))) -> (~ (asing a1 = asing a2)) -> (~ (a0 = apow a2)) -> (~ ain (asing a2) (asm (apow a2) a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ (asing a2 = apow a2)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain a0 (apow (apow (asing a1))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> (~ ain (asing a2) (asing a3)) -> (~ ain (asing (asing a1)) a4) -> (~ ain (asing a1) (asm a4 a2)) -> ain a1 (aun (asing (asing a2)) a4) -> ain a1 (aun a3 (asing (apow a2))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> ain a1 (aun a4 (asing (apow a2))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq (asing a1) (asm a2 (asing a0)) -> asubq a1 (asm a2 (asing a1)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (asm a4 (asing a3)) a3 -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal3 (asm a4 a2)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> aal2 (asm a3 (asing a1)) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex4 (aun a3 (asing (apow a2))) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex5 (aun (asing (asing a1)) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ (a1 = a3)).
admit.
Qed.

Theorem conj_AbstrHF_TMcmBPSBaokAZU6RRmLaQ4rCGEhGty2MZ4n: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> asubq a1 a2 -> (~ (a1 = a3)) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> ain a2 (asing a2) -> (~ ain a1 (asing (asing a1))) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ ain (apow a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asing a2) a4) -> ain a2 (aun (asing a2) (apow (asing a2))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> (~ ain (asing (asing a1)) a4) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain a1 (asm a4 (apow (asing a2))) -> ain a2 (asm a4 (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain a1 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> (asm (apow a2) (asing (asing a1)) = a3) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal3 (asm a4 a2)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> aal3 a3 -> aal5 (aun (asing (asing (asing a1))) a4) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex3 (asm a4 (asing a0)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))).
admit.
Qed.

Theorem conj_AbstrHF_TMKdWs6ShgLZSa8tFm986UKiL2yymVSmyTe: (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> ain a0 a2 -> ain a2 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a2 a1) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain a0 (asm a3 (asing a1)) -> (~ asubq a2 (asing a1)) -> (~ asubq a2 (asing a2)) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ asubq (apow a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (a1 = apow a2)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> ain a0 (asm a4 (asing a1)) -> ain a2 (asm a4 (asing a1)) -> ain a2 (aun a3 (asing (asing a2))) -> (~ ain a0 (asing a3)) -> ain a3 (aun (asing a1) (asing a3)) -> ain a1 (asm a4 (apow (asing a2))) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain a0 (aun (asing (asing a2)) a4) -> ain (apow a2) (asing (apow a2)) -> ain a1 (aun a2 (asing (apow a2))) -> ain a2 (aun a3 (asing (apow a2))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq a4 (aun (asing (asing a1)) a4) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal2 (asing a3)) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> aal3 (asm (apow a2) (asing a1)) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex5 (aun (asing (asing a2)) a4) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)).
admit.
Qed.

Theorem conj_AbstrHF_TMFwAFuxBAaGFP9q7HXs8knwNQyawGTM8Jx: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ asubq a2 a1) -> (~ (a0 = a1)) -> (~ (a0 = a3)) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> (~ ain (asing a2) a2) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ ain a3 (asing a2)) -> ain a0 (apow (asing (asing a1))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain a1 (apow (asm a3 (asing a1))) -> ain a0 (aun a1 (asing a3)) -> ain a2 (asm a4 a2) -> ain a1 (asm a4 (apow (asing a2))) -> ain (asing a2) (aun (asing (asing a2)) a4) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> ain a3 (aun (asing (asing a2)) a4) -> ain a2 (aun (asing (asing a2)) a4) -> ain a2 (aun a3 (asing (apow a2))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> (asm (apow a2) (asing (asing a1)) = a3) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (asm a4 (asing a3)) a3 -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm a3 (asing a1)) a4 -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal5 (apow a2)) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> aex2 (aun a1 (asing a3)) -> aex2 (aun (asing (asing a1)) (asing a3)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMStnzotb4uwJZZ7pQRvwTcBGx8sDUeLEou: (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a2 a2) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> ain a0 (apow a2) -> (~ asubq a1 (asing a1)) -> (~ ain a1 (apow (asing a1))) -> (~ (a0 = apow (asing a1))) -> (~ (a0 = asm (apow a2) a2)) -> ain a0 (apow (asing a2)) -> (~ ain (asing a2) a2) -> (~ ain a3 (asing a2)) -> (~ ain (asing a2) a3) -> asubq a3 (apow a2) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> (~ ain (apow a2) (asing (asing a2))) -> ain a0 (aun (asing a2) (apow (asing a2))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain a3 (asing a3) -> (~ ain a2 (aun a1 (asing a3))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain a0 (aun (asing (asing a2)) a4) -> ain a2 (aun (asing (asing a2)) a4) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> asubq a3 (asm a4 (asing a3)) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal4 (asm (apow a2) (asing a2))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> aal3 a3 -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex2 (asm a3 (asing a1)) -> aex2 (aun (asing (asing a1)) (asing a3)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> aex4 a4 -> aex5 (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMJ1jSRzEXR4QedURWpJbztVhoVztj8RjUd: (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a2 a2) -> (~ ain a3 a2) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ ain a1 (asm (apow a2) a2)) -> (~ (asing a1 = asing a2)) -> (~ ain (asing a2) (asing (asing a1))) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ ain (asing (asing a1)) a3) -> (~ (asing a2 = asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (~ (asm a3 (asing a1) = a3)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> ain a0 (asm a4 (asing a1)) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain (asing (asing a1)) a4) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> (~ ain a0 (asing (apow a2))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (asm a4 (asing a3)) a3 -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asing (asing a1)) a4) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> aal2 (aun (asing a1) (asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMXKRX5xf9FFomGQyxYSbZuUZeLYN7Gm7Y5: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (~ (a1 = a2)) -> (~ (a1 = asing a1)) -> (~ ain a1 (apow (asing a2))) -> (~ (a0 = apow (asing a1))) -> (~ (asing a1 = a2)) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (~ (asing a1 = a3)) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ ain (asing a2) a3) -> asubq (asm a3 (asing a1)) (apow a2) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> (~ ain (asing (asing a1)) a4) -> (~ ain (apow (asing a1)) a4) -> ain a3 (asm a4 (asing a2)) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain a0 (aun (asing (asing a2)) a4) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> (asm (apow a2) (asing (asing a1)) = a3) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (asm a4 (asing a3)) a3 -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> aal4 (apow a2) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 (asm a3 (asing a2)) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (asm a3 (asing a1)) a4.
admit.
Qed.

Theorem conj_AbstrHF_TMZsfjWBHFhcLToAcmN4WhdXGkxAZhVxxzk: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (~ ain a1 a1) -> (~ (a0 = a1)) -> ain a1 (asing a1) -> ain (asing a1) (apow a2) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> ain a2 (asm a3 (asing a1)) -> ain a2 (asm (apow a2) (apow (asing a2))) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ (asing a1 = a3)) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ (a2 = asing a2)) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> ain a1 (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> (~ ain (asing a2) (asing a3)) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> ain a2 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq a4 (aun (asing (asing a1)) a4) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (~ aal2 (asing (asing a1))) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal3 (aun a1 (asing a3))) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal4 (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> aal2 (asm a3 (asing a1)) -> aal5 (aun a4 (asing (apow a2))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> asubq (asing a1) (asm (apow a2) (asing a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMFcfB83YtRXsqtbZDeDqyZzkZUt4LVAjHU: (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> asubq (asing a0) a1 -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> (~ ain a1 X24) -> (X24 = a0)) -> ain a1 (asm (apow a2) (apow (asing a1))) -> (~ ain (asing a2) a1) -> (~ ain (apow a2) a2) -> (~ ain (asing a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (~ (a2 = asm a3 (asing a1))) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ (a2 = asm (apow a2) a2)) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> ain a2 (asm a4 a2) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal3 (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> aal2 (asm (apow a2) a2) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (aun a1 (asing a3)) -> aex3 (asm (apow a2) (asing a2)) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun (apow a2) (asing (asing a2))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> (asm (asm a4 (asing a2)) (asing a3) = a2).
admit.
Qed.

Theorem conj_AbstrHF_TMWrWabbpSKyUZTLBNu2H33bHTfnLfQvSKy: (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> ain a1 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> asubq a3 a4 -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> (~ ain (asing a1) a0) -> ain a1 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 (apow (asing a2))) -> asubq a1 (apow (asing a1)) -> ain a2 (asm a3 (asing a1)) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ asubq (asm (apow a2) a2) a2) -> (~ ain (asing a2) (asing (asing a1))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ (a2 = apow a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ ain (asing a2) (asm a3 (asing a1))) -> (~ ain (asm (apow a2) a2) a3) -> asubq (asm a3 (asing a1)) (apow a2) -> (~ (asing (asing a1) = a3)) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> ain (asing a2) (apow (asing a2)) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> (~ ain (apow (asing a1)) a4) -> (~ ain (asm a3 (asing a1)) a4) -> ain a3 (asm a4 (asing a1)) -> (~ ain a1 (asing (apow a2))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal3 (apow (asing a2))) -> (~ aal3 (aun (asing a1) (asing a3))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal2 (asm a3 (asing a1)) -> aal3 (asm (apow a2) (asing a1)) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal4 (aun a3 (asing (apow a2))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex2 (apow (asing a2)) -> aex2 (aun a1 (asing (apow a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2).
admit.
Qed.

Theorem conj_AbstrHF_TMPQcsGRPnzr3o7YQos8nRZVS1hYuDzLaE7: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> ain a2 a3 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (~ ain a1 a1) -> asubq a2 a3 -> (~ (a1 = a3)) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (~ (a0 = apow (asing a1))) -> (~ (a0 = asing a2)) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> ain a2 (asm (apow a2) a2) -> ain a0 (apow (asing a2)) -> (~ asubq (asing a1) (asing (asing a1))) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ (asing a1 = apow a2)) -> (~ (a2 = apow (asing a1))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ (a2 = apow a2)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ (asm a3 (asing a1) = apow a2)) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> (~ ain a0 (asing (apow (asing a1)))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> ain a0 (aun a3 (asing (asing a2))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain (asing a1) (aun (asing (asing a1)) a4) -> (~ ain a0 (asm a4 a2)) -> ain a2 (asm a4 (apow (asing a2))) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (asing a1) (asing (apow a2))) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain a1 (aun a3 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (asm a2 (asing a1) = a1) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq a3 (asm a4 (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (~ aal2 (asing (apow a2))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> aal3 (asm (apow a2) (asing a1)) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))).
admit.
Qed.

Theorem conj_AbstrHF_TMHvmSVqdzgt5QHAqB5TnJC3iPDHZZvbExC: (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (~ asubq a3 a2) -> (~ (a0 = asing a1)) -> (~ (a0 = asm a3 (asing a1))) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain a2 (asing a3)) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain a3 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq a4 (aun (asing (asing a2)) a4) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) a4 -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal2 (asing a2)) -> (~ aal2 (asing (apow a2))) -> (~ aal3 (asm a3 (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> aal2 (apow (asing (asing a1))) -> aal3 (aun a2 (asing (apow a2))) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal4 (aun a3 (asing (apow a2))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aal5 (aun (asing (asing a2)) a4) -> aex2 (aun a1 (asing a3)) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (~ (asing a1 = a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMZ5so3Qdk2MqUH29RYgpsni2QyXUedFqrN: (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (~ (a0 = a1)) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ ain a0 (asing a2)) -> (~ (a0 = apow (asing a1))) -> asubq a1 (apow (asing a1)) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> (~ (asing a1 = a2)) -> (~ ain a2 (apow (asing a2))) -> (~ (asing a1 = asm a3 (asing a1))) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ ain a3 (asing a2)) -> (~ asubq (apow a2) (asing a2)) -> (~ ain (asing (asing a1)) a3) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a3 (asing (asing a2))) -> ain (asing a2) (apow (asing a2)) -> (~ ain a3 (apow (asing a2))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> ain a0 (asm a4 (asing a2)) -> (~ ain (asm a3 (asing a1)) a4) -> ain a3 (asm a4 (apow (asing a2))) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> ain a0 (aun (asing (asing a2)) a4) -> ain a2 (aun (asing (asing a2)) a4) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (asm (asm a4 a2) (asing a3) = asing a2) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal3 (asm a4 a2)) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> aal3 a3 -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex5 (aun (asing (asing a1)) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMcTsYXi1rjDb947YJhqKdPpPegYX2GU6An: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> ain a3 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (~ ain a0 a0) -> (~ asubq a2 a1) -> (~ (a2 = a3)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> ain a0 (apow a2) -> (~ (a0 = asing (asing a1))) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ ain a1 (asm (apow a2) a2)) -> (~ ain (apow a2) a2) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ (asing a1 = asing (asing a1))) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> asubq (asm a3 (asing a1)) (apow a2) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> (~ ain (asing a2) a4) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> ain a0 (apow (asm a3 (asing a1))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> (~ ain (apow a2) a4) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain a0 (aun a2 (asing (apow a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> asubq (asm a2 (asing a0)) (asing a1) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> (asm (asm a4 a2) (asing a2) = asing a3) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (~ aal5 (apow a2)) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (~ aal5 a4) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal2 (asm (apow a2) a2) -> aal2 (asm a4 a2) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aex2 (asm a3 (asing a1)) -> aex3 (asm a4 (asing a1)) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMHDQRhqKA87vHRm8TnFNAHwy1jLMf9LHuG: (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 (asm X24 (asing X25)) -> aal5 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (~ ain a0 (asing a2)) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ asubq a2 (asing a1)) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (~ (a2 = asm a3 (asing a1))) -> (~ asubq a3 (asing a2)) -> (~ (asing (asing a1) = a3)) -> (~ (asing a2 = a3)) -> (~ ain (asing a2) (asm (apow a2) a2)) -> (~ (asing a2 = apow a2)) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (apow a2) (asing (asing a2))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> (~ ain a0 (asing a3)) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a2 (aun a3 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq a4 (aun (asing (asing a1)) a4) -> (asm a2 (asing a0) = asing a1) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> (~ aal3 (apow (asing a2))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal2 a2 -> aal3 (asm (apow a2) (asing a2)) -> aal3 (asm (apow a2) (asing a1)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> aex4 (apow a2).
admit.
Qed.

Theorem conj_AbstrHF_TMQoYyubsWDtumy9eiGsYiPCqhBG6mVmknE: (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (~ asubq a1 (asing a1)) -> (~ (a0 = asing a1)) -> (~ (a1 = asing a1)) -> (~ ain a0 (asing (asing a1))) -> asubq a1 (asm a3 (asing a1)) -> (~ asubq (asing a1) (asing a2)) -> (~ (a1 = asing (asing a1))) -> (~ ain (asing (asing a1)) a2) -> (~ asubq a2 (asm a3 (asing a1))) -> (~ ain (asing a2) (asing (asing a1))) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ ain (asing a2) (apow a2)) -> (~ (a2 = asm (apow a2) a2)) -> (~ (asm a3 (asing a1) = apow a2)) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain a1 (asing (apow (asing a1)))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> (~ ain a0 (asing a3)) -> (~ ain a1 (asing a3)) -> ain a0 (aun a1 (asing a3)) -> ain a2 (asm a4 a2) -> ain a2 (asm a4 (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> ain a2 (aun a3 (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun a4 (asing (apow a2))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> (asm (apow a2) (asing (asing a1)) = a3) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (~ aal2 (asing a1)) -> (~ aal2 (asing (asing a1))) -> (~ aal2 (asing a3)) -> (~ aal3 (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal3 (aun a1 (asing a3))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> aal3 (asm a4 (asing a1)) -> aal4 (aun a3 (asing (asing a2))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aal5 (aun (apow a2) (asing (apow a2))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 (asm a4 a2) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMXZiXJ9f4B2HD4ZMjMrdFRHQjh41RhhjVV: (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> ain a1 a3 -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (~ ain a2 a0) -> (~ (a0 = a3)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> (~ (a0 = asm a3 (asing a1))) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) (asing a2)) -> ain a2 (asm a3 (asing a1)) -> ain a2 (asm (apow a2) (apow (asing a1))) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ (asing a1 = asing a2)) -> (~ ain (apow a2) (asing (asing a1))) -> (~ (a2 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ (asing (asing a1) = a3)) -> (~ (asing a2 = a3)) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> ain a2 (asm a4 (asing a1)) -> ain a0 (aun a3 (asing (asing a2))) -> ain a3 (asing a3) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain a0 (aun a2 (asing (apow a2))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (asing a1) (asm a2 (asing a0)) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (~ aal2 (asing (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMPu7v7LAbKUSmnfB9QhPbUYUuFszGr5E9H: (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> ain a1 a2 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (~ asubq a2 a0) -> (forall X24:set, forall X25:set, asubq X25 (asing X24) -> ((X25 = a0) \/ (X25 = asing X24))) -> (~ (a0 = asing a1)) -> (~ (asing a1 = asm a3 (asing a1))) -> (~ (asing a1 = asm (apow a2) a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ ain (asing a2) a3) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain a0 (apow (apow (asing a1))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> (~ ain (apow a2) (apow (asing a2))) -> ain a0 (aun (asing a2) (apow (asing a2))) -> ain a2 (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain a1 (apow (asm a3 (asing a1))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> ain (asing a2) (aun (asing (asing a2)) a4) -> (~ ain a0 (asing (apow a2))) -> ain a2 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> (~ aal3 (apow (asing a1))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal3 (asm (apow a2) (apow (asing a2))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal5 (aun (asing (apow (asing a1))) a4) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex3 (asm (apow a2) (asing a0)) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex4 (aun a3 (asing (asing a2))) -> aex3 (asm a4 (asing a0)) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (~ (a0 = apow a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMP7La6D93yF58tnwCSM3KDDdX2Mx6VmQm9: (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> ain a0 a1 -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> asubq a3 a4 -> ain a2 (asing a2) -> (~ ain (asing a1) a2) -> (~ (a0 = apow (asing a1))) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ asubq a2 (asing a1)) -> (~ (a1 = asing (asing a1))) -> (~ ain (asing a2) a2) -> (~ asubq a2 (asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ ain (apow a2) (apow a2)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> ain a2 (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> (~ ain a0 (asm a4 a2)) -> ain a2 (asm a4 a2) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain a0 (aun a3 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm a2 (asing a1)) a1 -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> asubq a3 (asm a4 (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal5 a4) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal2 a2 -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex2 (asm a4 a2) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))).
admit.
Qed.

Theorem conj_AbstrHF_TMNy3CT4VEGkmRzy2yJzrW3CWAp3nbCTLcH: (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> ain a2 a4 -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (~ (a0 = asing a1)) -> ain (asing a1) (asm (apow a2) a2) -> (~ ain a0 (asing (asing a1))) -> (~ asubq a2 (asing a1)) -> (~ ain a2 (apow (asing a1))) -> (~ (a2 = apow (asing a1))) -> (~ asubq a3 (asing a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain a1 (asm a4 (apow (asing a2))) -> ain a1 (aun (asing (asing a2)) a4) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (apow a2))) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> asubq (asm a4 (asing a3)) a3 -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal2 a1) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal4 (asm (apow a2) (asing a2))) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> aal2 (asm (apow a2) a2) -> aal3 (asm a4 (asing a2)) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> asubq a1 (asm a3 (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMYaVXKmCgubXRvjSB7xoMynLyz6eA8CFvp: (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> ain a0 a2 -> ain a1 a3 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (~ ain a2 a2) -> ain a1 (asing a1) -> ain (asing a1) (asing (asing a1)) -> ain a2 (asing a2) -> (~ ain (asing a1) a1) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> ain a2 (asm a3 (asing a1)) -> (~ asubq a2 (asing a1)) -> (~ (a1 = asing (asing a1))) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> asubq (asing (asing a1)) (apow (asing a1)) -> (~ ain (asing a1) a3) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> ain a2 (aun a3 (asing (asing a2))) -> ain a2 (asm a4 a2) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a2)) a2 -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal2 a1) -> (~ aal2 (asing (asing a1))) -> (~ aal4 (asm (apow a2) (asing a2))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal2 (apow (asing (asing a1))) -> aal2 (asm a4 a2) -> aal5 (aun (asing (asing a2)) a4) -> aex2 a2 -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24).
admit.
Qed.

Theorem conj_AbstrHF_TMLuAV9ry1sV6qvLDzGGQSD9vifYxCfWRUz: ain a2 a3 -> ain a0 a4 -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (~ asubq a1 a0) -> ain a1 (asm (apow a2) (apow (asing a1))) -> (~ ain a1 (apow (asing a2))) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ asubq (asm a3 (asing a1)) a2) -> (~ ain a3 (apow a2)) -> (~ asubq a3 (asing a2)) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> (~ ain (asing a2) (asing a3)) -> (~ ain (apow a2) a4) -> (~ ain (asing a1) (asm a4 a2)) -> (~ ain a3 (asing (apow a2))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq (asing a1) (asm a2 (asing a0)) -> asubq (asm a3 (asing a2)) a2 -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (~ aal4 a3) -> (~ aal5 (aun a3 (asing (apow a2)))) -> aal4 a4 -> aal5 (aun (apow a2) (asing (asing a2))) -> aal5 (aun (asing (asing a2)) a4) -> aex2 (aun a1 (asing a3)) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMHZgaMRkD49uxgLAzLByhz9rtda9rBGmo4: (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> asubq (asing a1) a2 -> (~ asubq a1 (asing a2)) -> (~ ain a1 (asing a2)) -> (~ asubq a2 (asing a1)) -> (~ ain (asing a1) (asing a1)) -> (~ (a1 = asing a2)) -> (~ (a1 = apow (asing a1))) -> asubq (asing (asing a1)) (apow (asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ (a3 = asm (apow a2) a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> (~ ain a3 (apow (asing a2))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq a2 (aun a2 (asing (apow a2))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal2 (asing a2)) -> (~ aal3 (asm (apow a2) a2)) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex3 (asm (apow a2) (asing a2)) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (asm a3 (asing a1)) a2).
admit.
Qed.

Theorem conj_AbstrHF_TMPmpbiGqooasuVUsWphdWCbnAruH3pNzmW: (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (~ asubq a3 a2) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ ain (asing a1) a0) -> ain (asing a1) (asing (asing a1)) -> ain a0 (apow (asing a1)) -> (~ asubq (asing a1) (asing a2)) -> (~ ain a1 (asm (apow a2) a2)) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (asing (asing a1) = a3)) -> (~ (asm (apow a2) a2 = apow a2)) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> (~ ain a0 (asing a3)) -> (~ ain (asing (asing a1)) a4) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain a2 (aun a3 (asing (apow a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq a1 (asm a2 (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> aal2 (asm (apow a2) (apow (asing a1))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMJ87usMyRhXDjmJWAb5rC6xwWm4x67QiK6: (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (~ ain a1 a0) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ (asing a1 = a2)) -> (~ asubq a2 (asing a1)) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ (asing a1 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ ain a3 (apow a2)) -> (~ ain (apow a2) (asing a2)) -> (~ ain a3 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain a2 (asing a3)) -> ain a0 (asm a4 (asing a2)) -> ain a3 (asm a4 (apow (asing a2))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> asubq a2 (asm a4 (asing a2)) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq a1 (asm a2 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal4 a3) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> aal2 a2 -> aal2 (asm a4 a2) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aal4 (aun a3 (asing (apow a2))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex2 (asm a4 a2) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> ain a1 (apow (asm a3 (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMQ9vYEkcCPGpaFHjLfbDf1x4agnCJPYeup: (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (~ ain a2 a1) -> (~ (a1 = a2)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> ain a2 (asing a2) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> ain a2 (asm a3 (asing a1)) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a2) a3) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> (~ (apow (asing a1) = a3)) -> ain a0 (apow (asing (asing a1))) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> (~ ain (apow a2) (apow (asing a2))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain a0 (apow (asm a3 (asing a1))) -> (~ ain a1 (asing a3)) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal2 (asing a2)) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (~ aal3 (asm a4 a2)) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal2 (apow (asing (asing a1))) -> aal4 (apow a2) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex2 (asm (apow a2) a2) -> aex3 (asm a4 (asing a1)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex3 (asm (apow a2) (asing a0)) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))).
admit.
Qed.

Theorem conj_AbstrHF_TMP4KJsmyNm5kBniFPbgbsPAo8W1muZxPT7: (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> ain a0 a4 -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (~ ain a0 a0) -> ain (asing a1) (asing (asing a1)) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ (a0 = asm a3 (asing a1))) -> (~ ain a2 (asing a1)) -> (~ asubq a2 (asing a1)) -> (~ ain a0 (asm (apow a2) a2)) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (~ (a1 = asing (asing a1))) -> (~ ain (asm a3 (asing a1)) a2) -> (~ (a2 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> asubq a3 (apow a2) -> ain a0 (apow (asing (asing a1))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (apow a2) (asing (asing a2))) -> (~ ain a3 (apow (asing a2))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> (~ ain (apow a2) a4) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain a1 (asing (apow a2))) -> ain a1 (aun a2 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (asm (asm a4 a2) (asing a2) = asing a3) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal4 a3) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal2 a2 -> aal2 (asm (apow a2) a2) -> aal4 (apow a2) -> aex4 (apow a2) -> aex4 (aun a3 (asing (apow a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMT1jQuHycrWf4E1h65AaUbDnTksh8NpuyX: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (~ ain a2 a2) -> asubq a1 a2 -> (~ asubq a4 a3) -> (~ (a0 = a1)) -> (~ (a2 = a3)) -> ain a1 (apow a2) -> asubq (asing a1) a2 -> (~ ain a0 (asing (asing a1))) -> (~ asubq a2 (asing a2)) -> (~ ain a3 (asing a1)) -> (~ (a1 = apow (asing a1))) -> (~ (asing a1 = asm (apow a2) a2)) -> asubq (asing (asing a1)) (apow (asing a1)) -> (~ ain (asing a1) a3) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> (~ ain (apow a2) (apow (asing a2))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> ain a0 (asm a4 (asing a1)) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain a3 (aun a1 (asing a3)) -> adisjoint (apow (asing a1)) (asm a4 a2) -> (~ ain a0 (asing (apow a2))) -> ain a0 (aun a2 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> (asm (asm a4 a2) (asing a2) = asing a3) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal3 (asm a3 (asing a1))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 (asm (apow a2) a2) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)).
admit.
Qed.

Theorem conj_AbstrHF_TMU4TZeCaR8KnqjJv3yTt3Vosp2VRj63hs6: (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (~ asubq a2 a1) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (~ ain a1 (apow (asing a1))) -> ain (asing a1) (apow a2) -> (~ asubq a1 (asing a2)) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> (~ ain a2 (apow (asing a1))) -> ain a2 (asm (apow a2) (apow (asing a1))) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (apow a2) a3) -> asubq a3 (apow a2) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a2 (asm a4 (asing a1)) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain (asing a2) (aun (asing (asing a2)) a4) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain a1 (asing (apow a2))) -> (~ ain (asing a1) (asing (apow a2))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal2 (asing a3)) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal3 (apow (asing a2))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aal4 (aun a3 (asing (apow a2))) -> aal5 (aun (asing (asing a1)) a4) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))).
admit.
Qed.

Theorem conj_AbstrHF_TMHy5FJMwb3yM2anhFX7W4oN9AmUSCsLSaD: (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (~ asubq a1 (asing a1)) -> ain a0 (asm (apow a2) (asing a1)) -> (~ ain a1 (asing a2)) -> ain a2 (asm (apow a2) a2) -> ain a0 (apow (asing a2)) -> (~ (a1 = apow (asing a1))) -> (~ asubq (apow a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> (~ (a3 = apow a2)) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> (~ ain a1 (asing a3)) -> ain a0 (asm a4 (asing a2)) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> (~ ain a3 (asing (apow a2))) -> ain a0 (aun a1 (asing (apow a2))) -> ain a1 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> asubq a2 (aun a2 (asing (apow a2))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> asubq (asm a4 (asing a3)) a3 -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal3 a2) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> aal2 (asm a4 a2) -> aal3 (aun a2 (asing (apow a2))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> (asm (asm a4 a2) (asing a2) = asing a3).
admit.
Qed.

Theorem conj_AbstrHF_TMKGyFFp6Hz3oiZTe9SnYAvr2bVrvrhmSis: (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (~ ain a3 a3) -> ain a1 (asing a1) -> (~ ain a0 (asing a1)) -> ain (asing a1) (apow a2) -> (~ (a0 = asing a2)) -> (~ ain (asing a2) a1) -> ain a2 (asm (apow a2) a2) -> (~ ain a1 (asm (apow a2) a2)) -> (~ (asing a1 = asing (asing a1))) -> (~ (a2 = apow a2)) -> (~ (asm a3 (asing a1) = a3)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain a0 (aun (asing a2) (apow (asing a2))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> ain (asing a1) (aun (asing (asing a1)) a4) -> (~ ain (asing a1) (asm a4 a2)) -> ain a0 (aun a2 (asing (apow a2))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> ain a0 (aun a4 (asing (apow a2))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal2 (asing (asing a1))) -> (~ aal3 a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal5 (apow a2)) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> aal2 (asm a4 a2) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal4 (aun a3 (asing (asing a2))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aal4 (aun a3 (asing (apow a2))) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (asm a3 (asing a2)) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) a4).
admit.
Qed.

Theorem conj_AbstrHF_TMb8fJjBDSehsLTLZrrRKHJMmtDEqrsfxtN: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (~ ain a1 a1) -> (~ ain a0 (asing a2)) -> (~ asubq a1 (asing a1)) -> (~ ain a1 (apow (asing a1))) -> (~ ain (asing a2) a1) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ ain (apow a2) a2) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (apow (asing a1) = a3)) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (asm a4 (asing a1)) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> ain a1 (aun (asing (asing a2)) a4) -> ain a2 (aun (asing (asing a2)) a4) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain a0 (aun a3 (asing (apow a2))) -> ain a1 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal2 a1) -> (~ aal2 (asing a2)) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal2 (asm (apow a2) a2) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 (asm (apow a2) a2) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex5 (aun a4 (asing (apow a2))) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))).
admit.
Qed.

Theorem conj_AbstrHF_TMHHtq7gv62a1vrm8fZxPAjUTcfVFfFsGqf: (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (~ ain a2 a0) -> asubq a1 a2 -> (~ (a0 = a3)) -> (~ (a1 = a3)) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> ain a0 (asm (apow a2) (asing a1)) -> ain (asing a1) (asm (apow a2) (asing a2)) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ ain a1 (asm a3 (asing a1))) -> (~ ain a1 (asm (apow a2) a2)) -> (~ ain (apow a2) a2) -> (~ asubq (asm a3 (asing a1)) a2) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (~ (a2 = asm a3 (asing a1))) -> (~ ain (asing a2) a3) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> (~ (a3 = apow a2)) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> (~ ain a2 (asing a3)) -> ain a1 (aun (asing a1) (asing a3)) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain a1 (asm a4 (apow (asing a2))) -> ain a3 (aun (asing (asing a2)) a4) -> (~ ain (asing a2) (asing (apow a2))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a4 (aun (asing (asing a1)) a4) -> asubq a4 (aun (asing (asing a2)) a4) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq a3 (asm a4 (asing a3)) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 (asm a3 (asing a1))) -> (~ aal3 (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal3 (asm (apow a2) (apow (asing a2))) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aal5 (aun (asing (asing a2)) a4) -> aex2 (asm (apow a2) a2) -> aex2 (aun a1 (asing (apow a2))) -> aex3 (aun a2 (asing (apow a2))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)).
admit.
Qed.

Theorem conj_AbstrHF_TMYipg3FT4DEfJJJivyYZJH9heC2DaFTHF3: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (~ ain a3 a3) -> (~ (a0 = a3)) -> ain a1 (asm (apow a2) (apow (asing a1))) -> (~ (a1 = asing a1)) -> asubq a1 (asm a3 (asing a1)) -> ain a0 (apow (asing a2)) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ (a1 = asing (asing a1))) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asing a2) (apow a2)) -> (~ asubq a3 (asing a2)) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> ain a0 (apow (apow (asing a1))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> ain a0 (apow (asm a3 (asing a1))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain a0 (asing (apow a2))) -> ain (apow a2) (asing (apow a2)) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain a2 (aun a4 (asing (apow a2))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> asubq a2 (asm a4 (asing a2)) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal2 a2 -> aal2 (apow (asing (asing a1))) -> aal3 a3 -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex2 (aun a1 (asing (apow a2))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex5 (aun (asing (apow (asing a1))) a4) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> (forall X24:set, ain a0 (apow X24)).
admit.
Qed.

Theorem conj_AbstrHF_TMNx9J6CcCjCiZEMyUGxCeQXrWsZHvMgCvN: (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> ain a2 (asm (apow a2) (apow (asing a2))) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ (asing (asing a1) = apow (asing a1))) -> (~ ain (apow a2) (apow a2)) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ (asing (asing a1) = a3)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain a1 (aun (asing a1) (asing a3)) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> ain a3 (asm a4 (asing a1)) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (aun a2 (asing (apow a2))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq a4 (aun (asing (asing a2)) a4) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 (asm (apow a2) a2) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMPc4imYdB4LXCDC13Z2HtpHDS7C3Re4AT7: (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> ain a1 a2 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (~ asubq a2 a1) -> asubq a3 a4 -> (~ (a0 = a2)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> (~ ain a1 (apow (asing a2))) -> ain a1 (asm (apow a2) (asing a2)) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ (a1 = asing (asing a1))) -> (~ ain (asm a3 (asing a1)) a2) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ ain (apow a2) (apow a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ asubq (apow a2) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain a2 (aun a1 (asing a3))) -> (~ ain (asing (asing a1)) a4) -> (~ ain (apow (asing a1)) a4) -> ain a1 (aun (asing (asing a2)) a4) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a3 (aun a4 (asing (apow a2))) -> ain a2 (aun a4 (asing (apow a2))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> asubq a1 (asm a2 (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal2 (asing (apow a2))) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal3 (aun a2 (asing (apow a2))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex3 (asm a4 (asing a2)) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> aex5 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (apow X24)).
admit.
Qed.

Theorem conj_AbstrHF_TMJWgqRsFRAa9eD3ENzHYQ7UagKpvzCACSM: (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ asubq a4 a3) -> (~ asubq a2 a0) -> (~ ain a1 (apow (asing a1))) -> (~ (a0 = apow (asing a1))) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> (~ (a1 = asm a3 (asing a1))) -> (~ ain (apow a2) (asing (asing a1))) -> (~ asubq a3 (asing a2)) -> (~ ain (asing a2) (asm a3 (asing a1))) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> ain a1 (asm a4 (asing a2)) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (asing a2) (aun (asing (asing a2)) a4) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq a3 (asm a4 (asing a3)) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> (~ aal2 (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> aal2 (asm (apow a2) a2) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aal5 (aun (apow a2) (asing (apow a2))) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex3 (aun a2 (asing (apow a2))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex5 (aun (asing (apow (asing a1))) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMNBN66Tzk2uf7TxPjBfiDvy5ziAEoXWMFj: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (~ ain a1 a0) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain a1 (asing a1) -> (~ (a0 = asing a1)) -> ain (asing a1) (asm (apow a2) a2) -> (~ ain a1 (apow (asing a2))) -> ain a2 (apow a2) -> (~ (a1 = asing a2)) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ (a1 = apow (asing a1))) -> (~ ain (asing a1) a3) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asing a2) (apow a2)) -> (~ ain (asing a2) a3) -> (~ ain a3 (asm a3 (asing a1))) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ (a3 = apow a2)) -> (~ (asm (apow a2) a2 = apow a2)) -> (~ ain a0 (asing (apow (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a0 (asm a4 (asing a1)) -> (~ ain (asing a2) a4) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain a3 (asing a3) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> ain (asing a2) (aun (asing (asing a2)) a4) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asing a1) (asing (apow a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq a4 (aun (asing (asing a1)) a4) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq a1 (asm a2 (asing a1)) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) a4 -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal3 (asm a4 a2)) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> aex2 (asm a4 a2) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMXaKVJdi6RBqLKa38GJNQXaqqMwbpGNPqw: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (forall X24:set, forall X25:set, asubq X25 (asing X24) -> ((X25 = a0) \/ (X25 = asing X24))) -> ain a0 (apow (asing a1)) -> asubq (asing a1) a2 -> (~ (a0 = asing a1)) -> ain (asing a1) (asm (apow a2) a2) -> (~ ain (asing a2) a1) -> ain (asing a1) (asm (apow a2) (asing a2)) -> ain a2 (asm (apow a2) (asing a1)) -> (~ ain a1 (asing (asing a1))) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ (a2 = apow (asing a1))) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq a3 (asm a4 (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (~ aal4 (asm (apow a2) (asing a1))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> aal5 (aun (apow a2) (asing (apow a2))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 a3 -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 a4 -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> aex2 (asm (apow a2) (apow (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMVwGAVXSf2bSDDtRGu1ir7yHWmT44xkCRp: (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> ain a0 a2 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (~ asubq a2 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> ain a2 (asing a2) -> (~ ain (asing a1) (asing a2)) -> (~ ain a2 (apow (asing a2))) -> (~ ain (asing a2) a2) -> asubq (asing (asing a1)) (apow (asing a1)) -> (~ ain a3 (asing a2)) -> (~ (apow (asing a1) = a3)) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain a3 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (~ asubq (asm a4 (asing a2)) a2) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> (asm (asm a4 a2) (asing a2) = asing a3) -> (asm (asm a4 a2) (asing a3) = asing a2) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal2 (asing a3)) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (~ aal4 (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> aal3 (asm (apow a2) (asing a1)) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (asm a3 (asing a1)) -> aex2 (apow (asing a2)) -> aex3 a3 -> aex3 (asm a4 (asing a1)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> ain a1 (asm (apow a2) (apow (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMXYvWKwZGwNY4zwGb8LRpojbj6CGatSm3X: (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> ain a0 a4 -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> asubq a1 (asm a3 (asing a1)) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ asubq a2 (asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (apow (asing a1)) a3) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a2 (asm a4 (asing a1)) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> aal2 (asm a4 a2) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm (apow a2) (asing a1)) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMdWUcoZwR6ReDxZqQNxhBTtWJhQPd13h5q: (forall X24:set, ain X24 a1 -> (X24 = a0)) -> ain a0 a3 -> ain a3 a4 -> (forall X24:set, asubq a0 X24) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> (~ ain a1 (apow (asing a1))) -> (~ (a0 = asing (asing a1))) -> (~ asubq a2 (asing a2)) -> ain a2 (asm (apow a2) (apow (asing a2))) -> (~ asubq (asing a1) (asing a2)) -> (~ ain (apow a2) a2) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a3 (apow a2)) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> (~ ain (asing (asing a1)) a3) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ (a3 = asm (apow a2) a2)) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> (~ (a3 = apow a2)) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain a0 (apow (asing (asing a1))) -> (~ ain a1 (asing (apow (asing a1)))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> (~ ain (asing a2) a4) -> ain a3 (aun (asing a1) (asing a3)) -> (~ ain (apow a2) a4) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> (~ ain a0 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> asubq a2 (asm a4 (asing a2)) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (~ aal2 (asing (apow a2))) -> (~ aal3 (asm a4 a2)) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> aal3 a3 -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex2 (apow (asing a1)) -> aex3 (aun a2 (asing (apow a2))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))).
admit.
Qed.

Theorem conj_AbstrHF_TMYeoCtScMmL7JS7oF1dAp2DJYSCeDiKENc: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, (~ ain X24 a0)) -> ain a2 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (~ ain a2 a2) -> asubq a1 a2 -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (~ ain a0 (asing a2)) -> ain a1 (apow a2) -> ain (asing a1) (apow a2) -> (~ (a1 = asing a1)) -> ain a2 (asm (apow a2) a2) -> (~ (asing a1 = asing (asing a1))) -> (~ (asing (asing a1) = apow (asing a1))) -> (~ ain a3 (apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ (a2 = apow a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> (~ ain (asing a2) a4) -> (~ ain (asm (apow a2) a2) a4) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain a3 (aun a4 (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (asm a2 (asing a1) = a1) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> aal2 a2 -> aal3 (asm a4 (asing a1)) -> aal5 (aun (asing (asing a2)) a4) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aex2 (aun (asing (asing a1)) (asing a3)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex4 (aun a3 (asing (apow a2))) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex5 (aun (apow a2) (asing (apow a2))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMLp3maGiFgq8wA92GLp32AjiwMikN2Ghrr: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (~ ain a0 a0) -> asubq a2 a3 -> (~ asubq a1 (asing a1)) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ ain a2 (apow (asing a1))) -> (~ asubq a2 (asing a2)) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ ain a1 (asm a3 (asing a1))) -> (~ (a1 = apow (asing a1))) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ ain (apow a2) (asing (asing a1))) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asing a2) a3) -> (~ (apow (asing a1) = a3)) -> (~ (asing a2 = apow a2)) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> ain a0 (aun a3 (asing (asing a2))) -> ain a2 (asm a4 a2) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain a0 (aun a2 (asing (apow a2))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> asubq a2 (asm a4 (asing a2)) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm a2 (asing a0)) (asing a1) -> (asm a2 (asing a1) = a1) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (asing (asing a2)) a4) -> (~ aal2 (asing a2)) -> (~ aal2 (asing (apow a2))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal3 (asm (apow a2) (asing a2)) -> aal3 a3 -> aex2 a2 -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)).
admit.
Qed.

Theorem conj_AbstrHF_TMb8FWjqYtcGSmdNFPfFMnirUuNUW7H3NbJ: (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> ain a1 a4 -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (~ (a0 = a2)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> (~ (a0 = asing (asing a1))) -> ain a2 (asm (apow a2) (apow (asing a1))) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (~ ain (asing a2) a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ (a0 = apow a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> (~ ain (asm (apow a2) a2) a4) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain a2 (asm a4 a2) -> ain a2 (asm a4 (apow (asing a2))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> (asm (asm a4 a2) (asing a3) = asing a2) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (~ aal3 (asm a3 (asing a1))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> aal2 (asm a3 (asing a1)) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex5 (aun (asing (asing a2)) a4) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> (~ ain a2 (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMJ2UZX2PETkbvGtW3jksV5KXiznxKD3J98: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> ain a0 a2 -> ain a0 a4 -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (~ ain a1 a0) -> ain a1 (aun (asing a1) (asing (asing a1))) -> ain a1 (apow a2) -> (~ asubq a1 (asing a1)) -> asubq (asing a1) a2 -> ain a1 (asm (apow a2) (apow (asing a2))) -> asubq a1 (apow (asing a1)) -> (~ (a1 = apow (asing a1))) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ (a2 = asm a3 (asing a1))) -> (~ (a2 = asm (apow a2) a2)) -> (~ (a2 = asing a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ (asm a3 (asing a1) = a3)) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> ain a1 (apow (apow (asing a1))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asing a2) (apow (asing a2))) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain a0 (aun a3 (asing (apow a2))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq a2 (asm a3 (asing a2)) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal3 (asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> aal4 (aun a3 (asing (apow a2))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aal5 (aun (apow a2) (asing (apow a2))) -> aex2 (apow (asing a1)) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex3 (asm (apow a2) (asing a2)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex5 (aun (asing (asing a2)) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1).
admit.
Qed.

Theorem conj_AbstrHF_TMSxMxXBdSM3se5vaF6b9gUMDVbACPAbHVA: (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (~ ain a1 a1) -> (~ ain a2 a2) -> (~ (a0 = a2)) -> ain a0 (asm (apow a2) (asing a2)) -> (~ asubq a1 (asing a2)) -> (~ ain a1 (apow (asing a2))) -> ain a2 (asm (apow a2) (asing a1)) -> (~ ain (asing (asing a1)) a2) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ (asing a1 = a3)) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ (asing a2 = asm a3 (asing a1))) -> (~ (apow (asing a1) = a3)) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> (~ ain (asing a2) a4) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> ain a0 (apow (asm a3 (asing a1))) -> (~ ain a0 (asing a3)) -> (~ ain a1 (asing a3)) -> ain a3 (aun a1 (asing a3)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (~ asubq (asm a4 (asing a2)) a2) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> asubq a2 (asm a3 (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> asubq a3 (asm a4 (asing a3)) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal5 (apow a2)) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> aal3 a3 -> aex3 (asm a4 (asing a2)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm a4 (asing a3)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMbf4okrQ4T3dCnHfXEAF8xE5gLJ6XR3M77: (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (~ (a0 = a3)) -> (~ ain a0 (asing a1)) -> ain a1 (asm (apow a2) (apow (asing a2))) -> asubq a1 (apow (asing a1)) -> (~ ain a0 (asm (apow a2) a2)) -> (~ (a1 = asm a3 (asing a1))) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ asubq (asing a2) a2) -> (~ (asing a1 = asm (apow a2) a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ (a2 = asm a3 (asing a1))) -> (~ ain a3 (asing a2)) -> (~ (a2 = apow a2)) -> asubq (asm a3 (asing a1)) (apow a2) -> (~ (asing a2 = asm (apow a2) a2)) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing (asing a1)) a4) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain a2 (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal3 (apow (asing a2))) -> (~ aal3 (aun a1 (asing a3))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal4 a3) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (~ aal5 a4) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> (~ ain (asing a1) (asing a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMQS15gUiZ8Sn9J4gpi9qVMcpKbiwomh1nz: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> ain a2 (asm (apow a2) a2) -> ain a2 (asm (apow a2) (asing a1)) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ ain (asing a2) a3) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> ain a0 (apow (asm a3 (asing a1))) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain a2 (asm a4 a2) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (asing a2) (asing (apow a2))) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq a4 (aun (asing (asing a2)) a4) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq a2 (asm a3 (asing a2)) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> aal2 (asm a3 (asing a1)) -> aal2 (asm (apow a2) a2) -> aal5 (aun (asing (asing (asing a1))) a4) -> aex2 (asm a3 (asing a2)) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex4 (aun a3 (asing (asing a2))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex5 (aun a4 (asing (apow a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMNeD5KEtQi2Q1SvhAXKhALdyHbwAZs4AE9: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ asubq a2 a1) -> (~ asubq a4 a3) -> (~ asubq a1 (asing a2)) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ ain (apow a2) (apow a2)) -> (~ (a2 = asm a3 (asing a1))) -> (~ ain (apow a2) (asing a2)) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> (~ ain (asing a2) (asm (apow a2) a2)) -> ain a0 (apow (asing (asing a1))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> ain a0 (aun a1 (asing a3)) -> (~ ain (asing a2) (aun a1 (asing a3))) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain a0 (aun a1 (asing (apow a2))) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain a0 (aun a3 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq (asm a2 (asing a1)) a1 -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (~ aal2 (asing (asing a1))) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (~ aal5 a4) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal4 a4 -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aal5 (aun (asing (asing a2)) a4) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex3 (asm (apow a2) (asing a0)) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMTWXrjnwBkY9a4onpGkTECNBBbaZRXxL1W: (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> ain a0 a1 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ asubq a2 a1) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain a1 (aun (asing a1) (asing (asing a1))) -> (~ ain a0 (asing a2)) -> ain a0 (asm a3 (asing a1)) -> (~ ain (asing a1) (asing a2)) -> (~ ain (asing a1) (apow (asing a2))) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ asubq a2 (asm a3 (asing a1))) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ (asing a1 = asm (apow a2) a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ ain (apow (asing a1)) a3) -> (~ (asing a2 = asm a3 (asing a1))) -> (~ (asing (asing a1) = a3)) -> asubq a3 (apow a2) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> (~ ain (asing a2) a4) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain a1 (asm a4 (asing a2)) -> (~ ain (asm (apow a2) a2) a4) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal2 a2 -> aal3 (asm (apow a2) (apow (asing a2))) -> aal4 a4 -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex5 (aun (apow a2) (asing (apow a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))).
admit.
Qed.

Theorem conj_AbstrHF_TMSFYNUVDq3GPd2ywyEEjh5cZTgtxXD4a6S: (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (~ asubq a3 a2) -> (~ (a1 = a2)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a2 (asing a1)) -> (~ ain (asing a1) (asing a1)) -> (~ asubq (asm (apow a2) a2) a2) -> (~ (a2 = asing (asing a1))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ (a2 = asing a2)) -> (~ (apow (asing a1) = a3)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asing a1) a4) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> (~ ain (apow (asing a1)) a4) -> ain a3 (asm a4 (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> asubq (asm a2 (asing a0)) (asing a1) -> (asm a2 (asing a0) = asing a1) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq a3 (asm a4 (asing a3)) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (~ aal2 (asing (asing a1))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> (asm (apow a2) (asing (asing a1)) = a3).
admit.
Qed.

Theorem conj_AbstrHF_TMF7tfcqFdwotyeHoHmEroa3Eenn1kj8qpG: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 (asm X24 (asing X25)) -> aal5 X24) -> (~ (a1 = a3)) -> ain a1 (apow a2) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ asubq (asing a1) (asing a2)) -> (~ ain a2 (asing (asing a1))) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ (a2 = asm a3 (asing a1))) -> (~ asubq a3 (asing a2)) -> (~ (asing a2 = a3)) -> (~ (asing a2 = apow a2)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> ain a3 (aun (asing a1) (asing a3)) -> ain a1 (asm a4 (apow (asing a2))) -> (~ ain (asing a1) (asing (apow a2))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (asm (apow a2) (asing (asing a1)) = a3) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal3 (asm a4 a2)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex3 (asm (apow a2) (asing a2)) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex4 (apow a2) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMHW18iLeC46ZvdQCxQVGvgFVvrM1ABbXCV: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (~ asubq a4 a3) -> (~ asubq a1 (asing a1)) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> ain a0 (asm (apow a2) (asing a1)) -> (~ ain a1 (apow (asing a2))) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> (~ ain a2 (asing a1)) -> ain a2 (asm a3 (asing a1)) -> ain a2 (asm (apow a2) a2) -> (~ ain (asing a1) (apow (asing a2))) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ asubq (asing a2) a2) -> (~ asubq (asm a3 (asing a1)) a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (a1 = asm (apow a2) a2)) -> (~ (a1 = apow a2)) -> (~ (asing a2 = asm a3 (asing a1))) -> (~ (asing a2 = a3)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ ain a1 (asing (apow (asing a1)))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain a0 (apow (asm a3 (asing a1))) -> ain a1 (apow (asm a3 (asing a1))) -> ain a2 (asm a4 (apow (asing a2))) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (apow a2) (asing (apow a2)) -> ain a1 (aun a2 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (asm a2 (asing a0) = asing a1) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal3 (asm (apow a2) (apow (asing a2))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal3 (asm a4 (asing a1)) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMcRDr9KgM6utLHKoxhu2ErFmCcSkDpTnTE: ain a1 a2 -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (~ (a0 = a2)) -> (~ (a1 = a2)) -> (~ (a1 = a3)) -> asubq a1 (asm a3 (asing a1)) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ ain (asing a1) a3) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ ain (asing a2) (asm a3 (asing a1))) -> (~ (asing a2 = asm a3 (asing a1))) -> (~ ain (asing a2) (asm (apow a2) a2)) -> (~ (asm a3 (asing a1) = apow a2)) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (asing a2) a4) -> ain a0 (aun (asing a2) (apow (asing a2))) -> (~ ain a2 (aun a1 (asing a3))) -> ain a3 (asm a4 (apow (asing a2))) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (~ aal4 a3) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMUawx1eoFAtu8p2eXt64dBWYYnojBxgacV: (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (~ ain a3 a3) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> (~ ain a1 X24) -> (X24 = a0)) -> ain (asing a1) (asm (apow a2) (asing a1)) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ asubq (asm (apow a2) a2) a2) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a2) (apow a2)) -> (~ ain a3 (apow a2)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> (~ ain a0 (asing (apow a2))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (asm a4 (asing a3)) a3 -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex3 (aun (asing a2) (apow (asing a2))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ (asing a1 = asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMPnhjHJFbMvpeP83yk8kwc8MJm3rWrGFiN: (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> ain a1 a2 -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> asubq a1 a2 -> ain a0 (asm (apow a2) (asing a2)) -> (~ ain a0 (asm (apow a2) a2)) -> (~ ain (asm a3 (asing a1)) a2) -> (~ ain (asing a2) (asing (asing a1))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ ain (apow a2) a3) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ ain (asing a2) a4) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> (~ ain a0 (asing a3)) -> (~ ain (asm a3 (asing a1)) a4) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain a0 (aun (asing (asing a2)) a4) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> asubq a2 (asm a4 (asing a2)) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (~ aal3 (apow (asing a2))) -> (~ aal5 (apow a2)) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aal5 (aun a4 (asing (apow a2))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (asm a4 a2) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex4 a4 -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ ain (apow a2) (apow a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMdr8MSVbB7QiiVb9DsS7it23SBSJPsomzX: (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 (asm X24 (asing X25)) -> aal5 X24) -> asubq a1 a2 -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> ain a0 (asm a3 (asing a1)) -> (~ asubq a1 (asing a1)) -> (~ ain (asing a2) a2) -> (~ ain (asm a3 (asing a1)) a2) -> (~ asubq (asing a2) a2) -> (~ asubq (asm a3 (asing a1)) a2) -> (~ ain (asing a1) a3) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ (a1 = apow a2)) -> (~ (asing (asing a1) = a3)) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (asm a4 (asing a2)) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aal4 (apow a2) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 a2 -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm a4 (asing a2)) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex3 (asm a4 (asing a0)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)).
admit.
Qed.

Theorem conj_AbstrHF_TMVBbFgnc3pNyrc9VMKgpvQVAFnnTTKTu5h: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (~ asubq a2 a0) -> ain a1 (asing a1) -> ain a1 (aun (asing a1) (asing (asing a1))) -> (~ asubq a1 (asing a2)) -> (~ asubq a2 (asing a2)) -> ain a2 (asm (apow a2) (apow (asing a2))) -> (~ (a1 = asing a2)) -> (~ ain (asing a2) a2) -> (~ asubq (asm (apow a2) a2) a2) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> (~ ain (apow (asing a1)) a3) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain (apow a2) (apow (asing a2))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> ain a1 (aun (asing a1) (asing a3)) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> ain a0 (aun (asing (asing a2)) a4) -> (~ ain (asing a1) (asing (apow a2))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> asubq (asm a2 (asing a0)) (asing a1) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> (asm (asm a4 a2) (asing a2) = asing a3) -> (asm a4 (asing a3) = a3) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asing (asing a1))) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> aal4 (aun a3 (asing (asing a2))) -> aal4 (aun a3 (asing (apow a2))) -> aex3 (asm (apow a2) (asing a1)) -> aex3 (asm a4 (asing a1)) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex5 (aun (apow a2) (asing (apow a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> aal5 (aun a4 (asing (asm (apow a2) a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMM26iuLGdqnxMzqbARvht2LGQtHXmajWBG: ain a2 a4 -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (~ (a2 = a3)) -> (~ asubq a1 a0) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain a1 (aun (asing a1) (asing (asing a1))) -> ain a0 (asm (apow a2) (asing a1)) -> ain (asing a1) (asm (apow a2) (asing a2)) -> ain a2 (asm (apow a2) (apow (asing a1))) -> ain a2 (asm (apow a2) a2) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ ain (apow a2) (asing (asing a1))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ (asm a3 (asing a1) = a3)) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (asing a2) a4) -> ain a2 (aun (asing a2) (apow (asing a2))) -> ain a0 (apow (asm a3 (asing a1))) -> (~ ain a0 (asm a4 a2)) -> ain a3 (asm a4 (asing a1)) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain a1 (aun a2 (asing (apow a2))) -> ain a3 (aun a4 (asing (apow a2))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq a3 (asm a4 (asing a3)) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> aal3 (asm (apow a2) (apow (asing a2))) -> aal4 (apow a2) -> aal4 a4 -> aex2 (asm a4 a2) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (aun a3 (asing (apow a2))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> ain a1 (apow (asm a3 (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMLsAqLAtHXvGat5Earp7Y3SJWvmHMbwabV: (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> ain a1 a3 -> ain a2 a3 -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (~ (a1 = a3)) -> ain a0 (asm (apow a2) (asing a1)) -> asubq a1 (asm a3 (asing a1)) -> (~ ain a1 (asm (apow a2) a2)) -> (~ (asing a1 = apow a2)) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ ain a3 (asing a2)) -> (~ asubq (apow a2) (asing a2)) -> (~ ain (apow (asing a1)) a3) -> (~ (a1 = apow a2)) -> (~ (asing (asing a1) = a3)) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> ain a0 (asm a4 (asing a1)) -> ain a1 (apow (asm a3 (asing a1))) -> ain a0 (asm a4 (asing a2)) -> (~ ain (apow a2) a4) -> ain a3 (asm a4 a2) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> (asm a3 (asing a2) = a2) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asing a1)) -> (~ aal2 (asing a2)) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex3 (asm a4 (asing a1)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex4 (apow a2) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))).
admit.
Qed.

Theorem conj_AbstrHF_TMGD9HAM3SUUAenU26nann7Y4PatSmDRePi: (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> ain a0 a3 -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (~ asubq a1 a0) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> ain a1 (asm (apow a2) (apow (asing a2))) -> asubq a1 (asm a3 (asing a1)) -> (~ asubq (asing a2) a2) -> (~ (asing (asing a1) = apow (asing a1))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ asubq a3 (asing a2)) -> (~ (asing a2 = asm a3 (asing a1))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> (~ ain (apow a2) (apow (asing a2))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> (~ ain (asing a2) (asing a3)) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain a0 (aun a3 (asing (apow a2))) -> ain a1 (aun a3 (asing (apow a2))) -> ain a2 (aun a3 (asing (apow a2))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> ain a0 (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing a2)) a4) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal2 (asing a2)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal4 (aun a3 (asing (asing a2))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 (asm (apow a2) a2) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMLaPCtEvhiY2YGBfzbVc2vaRn8RHq2zEC5: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (~ asubq a2 a1) -> (~ asubq a2 a0) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> ain a1 (asing a1) -> (~ (a0 = asm (apow a2) a2)) -> ain (asing a1) (apow (asing a1)) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) (asing a2)) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ (asing a1 = apow a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ (a2 = asm a3 (asing a1))) -> (~ asubq a3 (asing a2)) -> (~ ain (asm (apow a2) a2) a3) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ (a3 = apow a2)) -> (~ ain a1 (asing (apow (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> (~ ain (asing a1) a4) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain a0 (aun a3 (asing (asing a2))) -> (~ ain a2 (asing a3)) -> (~ ain (asing a2) (aun a1 (asing a3))) -> ain a3 (asm a4 (asing a2)) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a1 (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal3 (apow (asing a2))) -> (~ aal3 (aun (asing a1) (asing a3))) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (~ aal4 (asm (apow a2) (asing a1))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> aal2 (asm (apow a2) (apow (asing a1))) -> aal3 (asm (apow a2) (asing a1)) -> aal4 (apow a2) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm (apow a2) (asing a1)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex4 (aun a3 (asing (apow a2))) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> (~ ain a3 (apow (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMUFNmAM83Jpb9QVXfVxtWPYJSoAuQwXPX1: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (~ ain X24 X24)) -> ain a0 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a2 a0) -> (~ ain a2 a2) -> (~ asubq a4 a3) -> ain a1 (apow a2) -> (~ ain a1 (apow (asing a1))) -> (~ (a0 = asing (asing a1))) -> (~ (a0 = asm a3 (asing a1))) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ (a1 = asing (asing a1))) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ asubq (apow a2) (asing (asing a1))) -> (~ (asing (asing a1) = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ (a2 = asm (apow a2) a2)) -> (~ (a2 = apow a2)) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> (~ (asing a2 = a3)) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> (~ (asm a3 (asing a1) = apow a2)) -> (~ (a3 = apow a2)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (apow a2) (apow (asing a2))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> ain a0 (asm a4 (asing a1)) -> ain a0 (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> (~ ain (asing a2) (asing a3)) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> (asm (apow a2) (asing (asing a1)) = a3) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> (asm (asm a4 a2) (asing a3) = asing a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> (~ aal2 (asing a1)) -> (~ aal2 (asing (apow a2))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2).
admit.
Qed.

Theorem conj_AbstrHF_TMJD99c2Vrrf4LznK9U5wySa39NiTeATxDk: (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ ain (apow a2) a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ (a3 = apow a2)) -> (~ (asm (apow a2) a2 = apow a2)) -> ain a1 (apow (apow (asing a1))) -> ain (asing a2) (apow (asing a2)) -> (~ ain (asm (apow a2) a2) a4) -> ain a1 (aun a3 (asing (apow a2))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> asubq (asing a1) (asm a2 (asing a0)) -> asubq (asm a2 (asing a1)) a1 -> (asm a3 (asing a2) = a2) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (asm a3 (asing a1)) a4 -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> aex3 (asm (apow a2) (asing a2)) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4).
admit.
Qed.

Theorem conj_AbstrHF_TMaxWnSF4HReGBkn9v4sPLF2Mh8hoLFxXF6: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> ain a0 a1 -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> asubq a1 a2 -> (~ asubq a2 a1) -> (~ asubq a4 a3) -> (~ ain a1 (apow (asing a1))) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ asubq a2 (asing a2)) -> (~ asubq (asing a2) a2) -> (~ asubq (asm (apow a2) a2) a2) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ ain a3 (asing a2)) -> (~ asubq a3 (asing a2)) -> (~ (a3 = apow a2)) -> (~ ain a1 (asing (apow (asing a1)))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> ain a2 (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> ain a1 (apow (asm a3 (asing a1))) -> ain a0 (asm a4 (asing a2)) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> ain a3 (aun (asing (asing a2)) a4) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain a1 (aun a2 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ aal2 (asing a2)) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun a4 (asing (apow a2))) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))).
admit.
Qed.

Theorem conj_AbstrHF_TMWLCpj6tMJ93BP9KAm1GfNBxjybCiJPjdR: (forall X24:set, (~ ain X24 a0)) -> ain a0 a2 -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (~ ain a0 a0) -> ain a1 (aun (asing a1) (asing (asing a1))) -> ain a0 (asm a3 (asing a1)) -> (~ asubq a1 (asing a2)) -> (~ ain (asing a2) a1) -> ain a2 (asm (apow a2) (asing a1)) -> (~ ain (asing a1) (apow (asing a2))) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ (a1 = asing (asing a1))) -> (~ ain (asm a3 (asing a1)) a2) -> (~ (asing a1 = apow a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a1 (apow (apow (asing a1))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ ain (asing a2) a4) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain a1 (apow (asm a3 (asing a1))) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> (~ ain a1 (asing (apow a2))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq a3 (aun a3 (asing (apow a2))) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (asing a1) (asm a2 (asing a0)) -> (asm a2 (asing a0) = asing a1) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> asubq a2 (asm a3 (asing a2)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> asubq (asm a4 (asing a3)) a3 -> asubq (asm a3 (asing a1)) a4 -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 (asm a4 (asing a1)) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))).
admit.
Qed.

Theorem conj_AbstrHF_TMPVCAcixBkzEoBvGX7Y5fGzq3PQepBPZw6: (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (~ asubq a2 a1) -> (~ (a1 = a2)) -> ain a1 (asm (apow a2) (apow (asing a2))) -> asubq a1 (apow (asing a1)) -> (~ asubq a2 (asing a1)) -> (~ asubq a2 (asm a3 (asing a1))) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (~ asubq (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> (~ ain (asing (asing a1)) a3) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain a3 (asm a4 (asing a2)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> ain a0 (aun (asing (asing a2)) a4) -> ain a2 (aun (asing (asing a2)) a4) -> ain a0 (aun a2 (asing (apow a2))) -> ain a3 (aun a4 (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> asubq a3 (aun a3 (asing (asing a2))) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> asubq (asm a2 (asing a1)) a1 -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (apow a2)) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> aal2 (asm a4 a2) -> aal5 (aun a4 (asing (apow a2))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (apow (asing a1)) -> aex2 (asm a4 a2) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex3 (asm a4 (asing a2)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex3 (asm (apow a2) (asing a0)) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)).
admit.
Qed.

Theorem conj_AbstrHF_TMPGmVsbx8oE5Ng6bebLdTHgWq7mUhrbMNb: ain a0 a2 -> ain a1 a2 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 (asm X24 (asing X25)) -> aal5 X24) -> (~ (a1 = a3)) -> ain a0 (asm (apow a2) (asing a2)) -> (~ asubq a1 (asing a1)) -> ain a1 (asm (apow a2) (apow (asing a1))) -> ain (asing a1) (apow a2) -> ain (asing a1) (apow (asing a1)) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> (~ ain a2 (apow (asing a1))) -> ain a2 (asm (apow a2) (asing a1)) -> (~ (a1 = asing a2)) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a1) a3) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ ain (apow a2) (apow a2)) -> (~ asubq (apow a2) (asing a2)) -> (~ (asing (asing a1) = a3)) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain a2 (aun a3 (asing (asing a2))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> (~ ain a0 (asm a4 a2)) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> (~ asubq (asm a4 (asing a2)) a2) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (asm a3 (asing a2) = a2) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (~ aal2 (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal5 (aun (asing (asing a2)) a4) -> aex2 (aun a1 (asing a3)) -> aex3 (asm (apow a2) (asing a0)) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex5 (aun a4 (asing (apow a2))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMRweBhg7BpMDRVnVxBsYzRiK2YvYxfEdiw: (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (~ ain a2 a2) -> (~ (a1 = asing a1)) -> (~ ain (asing a2) a1) -> (~ asubq (asing a2) a2) -> (~ ain (apow a2) (asing (asing a1))) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ (a3 = asm (apow a2) a2)) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> (~ ain (asing a1) (asing (apow a2))) -> (~ ain (asing a2) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain a0 (aun a1 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (aun a2 (asing (apow a2))) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq (asing a1) (asm a2 (asing a0)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> (~ aal2 (asing a1)) -> (~ aal3 (aun a1 (asing a3))) -> (~ aal3 (asm a4 a2)) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal2 (asm (apow a2) a2) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2).
admit.
Qed.

Theorem conj_AbstrHF_TMT4ZfJzGMq4BVYSZDMAcoZRV7fT9aBWKYL: (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> ain a0 a2 -> ain a1 a2 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ ain (asing a2) a3) -> asubq (asm a3 (asing a1)) (apow a2) -> (~ (asing a2 = a3)) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> (~ ain a0 (asm a4 a2)) -> (~ ain (asing a1) (asm a4 a2)) -> ain a3 (asm a4 (apow (asing a2))) -> ain a1 (aun (asing (asing a2)) a4) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain a0 (aun a2 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> asubq a2 (asm a4 (asing a2)) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq a4 (aun (asing (asing a1)) a4) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq (asm a4 (asing a3)) a3 -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal2 (asing a1)) -> (~ aal2 (asing (apow a2))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> aal2 (asm a4 a2) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex2 (asm (apow a2) a2) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMPFXxHcme9FhDUqs3DBGUxh8pXPqqQ6xeo: (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (~ ain a1 a1) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> (~ asubq a1 (asing a1)) -> ain (asing a1) (apow a2) -> (~ ain (asing a1) a1) -> (~ ain a2 (apow (asing a2))) -> (~ (a1 = asm a3 (asing a1))) -> (~ (asing a1 = apow a2)) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ (asing (asing a1) = a3)) -> (~ (asing a2 = a3)) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain a0 (apow (asm a3 (asing a1))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> (~ ain a2 (aun a1 (asing a3))) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain a3 (asm a4 a2) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain a3 (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain a0 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq a2 (asm a3 (asing a2)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> asubq (asm a4 (asing a3)) a3 -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (~ aal5 a4) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal4 (aun a3 (asing (apow a2))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex3 (aun a2 (asing (apow a2))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex4 (apow a2) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ (asm (apow a2) a2 = apow a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMRz77dQqYQxqVEjTypfbvs4TxapKd9Poks: (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> ain a2 a3 -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> ain a2 (asing a2) -> (~ ain a1 (apow (asing a2))) -> ain (asing a1) (asm (apow a2) (asing a2)) -> ain a2 (asm a3 (asing a1)) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ asubq (asm a3 (asing a1)) a2) -> (~ ain (asing a2) (asing (asing a1))) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ ain (asing a2) (apow a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ ain (apow a2) a3) -> asubq (asm a3 (asing a1)) (apow a2) -> (~ (apow (asing a1) = a3)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a2 (asm a4 (asing a1)) -> ain a2 (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a2 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ aal4 a3) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> aal4 a4 -> aex3 (asm a4 (asing a1)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMbHUsRMhmTRdVYytT169WDy7CfhCtyoZ6t: (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (~ (a0 = a1)) -> ain a0 (apow a2) -> ain (asing a1) (asm (apow a2) a2) -> (~ ain (asing a2) a1) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ ain (asing a2) a2) -> (~ ain a2 (asing (asing a1))) -> (~ ain (asing a2) (asing (asing a1))) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (~ ain (apow a2) (asing (asing a1))) -> (~ asubq (apow a2) (apow (asing a1))) -> ain a0 (apow (apow (asing a1))) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> (~ ain a3 (apow (asing a2))) -> ain a3 (asm a4 (apow (asing a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> asubq a2 (asm a3 (asing a2)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> aal2 (asm a4 a2) -> aex2 a2 -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex4 (apow a2) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex5 (aun (asing (asing a1)) a4) -> aex5 (aun (asing (asing a2)) a4) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMaMrYqePqp7Ha1J8oSMjEdnqMx4x2djg4G: (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (~ ain a1 a1) -> (~ asubq a2 a1) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ (a1 = asm a3 (asing a1))) -> (~ ain (asing a1) (apow (asing a2))) -> (~ (a1 = asing (asing a1))) -> (~ ain (apow a2) a2) -> (~ ain (asing a2) (asing (asing a1))) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (~ asubq (apow a2) (asing (asing a1))) -> (~ (a2 = asm a3 (asing a1))) -> (~ ain (apow (asing a1)) a3) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> ain a1 (aun a3 (asing (asing a2))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> ain a0 (asm a4 (asing a2)) -> (~ ain (asm a3 (asing a1)) a4) -> ain a3 (aun (asing (asing a2)) a4) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (apow a2) (asing (apow a2)) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain a2 (aun a3 (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (asm a3 (asing a2) = a2) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal3 (asm a4 a2)) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aal5 (aun a4 (asing (apow a2))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex5 (aun (asing (asing a1)) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))).
admit.
Qed.

Theorem conj_AbstrHF_TMTsxSfRxGWjVRRTeEi7P1trebRkd6Nhyz3: (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a1 a0) -> (~ (a1 = a2)) -> (~ ain (asing a1) a2) -> (~ ain (apow a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ (asing (asing a1) = a3)) -> ain a0 (apow (asing (asing a1))) -> ain (asing a2) (asing (asing a2)) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (apow a2) (asing (apow a2)) -> ain a0 (aun a2 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (asm a2 (asing a0) = asing a1) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> (asm a4 (asing a3) = a3) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal2 (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal4 (asm a4 (asing a2))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (~ aal5 (apow a2)) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex3 (asm (apow a2) (asing a0)) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMTdjXMq5VMTs1FS6fUAWFMz2vGVY2w6ERY: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> ain a2 a4 -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (~ ain a3 a2) -> (~ asubq a3 a2) -> ain a1 (apow a2) -> (~ (a0 = asing (asing a1))) -> ain a2 (asm (apow a2) (asing a1)) -> ain a2 (asm (apow a2) (apow (asing a2))) -> (~ asubq (asing a1) (asing a2)) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ ain a2 (asing (asing a1))) -> (~ ain (asing a2) (asing (asing a1))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a2) a3) -> (~ (a0 = apow a2)) -> (~ (asing a2 = apow a2)) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> ain a0 (asm a4 (asing a2)) -> (~ ain (asm (apow a2) a2) a4) -> ain a1 (asm a4 (apow (asing a2))) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain a0 (aun a2 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> (asm (asm a4 a2) (asing a3) = asing a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal2 (asing a3)) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (~ aal5 (apow a2)) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> aal2 (apow (asing (asing a1))) -> aal3 (aun a2 (asing (apow a2))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex3 a3 -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow X24)).
admit.
Qed.

Theorem conj_AbstrHF_TMaKwSDTeb9hHYQdjbKW2SKuJrgKEYQAqtY: (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ asubq a4 a3) -> (~ (a1 = a3)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> ain a0 (apow (asing a1)) -> (~ ain a0 (asing a2)) -> ain a0 (asm (apow a2) (asing a1)) -> (~ (a0 = asm a3 (asing a1))) -> ain a2 (apow a2) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) a2) -> asubq (asing (asing a1)) (apow (asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ (a1 = apow a2)) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain a0 (aun a3 (asing (apow a2))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> asubq a2 (aun a2 (asing (apow a2))) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aex3 (asm (apow a2) (asing a1)) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMJnvL3kV7buED66VrLdYnNwi5vCDrZSxr1: (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> asubq a1 a2 -> (~ asubq a1 a0) -> asubq (asing a1) a2 -> (~ ain a0 (asm (apow a2) a2)) -> (~ ain (apow a2) (asing a2)) -> (~ asubq (apow a2) (asing a2)) -> asubq a3 (apow a2) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ (asm a3 (asing a1) = apow a2)) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain a0 (apow (asm a3 (asing a1))) -> (~ ain a2 (asing a3)) -> (~ ain (asing a2) (asing a3)) -> ain a1 (aun (asing a1) (asing a3)) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain a0 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> asubq a4 (aun (asing (asing a2)) a4) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> (asm a3 (asing a2) = a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> (asm (asm a4 a2) (asing a2) = asing a3) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (~ aal2 (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal5 a4) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> aal4 a4 -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMK1FBqxBC99GWZBgYzfzDSmCXJHrtjpZfJ: (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (~ (a2 = a3)) -> (~ ain (asing a1) (apow (asing a2))) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> (~ ain (apow a2) (apow (asing a2))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> (~ ain a1 (asing a3)) -> (~ ain (asing a2) (asing a3)) -> (~ ain (asing (asing a1)) a4) -> (~ ain (apow (asing a1)) a4) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> ain a1 (aun (asing (asing a2)) a4) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> (~ ain a0 (asing (apow a2))) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal3 (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aex2 (asm a4 a2) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMMm2h8q32tHa5cHYgjtkEaoortCRUcqntP: (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> ain a1 a4 -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (~ asubq a4 a3) -> (~ ain (asing a1) a0) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> (~ (a0 = asing a1)) -> (~ (asing a1 = a2)) -> (~ (asing a1 = asing (asing a1))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (~ ain (apow (asing a1)) a3) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> (~ ain (asing (asing a1)) a4) -> (~ ain (apow (asing a1)) a4) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain (asing a1) (aun (asing (asing a1)) a4) -> (~ ain (asing a1) (asm a4 a2)) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (asing a2) (asing (apow a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) a4 -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (~ aal4 (asm a4 (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aex2 (apow (asing a2)) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 (asm (apow a2) (asing a2)) -> aex5 (aun (asing (asing (asing a1))) a4) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMGvrpZ9UpCa59yBhvL95PPEmwxmW3359xS: (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (~ ain a0 a0) -> ain a0 (asm a3 (asing a1)) -> (~ asubq a1 (asing a2)) -> ain a2 (asm a3 (asing a1)) -> ain a2 (asm (apow a2) (apow (asing a1))) -> ain a0 (apow (asing a2)) -> (~ ain (asing (asing a1)) a2) -> (~ asubq (asing a2) a2) -> (~ (asing a1 = apow a2)) -> (~ ain (apow a2) (asing (asing a1))) -> asubq (asing (asing a1)) (apow (asing a1)) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ ain a3 (asing a2)) -> (~ (asing (asing a1) = a3)) -> (~ (asing a2 = a3)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ ain a0 (asing (apow (asing a1)))) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a1 (aun a3 (asing (asing a2))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain a2 (aun a3 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> (asm (apow a2) (asing (asing a1)) = a3) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (~ aal2 (asing a3)) -> (~ aal4 (asm (apow a2) (asing a2))) -> (~ aal4 (asm (apow a2) (asing a1))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal3 (asm a4 (asing a2)) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun (asing (asing a2)) a4) -> aal5 (aun a4 (asing (apow a2))) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex3 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex5 (aun (asing (apow (asing a1))) a4) -> aex5 (aun (asing (asing a2)) a4) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMcF7945S1fMDQMPdHR9M6gNYqtnS77j5kT: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (~ ain a3 a3) -> ain a0 (apow (asing a1)) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ (asing a1 = asing a2)) -> (~ (asing a1 = a3)) -> (~ ain (apow a2) (apow a2)) -> (~ asubq a3 (asing a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ ain (apow (asing a1)) a3) -> (~ (a1 = asm (apow a2) a2)) -> (~ (a1 = apow a2)) -> (~ ain a0 (asing (apow (asing a1)))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> ain a0 (aun a3 (asing (asing a2))) -> (~ ain a2 (asing a3)) -> ain a3 (aun (asing a1) (asing a3)) -> ain (asing a2) (aun (asing (asing a2)) a4) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> ain a0 (aun a1 (asing (apow a2))) -> ain a1 (aun a4 (asing (apow a2))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (~ aal2 a1) -> (~ aal2 (asing a3)) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal2 a2 -> aal2 (aun (asing a1) (asing (asing a1))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (aun (asing (asing a1)) (asing a3)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex5 (aun (apow a2) (asing (apow a2))) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ (a0 = apow (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMREmrjzaNvKzJHXaVzUavg9kUX8E61daGH: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (~ ain (asing a1) a1) -> (~ (a0 = asing (asing a1))) -> (~ asubq a2 (asing a1)) -> ain a2 (asm (apow a2) a2) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ (asing a1 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a3 (apow a2)) -> (~ ain (asm (apow a2) a2) a3) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ (apow (asing a1) = a3)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> (~ ain a0 (asing (apow (asing a1)))) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> (~ ain a3 (asing (asing a2))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain a0 (asm a4 a2)) -> ain a1 (asm a4 (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> ain a0 (aun a1 (asing (apow a2))) -> ain a1 (aun a2 (asing (apow a2))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> (~ asubq (asm a4 (asing a2)) a2) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (~ aal2 (asing (asing a1))) -> (~ aal2 (asing a2)) -> (~ aal4 (asm (apow a2) (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> aal4 a4 -> aal4 (aun a3 (asing (apow a2))) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex3 a3 -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm a4 (asing a3)) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex5 (aun (asing (asing a2)) a4) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 a1 -> (X24 = a0)).
admit.
Qed.

Theorem conj_AbstrHF_TMSTtuex99bGR56LWNYnpRZYPxFqcJDGzLk: ain a0 a1 -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> asubq a3 a4 -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ ain a0 (asm (apow a2) a2)) -> (~ ain a3 (asing a1)) -> (~ asubq (asing a1) (asing (asing a1))) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ (a1 = apow (asing a1))) -> (~ ain a2 (asing (asing a1))) -> (~ (asing a1 = apow a2)) -> (~ (a2 = asing (asing a1))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain a1 (aun a3 (asing (asing a2))) -> (~ ain (asm (apow a2) a2) a4) -> (~ ain (asing a1) (asm a4 a2)) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain a2 (aun a3 (asing (apow a2))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> (asm (asm a4 a2) (asing a2) = asing a3) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal3 (aun (asing a1) (asing a3))) -> (~ aal4 a3) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> aal2 (apow (asing (asing a1))) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aex2 (asm a3 (asing a1)) -> aex3 (asm (apow a2) (asing a0)) -> aex3 (asm a4 (asing a3)) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMX3V7t6SU8Yg8D5tD1XbUS2TGJFyBHXDZN: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> ain a2 a3 -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> asubq a3 a4 -> (~ (a0 = a3)) -> ain a1 (asing a1) -> ain a0 (apow a2) -> (~ ain a1 (apow (asing a2))) -> (~ ain (asing a2) a1) -> (~ (a0 = asm a3 (asing a1))) -> (~ asubq a2 (asing a1)) -> (~ ain (asing a2) a2) -> (~ (asing a1 = asing a2)) -> (~ ain (asing a2) (apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ (a2 = asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> ain a0 (apow (apow (asing a1))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> ain a2 (aun a3 (asing (asing a2))) -> (~ ain a0 (asing a3)) -> (~ ain (asing a2) (asing a3)) -> (~ ain (asing (asing a1)) a4) -> (~ ain (apow (asing a1)) a4) -> (~ ain a0 (asm a4 a2)) -> ain a1 (aun (asing (asing a2)) a4) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq a3 (aun a3 (asing (asing a2))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> (~ aal2 (asing a3)) -> (~ aal4 a3) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aal5 (aun (asing (asing a2)) a4) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex5 (aun (apow a2) (asing (apow a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain (apow a2) (asing (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMVVFTHeQYPFuzANkbPqbfWYcAq5kH39y35: (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (~ asubq a4 a3) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain a1 (asing a1) -> ain a0 (apow (asing a1)) -> (~ ain a1 (apow (asing a1))) -> ain (asing a1) (apow a2) -> ain a0 (asm (apow a2) (asing a1)) -> (~ (asing a1 = a2)) -> asubq a1 (asm a3 (asing a1)) -> (~ (a1 = asm a3 (asing a1))) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain (asing (asing a1)) a2) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (~ (a1 = asm (apow a2) a2)) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ (asm a3 (asing a1) = apow a2)) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> (~ ain a3 (asing (asing a2))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> ain a1 (aun (asing (asing a2)) a4) -> ain (asing a2) (aun (asing (asing a2)) a4) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> ain a1 (aun a4 (asing (apow a2))) -> ain a2 (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (~ aal2 (asing (apow a2))) -> (~ aal4 (asm (apow a2) (asing a1))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aal5 (aun (asing (apow (asing a1))) a4) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 (apow (asing a1)) -> aex2 (asm a3 (asing a1)) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ asubq (aun a4 (asing (apow a2))) a4).
admit.
Qed.

Theorem conj_AbstrHF_TMLXc2oC7zS5A74ZCDyZRqhNegQ2Hg42LAm: (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> ain a0 a1 -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ (a0 = a3)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> (~ ain a1 X24) -> (X24 = a0)) -> asubq a1 (apow (asing a1)) -> (~ asubq (asing a2) a2) -> (~ (apow (asing a1) = a3)) -> asubq a3 (apow a2) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> (~ ain a2 (asing a3)) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> (~ ain (asm a3 (asing a1)) a4) -> ain a3 (asm a4 (asing a1)) -> ain (asing a2) (aun (asing (asing a2)) a4) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain a0 (aun (asing (asing a2)) a4) -> (~ ain a0 (asing (apow a2))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> asubq a2 (asm a4 (asing a2)) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq a2 (asm a3 (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq a2 (apow (asm a3 (asing a1))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> aal3 (aun a2 (asing (apow a2))) -> aex3 (asm a4 (asing a2)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))).
admit.
Qed.

Theorem conj_AbstrHF_TMG8JGkYxGGzPjZK67xjkBnYQgWq6BpY1Js: (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> ain a1 a3 -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> (forall X24:set, forall X25:set, asubq X25 (asing X24) -> ((X25 = a0) \/ (X25 = asing X24))) -> ain a1 (asing a1) -> (~ ain (asing a2) a1) -> ain a2 (apow a2) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ ain (asing a1) (asing a1)) -> (~ (a1 = asing (asing a1))) -> (~ ain (asing a2) a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ (a2 = asm a3 (asing a1))) -> (~ (asm a3 (asing a1) = a3)) -> (~ ain a0 (asing (apow (asing a1)))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> ain a0 (aun (asing a2) (apow (asing a2))) -> (~ ain a0 (asm a4 a2)) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain a0 (aun a2 (asing (apow a2))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 a3 -> aex3 (asm (apow a2) (asing a1)) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))).
admit.
Qed.

Theorem conj_AbstrHF_TMEp1GwEYeyjBfANhJenMnPvWDuDs4Zhdp3: (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> ain a0 a1 -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (~ ain a3 a2) -> (~ (a0 = a1)) -> ain a0 (asm (apow a2) (asing a2)) -> (~ ain (asing a1) (asing a2)) -> (~ ain a1 (asm (apow a2) a2)) -> (~ (asing a1 = asing (asing a1))) -> (~ asubq (apow a2) (asing (asing a1))) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ (asing (asing a1) = a3)) -> (~ ain (asing a2) (asm (apow a2) a2)) -> (~ (a3 = asm (apow a2) a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ (asm (apow a2) a2 = apow a2)) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> ain a3 (asm a4 (asing a2)) -> ain a2 (asm a4 a2) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (asm a3 (asing a2) = a2) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun (asing (asing a2)) a4) -> aex3 (aun a2 (asing (apow a2))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex5 (aun (asing (asing a2)) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> (~ aal3 (aun (asing a1) (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMY9qdCzDoiMqW7p6iZL43djwWkQAt4ZSXa: (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> ain a0 a4 -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (~ asubq a2 a0) -> ain a0 (apow a2) -> (~ (a0 = asing a2)) -> (~ (asing a1 = a2)) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ (asing a1 = a3)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a2 (asm a4 (asing a1)) -> (~ ain a1 (asing a3)) -> (~ ain (asing a2) (asing a3)) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> asubq (asm a4 (asing a3)) a3 -> asubq (asm a3 (asing a1)) a4 -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal4 a3) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex2 (apow (asing a2)) -> aex2 (aun a1 (asing (apow a2))) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex5 (aun (apow a2) (asing (apow a2))) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2).
admit.
Qed.

Theorem conj_AbstrHF_TMQDjoaAYEXWrACgT8d5aRTMAWYLRyjCCnt: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> ain a1 a3 -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (~ asubq a1 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> (~ ain a1 X24) -> (X24 = a0)) -> ain a0 (apow a2) -> (~ (a0 = asing a2)) -> (~ ain a1 (asm (apow a2) a2)) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (~ ain (asing (asing a1)) a3) -> (~ (a0 = apow a2)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain a2 (asm a4 a2) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> (~ ain a3 (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> (asm (apow a2) (asing (asing a1)) = a3) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal3 a3 -> aal3 (asm (apow a2) (apow (asing a2))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal4 a4 -> aex2 (asm a3 (asing a1)) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex3 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex5 (aun a4 (asing (apow a2))) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMPvAoWGwuaBCccUQASyRzGah44dEhRVgAA: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> asubq a3 a4 -> ain a1 (apow a2) -> ain a0 (asm (apow a2) (asing a1)) -> (~ ain (asing a1) a1) -> asubq a1 (apow (asing a1)) -> (~ ain (asing a1) (asing a2)) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ (a1 = apow (asing a1))) -> (~ ain (apow a2) a2) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ ain (apow a2) (asing (asing a1))) -> (~ (asing (asing a1) = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ asubq a3 (asing a2)) -> (~ ain (asing a2) (asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a0 (aun (asing a2) (apow (asing a2))) -> (~ ain (apow (asing a1)) a4) -> ain a1 (aun (asing (asing a2)) a4) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (asm a2 (asing a0) = asing a1) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> aal2 (asm (apow a2) a2) -> aal3 (asm (apow a2) (apow (asing a2))) -> aex2 (aun a1 (asing (apow a2))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMTgSPceuSag58ANxBm6xRPmBKfaXMwhxiD: (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (~ ain a0 a0) -> (~ asubq a2 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> ain a0 (asm (apow a2) (asing a1)) -> (~ (a0 = asm (apow a2) a2)) -> (~ (a1 = asm a3 (asing a1))) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ ain (asing (asing a1)) a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> asubq a3 (apow a2) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ (a3 = apow a2)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain a3 (asing (asing a2))) -> (~ ain (asing a1) a4) -> ain a0 (aun (asing a2) (apow (asing a2))) -> (~ ain a1 (asing a3)) -> (~ ain a1 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> asubq (asm a2 (asing a0)) (asing a1) -> (asm a2 (asing a1) = a1) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal3 a3 -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex4 (aun a3 (asing (apow a2))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain a0 (apow X24)).
admit.
Qed.

Theorem conj_AbstrHF_TMWp6A99NZqFSaFtpx3vk27ivaLf2b8yijH: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> ain a2 (asm a3 (asing a1)) -> asubq a1 (asm a3 (asing a1)) -> (~ ain a2 (apow (asing a2))) -> ain a2 (asm (apow a2) (apow (asing a2))) -> (~ ain a1 (asing (asing a1))) -> (~ ain a2 (asing (asing a1))) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ (asing a1 = a3)) -> (~ (asing a1 = asing (asing a1))) -> (~ (a2 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (~ ain a3 (apow a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> ain a0 (aun (asing a2) (apow (asing a2))) -> ain a1 (asm a4 (asing a2)) -> ain a3 (asm a4 a2) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain a3 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal2 (asing (asing a1))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> aal2 a2 -> aal2 (asm (apow a2) (apow (asing a1))) -> aal5 (aun (apow a2) (asing (apow a2))) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))).
admit.
Qed.

Theorem conj_AbstrHF_TMNZY66tgprvH2ZRVi5rRtoUNh1KR6wZ2gj: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (~ asubq a2 a1) -> (~ asubq a2 a0) -> asubq (asing a1) a2 -> ain a0 (asm (apow a2) (asing a1)) -> (~ ain (asing a1) a1) -> (~ ain (asing a2) a1) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ (a2 = asing (asing a1))) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ (apow (asing a1) = a3)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a2 (asm a4 (asing a1)) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain a3 (asm a4 (apow (asing a2))) -> ain a1 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> (~ asubq (asm a4 (asing a2)) a2) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (asm a3 (asing a2)) a2 -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq a3 (asm a4 (asing a3)) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal4 (asm (apow a2) (asing a2))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> aal3 (asm a4 (asing a1)) -> aal4 (aun a3 (asing (asing a2))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMPjiBbUTEdLNd5QPQ7RRFYg4B9s5dxAYx1: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ ain a3 a3) -> (~ (a2 = a3)) -> (~ ain (asing a1) a0) -> ain (asing a1) (asing (asing a1)) -> ain a0 (apow (asing a1)) -> (~ ain a0 (asing a1)) -> (~ ain (asing a2) a1) -> asubq a1 (asm a3 (asing a1)) -> ain a2 (asm (apow a2) a2) -> (~ ain a2 (apow (asing a2))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (apow a2) (asing a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ (asing a2 = apow a2)) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (asing a1) (asing (asing a2))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> (~ ain a2 (asing a3)) -> ain a3 (aun a1 (asing a3)) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> ain a2 (aun (asing (asing a2)) a4) -> (~ ain a1 (asing (apow a2))) -> ain a1 (aun a2 (asing (apow a2))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a2 (asm a4 (asing a2)) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> asubq (asing a1) (asm a2 (asing a0)) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal2 (asing a2)) -> (~ aal3 (aun (asing a1) (asing a3))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> aal2 (asm a4 a2) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal3 (aun a2 (asing (apow a2))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal5 (aun a4 (asing (apow a2))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex3 (asm a4 (asing a0)) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMd5FgbREUBe3vg3uqG9LvVgMzLGzH8aLMc: (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> ain a2 a3 -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (~ ain a1 a0) -> (~ ain a3 a3) -> (~ (a0 = a1)) -> (~ asubq a1 (asing a1)) -> ain a1 (asm (apow a2) (apow (asing a1))) -> (~ (a1 = asing a1)) -> ain (asing a1) (asm (apow a2) a2) -> (~ asubq a1 (asing a2)) -> (~ (a0 = asm a3 (asing a1))) -> ain a0 (apow (asing a2)) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ (a1 = asm a3 (asing a1))) -> (~ ain (asing a2) (asing (asing a1))) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ (a2 = asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (~ (asing a2 = a3)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> ain a0 (asm a4 (asing a2)) -> (~ ain (asing (asing a1)) a4) -> ain a1 (asm a4 (apow (asing a2))) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq a2 (asm a3 (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> (asm a4 (asing a3) = a3) -> asubq a2 (apow (asm a3 (asing a1))) -> asubq (asm a3 (asing a1)) a4 -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> (~ aal2 (asing (asing a1))) -> (~ aal3 (aun (asing a1) (asing a3))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal2 (apow (asing (asing a1))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex2 (asm a3 (asing a2)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex5 (aun (apow a2) (asing (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)).
admit.
Qed.

Theorem conj_AbstrHF_TMdn2U1o7QXrLJFg6A89b5mr4AsV62MmVR7: (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> ain a0 a2 -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (~ ain a3 a2) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> ain (asing a1) (asing (asing a1)) -> (~ ain (asing a1) a1) -> (~ (a0 = asing a2)) -> (~ ain (asing a2) a1) -> (~ ain a2 (apow (asing a1))) -> (~ ain (asing a1) (apow (asing a2))) -> (~ asubq (asm a3 (asing a1)) a2) -> (~ (asing a1 = asing a2)) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (~ (a2 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (a2 = apow a2)) -> (~ (a2 = asing a2)) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> ain a1 (apow (apow (asing a1))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asing a2) a4) -> ain (asing a2) (aun a3 (asing (asing a2))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> (~ ain (asm (apow a2) a2) a4) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq a2 (apow (asm a3 (asing a1))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (~ aal4 (asm (apow a2) (asing a2))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> aal3 (asm (apow a2) (asing a2)) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> aex5 (aun a4 (asing (apow a2))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)).
admit.
Qed.

Theorem conj_AbstrHF_TMHwTGCXes7r15G4NUhy9Ym59xMjZXFEvsf: (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (~ ain a0 a0) -> (~ ain a2 a1) -> (~ (a0 = a2)) -> (forall X24:set, forall X25:set, asubq X25 (asing X24) -> ((X25 = a0) \/ (X25 = asing X24))) -> (~ asubq a1 (asing a2)) -> (~ (a0 = asm a3 (asing a1))) -> (~ ain a3 (asing a1)) -> (~ asubq (asing a2) a2) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asing a2) (apow a2)) -> (~ (a2 = asing a2)) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a2 (aun a3 (asing (asing a2))) -> ain a0 (apow (asm a3 (asing a1))) -> ain a3 (aun (asing a1) (asing a3)) -> (~ ain (asm a3 (asing a1)) a4) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq a3 (aun a3 (asing (apow a2))) -> asubq a4 (aun (asing (asing a1)) a4) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> aal3 (asm (apow a2) (apow (asing a2))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 (apow (asing a1)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex4 (aun a3 (asing (apow a2))) -> aex5 (aun (asing (apow (asing a1))) a4) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMLxHMznEqc1NP5L7pSUjmQHEfv3BTsUcnE: (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> ain a1 a4 -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (~ (a0 = a1)) -> ain a0 (apow (asing a1)) -> asubq (asing a1) a2 -> ain a1 (asm (apow a2) (asing a2)) -> (~ (a0 = asing a2)) -> asubq a1 (apow (asing a1)) -> ain a2 (asm a3 (asing a1)) -> ain a2 (apow a2) -> (~ (a1 = asm a3 (asing a1))) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (~ ain (asing a1) a3) -> (~ (a2 = apow (asing a1))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a2) (apow a2)) -> (~ ain (apow a2) (apow a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> (~ (asing a2 = apow a2)) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> (~ ain (apow (asing a1)) a4) -> (~ ain (asm (apow a2) a2) a4) -> ain a1 (asm a4 (apow (asing a2))) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain (apow a2) (asing (apow a2)) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq a3 (aun a3 (asing (apow a2))) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asm a3 (asing a1)) a4 -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (~ aal4 a3) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> aal3 (asm a4 (asing a1)) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (apow (asing a2)) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, ain a0 X24 -> asubq a1 X24).
admit.
Qed.

Theorem conj_AbstrHF_TMEybGh3AXCS89Exii5sCganGHNCVeze9oz: (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (~ ain a2 a2) -> (~ (a2 = a3)) -> ain a1 (asing a1) -> ain a1 (asm (apow a2) (apow (asing a1))) -> (~ (a1 = asing a1)) -> ain a0 (asm (apow a2) (asing a1)) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ (asing a1 = a2)) -> ain a2 (asm a3 (asing a1)) -> (~ ain a3 (asing a1)) -> (~ ain (asing a2) (asing (asing a1))) -> (~ (asing a1 = a3)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ ain (apow a2) (asing a2)) -> (~ asubq a3 (asing a2)) -> (~ (asing a2 = asm a3 (asing a1))) -> (~ (asing a2 = asm (apow a2) a2)) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> (~ (asm a3 (asing a1) = apow a2)) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> (~ ain a0 (asing (apow (asing a1)))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> ain a0 (asm a4 (asing a2)) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> ain (asing a2) (aun (asing (asing a2)) a4) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain a0 (aun a1 (asing (apow a2))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asing a1) (asm a2 (asing a0)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> aal3 (asm a4 (asing a1)) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aal5 (aun a4 (asing (apow a2))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> ain a0 (apow (asm a3 (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMKS6vwXMmca9E18S85xaNCZCfcZi7BTwsG: (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (~ asubq a2 a0) -> ain a0 (asm a3 (asing a1)) -> (~ ain (asing a1) a2) -> (~ ain a0 (asing (asing a1))) -> ain (asing a1) (apow (asing a1)) -> (~ ain (asing a1) (asing a2)) -> ain a2 (apow a2) -> (~ asubq (asing a1) (asing a2)) -> (~ ain (asing a2) a2) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ (a2 = asm a3 (asing a1))) -> (~ (a2 = asing a2)) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> ain a0 (apow (asm a3 (asing a1))) -> ain a3 (aun a1 (asing a3)) -> ain a3 (asm a4 (asing a2)) -> ain a3 (asm a4 (asing a1)) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> (~ ain (asing a1) (asing (apow a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> asubq a2 (apow (asm a3 (asing a1))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 (asm a4 a2)) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> aal4 (aun a3 (asing (apow a2))) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 (asm a4 a2) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex5 (aun (apow a2) (asing (apow a2))) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))).
admit.
Qed.

Theorem conj_AbstrHF_TMEy67PcKjexGYKjjuWgh6eWftsU9ntFL98: ain a0 a3 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> ain a2 (asm a3 (asing a1)) -> asubq a1 (asm a3 (asing a1)) -> (~ (asing a1 = asing a2)) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain a0 (aun a3 (asing (asing a2))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> (~ ain a2 (aun a1 (asing a3))) -> (~ ain (apow (asing a1)) a4) -> ain a3 (asm a4 (asing a1)) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain a0 (aun a2 (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (~ aal2 a1) -> (~ aal3 (asm a3 (asing a1))) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal3 a3 -> aal4 (apow a2) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex3 (asm a4 (asing a1)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex4 a4 -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (~ ain (asing (asing a1)) a2).
admit.
Qed.

Theorem conj_AbstrHF_TMYVGoE4v3JrBrbAGyFQ148LYXTvYQMFY8G: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> ain a2 a4 -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (~ ain a1 a0) -> ain (asing a1) (asm (apow a2) a2) -> (~ asubq a2 (asing a1)) -> (~ ain a2 (apow (asing a1))) -> (~ ain (asing (asing a1)) a2) -> (~ asubq (asing a2) a2) -> (~ ain a2 (asing (asing a1))) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ (a2 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (a3 = asm (apow a2) a2)) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> (~ (asm a3 (asing a1) = apow a2)) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain a0 (apow (apow (asing a1))) -> (~ ain a0 (asing (apow (asing a1)))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> (~ ain a2 (aun a1 (asing a3))) -> ain a2 (asm a4 (apow (asing a2))) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain a0 (aun (asing (asing a2)) a4) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal3 (asm (apow a2) (asing a2)) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aex2 (apow (asing a1)) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (aun a1 (asing (apow a2))) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)).
admit.
Qed.

Theorem conj_AbstrHF_TMUMjAnrrBR6jsfNZttBbrtF78wtAGWVRNR: (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (~ ain a0 a0) -> (~ asubq a2 a1) -> asubq a3 a4 -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> ain a0 (apow a2) -> (~ ain a1 (apow (asing a1))) -> (~ (a0 = apow (asing a1))) -> (~ (a0 = asm a3 (asing a1))) -> (~ ain a2 (apow (asing a1))) -> (~ ain a1 (asm (apow a2) a2)) -> (~ ain (asing a2) a2) -> (~ ain (asing a2) (asing (asing a1))) -> (~ ain a3 (apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ (asing a2 = asm a3 (asing a1))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> (~ ain a0 (asm a4 a2)) -> ain a3 (asm a4 a2) -> ain a1 (asm a4 (apow (asing a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain a0 (aun a4 (asing (apow a2))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing a1)) a4) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> asubq (asm a4 (asing a3)) a3 -> asubq (aun (asing a1) (apow (asing a2))) (aun (asing (asing a2)) a4) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal4 (asm (apow a2) (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex2 (asm (apow a2) a2) -> aex3 (asm a4 (asing a2)) -> aex4 (apow a2) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex5 (aun (asing (asing a1)) a4) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> asubq a1 (asm a3 (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMRsBed3Qkwt9fNEMqKRqvRQw8UVj45jtDN: (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> ain a0 a3 -> ain a0 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (~ (a1 = a2)) -> (~ (a2 = a3)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> ain (asing a1) (apow a2) -> ain (asing a1) (asm (apow a2) a2) -> (~ ain (asing a1) a1) -> ain (asing a1) (apow (asing a1)) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ (asing a1 = a3)) -> (~ (asing a1 = apow a2)) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (~ asubq (apow a2) (asing a2)) -> (~ (asing a2 = a3)) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain a0 (asing a3)) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a3 (aun a4 (asing (apow a2))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> (asm (asm a4 a2) (asing a3) = asing a2) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal3 (asm a4 a2)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (~ aal5 (apow a2)) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> aal2 (asm (apow a2) a2) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex3 (aun a2 (asing (apow a2))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aex3 (asm a4 (asing a0)) -> aex3 (asm a4 (asing a3)) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex5 (aun (asing (asing a1)) a4) -> aex5 (aun (asing (asing a2)) a4) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMRcHRx1iKq9TwzKMixuJfCUFaTSYWQY12w: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> ain a0 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (~ (a1 = a2)) -> (~ (a0 = asm (apow a2) a2)) -> asubq a1 (apow (asing a1)) -> ain a2 (asm (apow a2) a2) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (a2 = asm a3 (asing a1))) -> (~ (a2 = asing a2)) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ (a3 = apow a2)) -> (~ ain a1 (asing (apow (asing a1)))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a3 (asing (asing a2))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> ain a0 (aun a1 (asing a3)) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a0 (aun a4 (asing (apow a2))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (asm a3 (asing a2) = a2) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal3 (apow (asing a1))) -> (~ aal3 (aun a1 (asing a3))) -> (~ aal4 a3) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> (~ asubq (aun a3 (asing (apow a2))) a3).
admit.
Qed.

Theorem conj_AbstrHF_TMMcTMNWUGLMkZQV46Kt7VWoZCcWzfGoXZM: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (~ ain a1 a0) -> (~ ain a2 a2) -> (~ asubq a3 a2) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> (~ ain (asing a1) a0) -> (~ ain (asing a1) a1) -> (~ ain a1 (asing a2)) -> (~ ain (asing a2) a1) -> (~ ain a2 (asing a1)) -> ain a2 (asm (apow a2) a2) -> (~ ain (asm a3 (asing a1)) a2) -> (~ ain (asing a1) a3) -> (~ (asing (asing a1) = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (a1 = apow a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ (asm (apow a2) a2 = apow a2)) -> ain a1 (apow (apow (asing a1))) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asing a1) a4) -> ain a2 (asm a4 (asing a1)) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain a1 (apow (asm a3 (asing a1))) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> (~ ain a3 (asing (apow a2))) -> ain a1 (aun a2 (asing (apow a2))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal4 a4 -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 (aun a1 (asing (apow a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)).
admit.
Qed.

Theorem conj_AbstrHF_TMYBNyykM6ezXCqwAHsHYejRitifCLdrPn3: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (~ asubq a2 a0) -> ain (asing a1) (asing (asing a1)) -> (~ ain (asing a1) a1) -> asubq a1 (apow (asing a1)) -> ain a2 (asm (apow a2) (asing a1)) -> (~ asubq (asm (apow a2) a2) a2) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> (~ ain a0 (asing (apow (asing a1)))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain a1 (asm a4 (asing a2)) -> (~ ain a0 (asm a4 a2)) -> ain a2 (asm a4 a2) -> ain a2 (asm a4 (apow (asing a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> ain (apow a2) (asing (apow a2)) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (asing a1) (asm a2 (asing a0)) -> asubq (asm a3 (asing a2)) a2 -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (~ aal4 a3) -> aal2 (asm (apow a2) a2) -> aex3 (aun a2 (asing (apow a2))) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex5 (aun (asing (asing a2)) a4) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))).
admit.
Qed.

Theorem conj_AbstrHF_TMHmayAE1o4DMJZgsQfnDSHSpre5zwc4jHf: ain a0 a2 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a1 a1) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> ain a0 (asm a3 (asing a1)) -> (~ ain (asing a2) a1) -> (~ (a0 = asm (apow a2) a2)) -> ain a2 (asm (apow a2) a2) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ ain (asing a2) a2) -> (~ ain (asm a3 (asing a1)) a2) -> (~ (asing a1 = apow a2)) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ (asing a2 = asm (apow a2) a2)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> ain a1 (aun (asing a1) (apow (asing a2))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain a0 (aun a3 (asing (asing a2))) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (apow a2) (asing (apow a2)) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a0 (aun a4 (asing (apow a2))) -> ain a3 (aun a4 (asing (apow a2))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (asm a4 (asing a3)) a3 -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal3 a2) -> (~ aal3 (apow (asing a1))) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal3 (asm a4 a2)) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal2 (asm a3 (asing a1)) -> aal3 (aun a2 (asing (apow a2))) -> aal5 (aun (asing (asing a1)) a4) -> aal5 (aun (apow a2) (asing (apow a2))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (asm a3 (asing a2)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex3 (asm (apow a2) (asing a0)) -> aex3 (asm a4 (asing a3)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))).
admit.
Qed.

Theorem conj_AbstrHF_TMFiio4fdDAnjxK64UZWaRNkGH4Vpb3qXQo: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> ain a1 a2 -> ain a1 a4 -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (~ ain a2 a1) -> ain a1 (aun (asing a1) (asing (asing a1))) -> ain a2 (asing a2) -> (~ asubq a1 (asing a1)) -> asubq (asing a1) a2 -> (~ ain a1 (asing a2)) -> ain a2 (asm (apow a2) (apow (asing a1))) -> (~ ain (asing a1) (asing a1)) -> (~ asubq (asing a1) (asing a2)) -> (~ ain a1 (asing (asing a1))) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (~ (a2 = apow (asing a1))) -> (~ (a2 = asm a3 (asing a1))) -> (~ ain (apow (asing a1)) a3) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> (~ (a3 = apow a2)) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (apow (asm a3 (asing a1))) -> (~ ain (asing a2) (asing a3)) -> ain a1 (asm a4 (asing a2)) -> (~ ain a0 (asm a4 a2)) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> ain (asing a2) (aun (asing (asing a2)) a4) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain a1 (aun a3 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal3 (asm a4 a2)) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal2 (asm a4 a2) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (aun a1 (asing a3)) -> aex2 (asm a4 a2) -> aex2 (aun a1 (asing (apow a2))) -> aex3 (asm (apow a2) (asing a1)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2).
admit.
Qed.

Theorem conj_AbstrHF_TMMuU6kuwQPcydizv46uFXJm94AmrhcHZhG: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (~ ain a1 a0) -> (~ ain a2 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> ain a1 (asm (apow a2) (asing a2)) -> (~ (a0 = asing a2)) -> asubq a1 (asm a3 (asing a1)) -> (~ asubq a2 (asing a2)) -> (~ (a1 = asing a2)) -> (~ ain (asing a1) (apow (asing a2))) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ (asing a1 = asing a2)) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (~ (a1 = apow a2)) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ ain (apow (asing a1)) a4) -> ain a2 (asm a4 a2) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> (asm (asm a4 a2) (asing a2) = asing a3) -> (asm (asm a4 a2) (asing a3) = asing a2) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)).
admit.
Qed.

Theorem conj_AbstrHF_TMF4Q9r9X7bVNmn5CWE9KzZKRDVFY2r2PrN: (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ ain a3 a2) -> (~ asubq a2 a1) -> (~ (a0 = asing a2)) -> (~ (a0 = asm (apow a2) a2)) -> (~ ain (asing a1) (apow (asing a2))) -> (~ asubq (asm a3 (asing a1)) a2) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ (asing a1 = apow a2)) -> (~ ain (asm (apow a2) a2) a3) -> (~ (a1 = apow a2)) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> ain a0 (aun (asing a2) (apow (asing a2))) -> ain a3 (aun a1 (asing a3)) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> (~ ain a1 (asing (apow a2))) -> (~ ain a3 (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a2 (asm a4 (asing a2)) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (asm a4 (asing a3)) a3 -> (asm a4 (asing a3) = a3) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (apow a2)) -> aal2 a2 -> aal4 a4 -> aex2 a2 -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex3 (asm a4 (asing a3)) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex4 (aun a3 (asing (apow a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMTjbZ2nxCGEVvQniCnxivEMtoKXN7QWg2P: (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (~ asubq a1 a0) -> (~ ain a0 (asing a1)) -> ain a2 (asm (apow a2) (apow (asing a1))) -> ain a2 (asm (apow a2) a2) -> (~ ain (asing (asing a1)) a2) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (~ ain a3 (asm a3 (asing a1))) -> (~ (a1 = apow a2)) -> (~ ain a1 (asing (apow (asing a1)))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a2 (asm a4 (asing a1)) -> ain a1 (aun a3 (asing (asing a2))) -> ain a2 (aun a3 (asing (asing a2))) -> (~ ain a0 (asing a3)) -> ain a3 (aun a1 (asing a3)) -> (~ ain a0 (asm a4 a2)) -> ain (apow a2) (aun a1 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal4 (asm (apow a2) (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal5 (aun (asing (asing a1)) a4) -> aal5 (aun (asing (asing a2)) a4) -> aal5 (aun a4 (asing (apow a2))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex2 (asm a3 (asing a2)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))).
admit.
Qed.

Theorem conj_AbstrHF_TMcHwhoHVuVmakuG5xfLhnAcgxMG9Vg33YQ: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ (a0 = a2)) -> (~ (a0 = asm a3 (asing a1))) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ (a1 = asm (apow a2) a2)) -> asubq a3 (apow a2) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asing a1) a4) -> ain a1 (apow (asm a3 (asing a1))) -> (~ ain a0 (asing a3)) -> ain a3 (asing a3) -> (~ ain (apow a2) a4) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain a2 (aun a3 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> asubq a3 (aun a3 (asing (apow a2))) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq a1 (asm a2 (asing a1)) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> (asm (apow a2) (asing (asing a1)) = a3) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal3 (asm a4 a2)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal2 (asm (apow a2) a2) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal3 (asm a4 (asing a2)) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> asubq a2 (aun a2 (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMLAQhNga7CjwzE2k9sWXeSMw8BRmH4aqnX: (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ ain a0 (asing a1)) -> ain a0 (asm (apow a2) (asing a1)) -> (~ (a0 = apow (asing a1))) -> (~ asubq a2 (asing a1)) -> (~ ain a2 (apow (asing a2))) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ (asing a1 = apow a2)) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (~ ain (asing a2) (apow a2)) -> (~ ain (asm (apow a2) a2) a3) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ (asm a3 (asing a1) = a3)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> (~ ain a2 (asing a3)) -> ain a3 (aun (asing (asing a2)) a4) -> (~ ain (asing a2) (asing (apow a2))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (asm a4 (asing a2)) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal3 a2) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> aal2 (asm (apow a2) a2) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal5 (aun a4 (asing (apow a2))) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex3 (asm a4 (asing a2)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex5 (aun a4 (asing (apow a2))) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMSe4LDPbSJYNQkhDVgZr6jMYmMA57q5EgL: (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, (~ ain X24 X24)) -> ain a0 a4 -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ ain a2 a1) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> ain (asing a1) (asm (apow a2) a2) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ ain (asing (asing a1)) a2) -> (~ ain a2 (asing (asing a1))) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ (a2 = asm (apow a2) a2)) -> (~ ain a3 (asm a3 (asing a1))) -> (~ (asm a3 (asing a1) = apow a2)) -> (~ (asm (apow a2) a2 = apow a2)) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> ain a0 (aun (asing (asing a2)) a4) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> (~ ain a0 (asing (apow a2))) -> ain a1 (aun a3 (asing (apow a2))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq (asing a1) (asm a2 (asing a0)) -> (asm a2 (asing a1) = a1) -> asubq (asm a3 (asing a2)) a2 -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (~ aal2 a1) -> (~ aal2 (asing a3)) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal4 a4 -> aal5 (aun (asing (asing (asing a1))) a4) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex2 (aun a1 (asing (apow a2))) -> aex3 a3 -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> ain a0 (apow (apow (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMWv8PF2EdPaYF5i3eb2AwrNzJymQpksmAS: (forall X24:set, (~ ain X24 X24)) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (~ (a0 = apow (asing a1))) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ asubq a2 (asing a1)) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a1) a3) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain a0 (aun a1 (asing a3)) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> (~ ain (asm (apow a2) a2) a4) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain a0 (aun (asing (asing a2)) a4) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (asm a4 (asing a2)) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal2 (apow (asing (asing a1))) -> aal3 a3 -> aal5 (aun (asing (asing a1)) a4) -> aex2 (aun a1 (asing (apow a2))) -> aex3 (asm (apow a2) (asing a1)) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex5 (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))).
admit.
Qed.

Theorem conj_AbstrHF_TMWJUswiZrRWGRynwg53x1F2KiaRdLoHvEE: (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> asubq a1 (asing a0) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> asubq a2 a3 -> asubq a3 a4 -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> (~ asubq a2 (asing a2)) -> (~ (a1 = asing a2)) -> (~ asubq (asing a1) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ (asm a3 (asing a1) = apow a2)) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> (~ ain (asing a2) (asing a3)) -> (~ ain (apow (asing a1)) a4) -> ain a2 (asm a4 (apow (asing a2))) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asing a2) (asing (apow a2))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing a1)) a4) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)) -> asubq (asm a2 (asing a0)) (asing a1) -> (asm a2 (asing a1) = a1) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (~ aal2 (asing (asing a1))) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal3 (asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm a4 (asing a2))) -> aal3 (asm a4 (asing a2)) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aal5 (aun (asing (asing a1)) a4) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex4 (aun a3 (asing (apow a2))) -> aex5 (aun (apow a2) (asing (apow a2))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMdnM56nd17ZK7snWkZYti3w8CsVdKVGsd1: (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> asubq a1 a2 -> asubq a3 a4 -> (~ (a0 = a2)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> (~ ain a0 (asing a2)) -> (~ ain (asing a1) a1) -> ain a2 (asm (apow a2) (apow (asing a1))) -> ain a2 (asm (apow a2) (apow (asing a2))) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ ain (asing (asing a1)) a2) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (~ (a2 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ (a0 = apow a2)) -> (~ ain (asing a2) (asm (apow a2) a2)) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> ain a3 (asing a3) -> ain a0 (aun a1 (asing a3)) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain a3 (asing (apow a2))) -> ain a1 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> ain a1 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal3 a3 -> aal5 (aun (apow a2) (asing (apow a2))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMb1fXoHD1gVBFLxp4dZV5o8yVzpJYB3CR9: ain a0 a2 -> ain a1 a2 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (~ ain a0 a0) -> ain a0 (asm a3 (asing a1)) -> ain a1 (apow a2) -> ain (asing a1) (apow a2) -> ain a0 (asm (apow a2) (asing a1)) -> (~ (a0 = apow (asing a1))) -> (~ ain a0 (asing (asing a1))) -> ain a2 (asm (apow a2) a2) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ ain a3 (asing a2)) -> (~ asubq (apow a2) (asing a2)) -> (~ (asing a2 = asm a3 (asing a1))) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ (a3 = apow a2)) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a2 (aun a3 (asing (asing a2))) -> ain a0 (apow (asm a3 (asing a1))) -> ain a3 (asm a4 (asing a1)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a3 (aun a4 (asing (apow a2))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> asubq a2 (aun a2 (asing (apow a2))) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (asm (asm a4 a2) (asing a2) = asing a3) -> asubq a3 (asm a4 (asing a3)) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> aal5 (aun (apow a2) (asing (apow a2))) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (aun (asing a3) (asing (apow a2))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex4 (aun a3 (asing (asing a2))) -> aex3 (asm a4 (asing a3)) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ (asm a3 (asing a1) = apow a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMd3yjb8S3jarny4wVpJmUqMDuhVYzbtRdG: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (~ ain a2 a2) -> (~ (a0 = a1)) -> (~ (a2 = a3)) -> ain a1 (asing a1) -> ain a0 (apow a2) -> (~ ain a0 (asing a1)) -> (~ (a0 = apow (asing a1))) -> (~ (a0 = asm (apow a2) a2)) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> (~ ain a1 (asm a3 (asing a1))) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ ain (apow a2) (asing (asing a1))) -> (~ ain (asing a1) a3) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (apow a2) (asing a2)) -> (~ ain (asing a2) a3) -> (~ ain a3 (asm a3 (asing a1))) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain a0 (apow (asm a3 (asing a1))) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a0 (aun (asing (asing a2)) a4) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (aun a2 (asing (apow a2))) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (asm a2 (asing a1) = a1) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal2 (asing (asing a1))) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (~ aal5 a4) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> aal2 (asm (apow a2) (apow (asing a1))) -> aal3 (asm (apow a2) (asing a1)) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal3 (asm a4 (asing a1)) -> aal5 (aun (asing (asing (asing a1))) a4) -> aex3 (asm (apow a2) (asing a1)) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asing (apow (asing a1))) a4) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> (~ asubq (asm (apow a2) a2) a2).
admit.
Qed.

Theorem conj_AbstrHF_TMUyM9kNvfcoHDS2arr4TCxoW47b8jL51Q1: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (~ ain a1 a1) -> (~ ain a2 a2) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> (~ asubq a1 (asing a2)) -> (~ ain (asing a1) (apow (asing a2))) -> (~ ain a1 (asm (apow a2) a2)) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ (a2 = asm (apow a2) a2)) -> (~ ain (apow (asing a1)) a3) -> (~ (a1 = asm (apow a2) a2)) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> ain a3 (asing a3) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> ain a3 (aun (asing (asing a2)) a4) -> ain a0 (aun (asing (asing a2)) a4) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain (asing a2) (asing (apow a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq a3 (aun a3 (asing (asing a2))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> asubq (asm a2 (asing a0)) (asing a1) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> (asm (asm a4 a2) (asing a2) = asing a3) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal3 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal5 (aun (asing (apow (asing a1))) a4) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)).
admit.
Qed.

Theorem conj_AbstrHF_TMGYjRnBesrNqt6oVPrgAW1eWJzXbaTw2Tv: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> ain a1 a4 -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (~ (a1 = a3)) -> ain a0 (apow (asing a1)) -> ain a2 (asing a2) -> (~ (a0 = asm a3 (asing a1))) -> (~ ain a2 (asing a1)) -> (~ asubq a2 (asing a1)) -> ain a2 (asm (apow a2) (asing a1)) -> (~ (a1 = asm a3 (asing a1))) -> (~ ain a1 (asm (apow a2) a2)) -> (~ (a1 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ asubq (apow a2) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> (~ ain a0 (asing (apow (asing a1)))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> ain a1 (apow (asm a3 (asing a1))) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq a1 (asm a2 (asing a1)) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal5 (apow a2)) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMF9Dc7CKJAFeLSfTfH4dQ9mMCgUfB67wc5: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (~ (a0 = a3)) -> (forall X24:set, forall X25:set, asubq X25 (asing X24) -> ((X25 = a0) \/ (X25 = asing X24))) -> (~ ain a0 (asing a1)) -> (~ ain (asing a1) a2) -> (~ ain a0 (asing (asing a1))) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ (a2 = asing (asing a1))) -> asubq (asing (asing a1)) (apow (asing a1)) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (~ ain a3 (apow a2)) -> (~ ain (apow a2) a3) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> (~ ain a3 (apow (asing a2))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> ain a2 (asm a4 a2) -> ain a1 (asm a4 (apow (asing a2))) -> ain a2 (asm a4 (apow (asing a2))) -> ain a3 (aun (asing (asing a2)) a4) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (aun a2 (asing (apow a2))) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (asm a2 (asing a1)) a1 -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm a3 (asing a2)) a2 -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal4 (asm (apow a2) (asing a1))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> aal4 a4 -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex2 (asm a4 a2) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun a3 (asing (apow a2))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)).
admit.
Qed.

Theorem conj_AbstrHF_TMMkJ7asVDEz8cHkpcz1n94KJx9QkQd7gWo: (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> ain (asing a1) (asing (asing a1)) -> (~ ain a0 (asing a1)) -> ain a1 (asm (apow a2) (apow (asing a1))) -> (~ ain (asing a1) a2) -> (~ (a0 = asing (asing a1))) -> (~ (a0 = asing a2)) -> (~ ain (asing a2) a1) -> (~ (a1 = asing a2)) -> (~ (a1 = asm a3 (asing a1))) -> (~ asubq a2 (asm a3 (asing a1))) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (~ asubq (apow a2) (asing a2)) -> (~ ain a3 (asm a3 (asing a1))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> ain a0 (aun (asing a2) (apow (asing a2))) -> ain a0 (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> ain a3 (aun a1 (asing a3)) -> ain a3 (aun (asing a1) (asing a3)) -> ain a0 (asm a4 (asing a2)) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (apow a2) (asing (apow a2)) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a1 (asm a2 (asing a1)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal3 a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> aal3 (asm (apow a2) (asing a2)) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aal5 (aun (asing (apow (asing a1))) a4) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))).
admit.
Qed.

Theorem conj_AbstrHF_TMdRU3oy1hytRsWSQQfCYPYQQkniFfCKVeH: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> ain a2 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (~ ain a2 a0) -> (forall X24:set, forall X25:set, asubq X25 (asing X24) -> ((X25 = a0) \/ (X25 = asing X24))) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> ain (asing a1) (apow a2) -> ain a2 (asm (apow a2) a2) -> (~ ain (asing a2) a2) -> (~ asubq (apow a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> (~ ain (asing a1) a4) -> ain a2 (aun a3 (asing (asing a2))) -> (~ ain a2 (aun a1 (asing a3))) -> ain a0 (asm a4 (asing a2)) -> (~ ain a0 (asm a4 a2)) -> ain a3 (asm a4 (asing a1)) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> (~ ain (asing a2) (asing (apow a2))) -> ain a0 (aun a2 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> asubq a4 (aun (asing (asing a2)) a4) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (asm a2 (asing a0)) (asing a1) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal4 (asm (apow a2) (asing a2))) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal3 (aun a2 (asing (apow a2))) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, aex2 (apow (asing X24))).
admit.
Qed.

Theorem conj_AbstrHF_TMYdnPFobGNo5Xi858gHhry1yab1KhwQFFw: ain a1 a2 -> ain a1 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> ain a0 (apow (asing a1)) -> asubq (asing a1) a2 -> (~ ain (asing a1) a1) -> ain a1 (asm (apow a2) (asing a2)) -> (~ asubq a2 (asing a1)) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ asubq (asm a3 (asing a1)) a2) -> (~ (asing a1 = a3)) -> (~ (a2 = apow (asing a1))) -> (~ (a2 = apow a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ (asing a2 = apow a2)) -> ain a0 (apow (asing (asing a1))) -> (~ ain a1 (asing (apow (asing a1)))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> ain a1 (aun a3 (asing (asing a2))) -> ain a2 (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> (~ ain (asing a2) (asing a3)) -> (~ ain (asing a1) (asm a4 a2)) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (asm a4 (asing a3)) a3 -> asubq a3 (asm a4 (asing a3)) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq a2 (apow (asm a3 (asing a1))) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> aal3 (asm (apow a2) (asing a1)) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMSa5ZYGBzfZYeSdriy5Cub6E1zqHSyEjbq: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (~ ain a1 (apow (asing a2))) -> ain a1 (asm (apow a2) (apow (asing a2))) -> ain a2 (apow a2) -> (~ ain a1 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ (asing a2 = apow a2)) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> ain a1 (apow (asm a3 (asing a1))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> ain a2 (asm a4 a2) -> ain a3 (asm a4 a2) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal3 (apow (asing a1))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aal5 (aun (asing (apow (asing a1))) a4) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex3 (aun a2 (asing (apow a2))) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex5 (aun (asing (asing a1)) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> (~ ain (asing a2) a4).
admit.
Qed.

Theorem conj_AbstrHF_TMKn7Qt9ShjXtBwG8VVtw5Rf8LAu2WPPYo6: (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> ain a2 a3 -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (~ asubq a1 a0) -> (~ ain a0 (asing a2)) -> ain a0 (asm (apow a2) (asing a2)) -> (~ ain (asing a1) (asing a2)) -> (~ ain (asing (asing a1)) a2) -> (~ (a1 = apow (asing a1))) -> (~ asubq a2 (asm a3 (asing a1))) -> (~ (asing a1 = apow a2)) -> (~ (a2 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (~ ain a3 (asm a3 (asing a1))) -> (~ (apow (asing a1) = a3)) -> (~ (asing a2 = asm (apow a2) a2)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> (~ ain a2 (asing a3)) -> (~ ain (asing a2) (asing a3)) -> ain a3 (asm a4 a2) -> ain a3 (asm a4 (asing a1)) -> ain a0 (aun (asing (asing a2)) a4) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> (~ ain a3 (asing (apow a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> asubq a4 (aun (asing (asing a2)) a4) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm a2 (asing a1)) a1 -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq a2 (asm a3 (asing a2)) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal2 a1) -> (~ aal2 (asing (apow a2))) -> (~ aal3 (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> aal3 (asm (apow a2) (apow (asing a2))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal4 (aun a3 (asing (asing a2))) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex3 (asm (apow a2) (asing a1)) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMMBe6gubUUpnSY2JHQxVJS69TYwatvAdCQ: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> ain a2 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (~ ain a2 a0) -> (~ (a0 = a2)) -> (~ (a0 = asing (asing a1))) -> ain a1 (asm (apow a2) (asing a2)) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ ain a1 (asing (asing a1))) -> (~ asubq (asing a1) (asing (asing a1))) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ ain (apow a2) (asing (asing a1))) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ (a2 = asm a3 (asing a1))) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> (~ (a0 = apow a2)) -> (~ (asing a2 = a3)) -> asubq a3 (apow a2) -> (~ (asm (apow a2) a2 = apow a2)) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain a0 (apow (asm a3 (asing a1))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> (~ ain a2 (aun a1 (asing a3))) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain (apow a2) (asing (apow a2)) -> ain a1 (aun a3 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal2 (asing a3)) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal4 (aun a3 (asing (apow a2))) -> aex2 (asm (apow a2) a2) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex5 (aun (apow a2) (asing (apow a2))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))).
admit.
Qed.

Theorem conj_AbstrHF_TMT14JPFh3x5T6jNm3tU1Ro1RX6NsSHe56o: (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a2 a1) -> (~ asubq a1 a0) -> asubq (asing a1) a2 -> (~ asubq a2 (asing a1)) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ asubq (asing a2) a2) -> (~ asubq (asm a3 (asing a1)) a2) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ (asing a1 = asing a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain a3 (apow (asing a2))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> ain a3 (aun a1 (asing a3)) -> ain a3 (aun (asing a1) (asing a3)) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain a1 (aun a2 (asing (apow a2))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (~ aal5 a4) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun a3 (asing (apow a2))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMRuzRhbhJJjkb2vye4NUhLuYg98SunQy68: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (~ (a0 = a2)) -> ain a1 (apow a2) -> (~ ain a2 (apow (asing a1))) -> ain a2 (asm (apow a2) (apow (asing a1))) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ (a2 = asing (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> asubq (asing (asing a1)) (apow (asing a1)) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (~ (a2 = apow (asing a1))) -> (~ ain (apow a2) (apow a2)) -> (~ (a1 = apow a2)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ (asing a2 = apow a2)) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a2 (aun a3 (asing (asing a2))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> (~ ain a2 (asing a3)) -> (~ ain (asing a2) (asing a3)) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain a2 (aun (asing (asing a2)) a4) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a0 (aun a1 (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing a1)) a4) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal3 (apow (asing a2))) -> (~ aal3 (aun (asing a1) (asing a3))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> aal2 (asm (apow a2) a2) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMLN7WXoN9iMwEL6u4o1UF8NUXAhc4csqZM: (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (~ ain a3 a3) -> (~ (a0 = a2)) -> (~ (a1 = a2)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> ain (asing a1) (asm (apow a2) (asing a2)) -> ain a2 (asm (apow a2) (apow (asing a1))) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ (asing a1 = apow a2)) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a3 (asing (asing a2))) -> (~ ain a2 (asing a3)) -> ain a1 (asm a4 (asing a2)) -> ain a3 (asm a4 (asing a1)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal2 (asing (apow a2))) -> (~ aal5 a4) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal2 (asm a4 a2) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 (asm (apow a2) (asing a2)) -> aex3 (asm a4 (asing a2)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> (~ ain a1 a0).
admit.
Qed.

Theorem conj_AbstrHF_TMMTXLniz7C1YmAiqf4bEk6p3TRPrDp4Gx6: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (~ ain a2 a0) -> ain a1 (apow a2) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a1 (asing (asing a1))) -> (~ asubq (apow a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ ain (asing a2) (apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ ain (apow (asing a1)) a3) -> (~ ain a3 (asm a3 (asing a1))) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> ain a3 (asm a4 (asing a2)) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> asubq (asing a1) (asm a2 (asing a0)) -> (asm a2 (asing a0) = asing a1) -> (asm a3 (asing a2) = a2) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal3 (aun a1 (asing a3))) -> (~ aal4 (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (~ aal4 (asm a4 (asing a2))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal2 (apow (asing (asing a1))) -> aal3 (asm a4 (asing a2)) -> aex2 (asm a3 (asing a1)) -> aex2 (aun a1 (asing (apow a2))) -> aex3 (aun (asing a2) (apow (asing a2))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)).
admit.
Qed.

Theorem conj_AbstrHF_TMUVctU8mrkiN8MjF1aduZG63pHg28tocvu: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (~ (a1 = a2)) -> (~ asubq a1 a0) -> (~ asubq a1 (asing a2)) -> (~ asubq a2 (asing a1)) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ ain a3 (apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> (~ asubq a3 (asing a2)) -> (~ (a3 = apow a2)) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a2 (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain a1 (asm a4 (asing a2)) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> (~ ain a0 (asm a4 a2)) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq a2 (apow (asm a3 (asing a1))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal3 (aun a1 (asing a3))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex5 (aun (apow a2) (asing (apow a2))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMaLSE7uGcKj9ehfFrNgpyqqwhJXQaukoQT: (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ ain a1 a0) -> (~ ain a2 a1) -> asubq a1 a2 -> (~ (a2 = a3)) -> (~ asubq a1 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> ain a2 (asing a2) -> ain a1 (asm (apow a2) (apow (asing a1))) -> (~ asubq (asing a1) (asing a2)) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ ain a3 (apow a2)) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> ain a0 (aun (asing a1) (apow (asing a2))) -> (~ ain (asing a1) a4) -> (~ ain (apow a2) a4) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq a1 (asm a2 (asing a1)) -> (asm a2 (asing a1) = a1) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> asubq a3 (asm a4 (asing a3)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (~ aal3 (asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aal5 (aun (asing (asing a2)) a4) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> (asm a3 (asing a2) = a2).
admit.
Qed.

Theorem conj_AbstrHF_TMWkgrLLo1oUc1N1dcpztB1dyeTAXsH6H1T: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> ain a1 a4 -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> ain (asing a1) (asm (apow a2) a2) -> (~ (a0 = asing a2)) -> ain (asing a1) (apow (asing a1)) -> ain a2 (asm (apow a2) (apow (asing a2))) -> (~ ain a2 (asing (asing a1))) -> (~ (asing a1 = a3)) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ ain (apow a2) (apow a2)) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ ain a3 (asm a3 (asing a1))) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> ain (asing a2) (apow (asing a2)) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> (~ ain (asing a1) (asm a4 a2)) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ ain a1 (asing (apow a2))) -> (~ ain (asing a1) (asing (apow a2))) -> ain (apow a2) (asing (apow a2)) -> ain a0 (aun a2 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun a4 (asing (apow a2))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asing a1) (asm a2 (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (~ aal4 a3) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (~ aal5 a4) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> aal2 (apow (asing (asing a1))) -> aal4 (aun a3 (asing (asing a2))) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex4 (apow a2) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex5 (aun (asing (asing a2)) a4) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> aal3 (asm a4 (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMWRepEBAxWB2rn7cpvDweMXxFJ3r4GuEpL: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, (~ ain X24 X24)) -> ain a0 a1 -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> ain a0 (apow a2) -> (~ asubq a1 (asing a1)) -> (~ ain (asing a1) (apow (asing a2))) -> (~ (asing a1 = asm a3 (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> (~ ain (asing a2) a3) -> (~ (asing a2 = asm a3 (asing a1))) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a0 (aun a1 (asing a3)) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain a0 (aun a3 (asing (apow a2))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal2 (asing a3)) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> aal2 a2 -> aal3 (aun (asing a2) (apow (asing a2))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (asm (asm a3 (asing a1)) (asing a2) = a1).
admit.
Qed.

Theorem conj_AbstrHF_TMJuQaNa2RYLDVwebxAhtUrXwph9Md2cnxH: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (~ ain a0 a0) -> (~ ain a3 a3) -> asubq a1 a2 -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> ain a0 (asm a3 (asing a1)) -> asubq (asing a1) a2 -> ain (asing a1) (apow a2) -> (~ (a0 = asing a1)) -> (~ asubq a1 (asing a2)) -> ain a1 (asm (apow a2) (asing a2)) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> (~ asubq a2 (asing a2)) -> (~ ain (asing a1) (asing a1)) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ ain (asm a3 (asing a1)) a2) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ ain a0 (asing (apow (asing a1)))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a1 (asm a4 (asing a2)) -> (~ ain (apow (asing a1)) a4) -> (~ ain (asm (apow a2) a2) a4) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> ain a2 (aun (asing (asing a2)) a4) -> (~ ain a1 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> asubq a2 (aun a2 (asing (apow a2))) -> asubq a3 (aun a3 (asing (apow a2))) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal2 (asing (apow a2))) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (~ aal4 (asm (apow a2) (asing a1))) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aal3 (asm a4 (asing a2)) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal4 (aun a3 (asing (apow a2))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asing (asing a2)) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> ain a3 (asm a4 (apow (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMFq7GfwoGQHz1g6Wfr8e5qE2uGpfPHAoQZ: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (~ ain a2 a0) -> (~ ain a1 a1) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> ain a0 (asm (apow a2) (asing a2)) -> ain a2 (asing a2) -> ain (asing a1) (asm (apow a2) a2) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ (asing a1 = a2)) -> (~ (a1 = asm a3 (asing a1))) -> (~ (asing a1 = asing a2)) -> (~ ain (asing a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (~ ain (asing a1) a3) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (~ ain (apow a2) a3) -> (~ (a3 = asm (apow a2) a2)) -> (~ (asm (apow a2) a2 = apow a2)) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> ain a0 (asm a4 (asing a1)) -> ain a0 (aun a3 (asing (asing a2))) -> ain a0 (apow (asm a3 (asing a1))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> ain a3 (asm a4 a2) -> ain a1 (aun (asing (asing a2)) a4) -> (~ ain a1 (asing (apow a2))) -> ain a1 (aun a2 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> (asm a3 (asing a2) = a2) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> (asm (asm a4 a2) (asing a3) = asing a2) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> (~ aal2 a1) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal3 (apow (asing a2))) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> aal3 (asm (apow a2) (asing a2)) -> aal3 a3 -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))).
admit.
Qed.

Theorem conj_AbstrHF_TMdvyitcBCcqUK2vcaVrS4WxwPmZJGSQRg2: (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> ain a0 a3 -> ain a2 a3 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (~ ain a2 a1) -> (~ (a0 = asing (asing a1))) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (~ (a2 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> ain a1 (apow (apow (asing a1))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain a1 (apow (asm a3 (asing a1))) -> ain a3 (aun a1 (asing a3)) -> ain a2 (asm a4 a2) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a0 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (asing a1) (asm a2 (asing a0)) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> (asm a3 (asing a2) = a2) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal5 (apow a2)) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> aex2 (apow (asing a1)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex4 a4 -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24).
admit.
Qed.

Theorem conj_AbstrHF_TMSHtfhVxpF35nb8aGSpfEYwGXoHzZjraG6: (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (~ (a2 = a3)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> ain a0 (asm (apow a2) (asing a2)) -> (~ asubq a1 (asing a1)) -> (~ ain a1 (apow (asing a2))) -> ain a1 (asm (apow a2) (asing a2)) -> ain (asing a1) (apow (asing a1)) -> (~ ain a3 (asing a1)) -> (~ asubq (asm a3 (asing a1)) a2) -> (~ (asing a1 = a3)) -> (~ (asing a1 = apow a2)) -> (~ (asing a1 = asing (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (~ asubq a3 (asing a2)) -> (~ ain (apow (asing a1)) a3) -> (~ ain (apow a2) a3) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain a3 (asing a3) -> (~ ain (apow a2) a4) -> ain a2 (asm a4 a2) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain a1 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> (asm a3 (asing a2) = a2) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal4 (apow a2) -> aal5 (aun a4 (asing (apow a2))) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex3 (asm a4 (asing a2)) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> asubq a4 (aun a4 (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMMCxKrsJD4Y6w5ddjy8KcrfPPSJ4GCuG6H: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (~ ain a2 a1) -> asubq a3 a4 -> ain a2 (asing a2) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (~ asubq (apow a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a3 (asm a3 (asing a1))) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> ain a0 (aun a1 (asing a3)) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain a3 (asm a4 (asing a1)) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal4 (asm (apow a2) (asing a1))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal2 (asm a3 (asing a1)) -> aal3 (asm (apow a2) (apow (asing a2))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMFy5nGgzKTcSCHg5Tgwqx4XuZAdmmkcBVi: (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> ain a1 a4 -> ain a3 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> asubq a1 (asing a0) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, asubq X25 (asing X24) -> ((X25 = a0) \/ (X25 = asing X24))) -> (~ ain (asing a1) a0) -> (~ ain a1 (apow (asing a2))) -> (~ ain a1 (asing a2)) -> asubq a1 (asm a3 (asing a1)) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ asubq (asing a1) (asing a2)) -> (~ (asing a1 = asm a3 (asing a1))) -> (~ (asing a1 = asm (apow a2) a2)) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (~ (asing (asing a1) = a3)) -> (~ (a3 = asm (apow a2) a2)) -> ain a0 (apow (asing (asing a1))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> ain a0 (asm a4 (asing a1)) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> ain a1 (asm a4 (asing a2)) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> (~ ain (asing a2) (asing (apow a2))) -> (~ ain a3 (asing (apow a2))) -> ain a2 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq a2 (apow (asm a3 (asing a1))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal3 (apow (asing a1))) -> (~ aal3 (asm a4 a2)) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> aal2 (apow (asing (asing a1))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal4 a4 -> aal5 (aun (asing (apow (asing a1))) a4) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex5 (aun (asing (asing a2)) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))).
admit.
Qed.

Theorem conj_AbstrHF_TMMWHMpfKqBWxtgUzssGwotRErQaNv4Q2Td: (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> ain a2 a3 -> ain a3 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (~ ain a1 a0) -> (~ asubq a2 a1) -> (~ asubq a1 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> ain a0 (apow (asing a1)) -> ain a1 (aun (asing a1) (asing (asing a1))) -> ain a0 (asm a3 (asing a1)) -> (~ ain a1 (apow (asing a1))) -> (~ (asing a1 = a2)) -> ain a2 (apow a2) -> (~ ain (asing a1) a3) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ (a2 = asm a3 (asing a1))) -> (~ ain (apow a2) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ (apow (asing a1) = a3)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> ain a0 (apow (asing (asing a1))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> ain a3 (aun (asing a1) (asing a3)) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain a0 (asing (apow a2))) -> (~ ain (asing a1) (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> asubq a3 (aun a3 (asing (apow a2))) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (~ aal2 (asing a3)) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> aal2 (asm a4 a2) -> aal5 (aun (apow a2) (asing (apow a2))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMH1hZquFNd71qGgm8NXg4qJ1VdVbjMW2VF: (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (~ ain a1 a0) -> ain a1 (asing a1) -> (~ ain (asing a2) a1) -> (~ (a0 = asm (apow a2) a2)) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ asubq (asing a1) (asing a2)) -> (~ ain (asing a2) a2) -> (~ (asing a1 = apow a2)) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ ain (apow a2) a3) -> (~ (apow (asing a1) = a3)) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing a1) a4) -> ain a0 (aun a1 (asing a3)) -> ain a0 (aun (asing (asing a2)) a4) -> ain (apow a2) (asing (apow a2)) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq a3 (aun a3 (asing (apow a2))) -> asubq a4 (aun (asing (asing a1)) a4) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (asm a2 (asing a1) = a1) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) a4 -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (~ aal2 (asing (apow a2))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (aun a1 (asing (apow a2))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex4 (aun a3 (asing (apow a2))) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> (~ asubq a2 a0).
admit.
Qed.

Theorem conj_AbstrHF_TMSYuX98uuCmY7W3AYnTu9x55BuibukyqcB: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (~ ain a1 a1) -> (~ (a1 = a2)) -> (~ (a1 = asing a1)) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a2) (asing (asing a1))) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (~ ain (apow a2) (apow a2)) -> (~ ain (apow a2) (asing a2)) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> (~ ain a2 (asing a3)) -> ain a3 (aun a1 (asing a3)) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain (asing a2) (aun (asing (asing a2)) a4) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain (apow a2) (asing (apow a2)) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> asubq (asm a2 (asing a0)) (asing a1) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (asm (asm a4 a2) (asing a2) = asing a3) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex3 (aun a2 (asing (apow a2))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMUfAb7GaQEYHwkD3bFJ5C5AsYk3PxeUFiK: (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> asubq a3 a4 -> ain (asing a1) (asing (asing a1)) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> (~ (a0 = asm a3 (asing a1))) -> ain (asing a1) (apow (asing a1)) -> ain a2 (asm a3 (asing a1)) -> (~ asubq a2 (asing a1)) -> ain a2 (asm (apow a2) (apow (asing a2))) -> ain a0 (apow (asing a2)) -> (~ (a1 = asing a2)) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a1 (asm (apow a2) a2)) -> (~ asubq a2 (asm a3 (asing a1))) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ (asing a1 = asing a2)) -> (~ ain (apow a2) (asing (asing a1))) -> (~ (a2 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (asing a2 = a3)) -> asubq a3 (apow a2) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a0 (asm a4 (asing a1)) -> (~ ain (asing a1) a4) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> ain a0 (apow (asm a3 (asing a1))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> ain a3 (aun a1 (asing a3)) -> (~ ain (asing a1) (asm a4 a2)) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> (~ ain (asing a2) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> (asm (asm a4 a2) (asing a2) = asing a3) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (~ aal3 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> aal3 (asm a4 (asing a1)) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq a2 (asm a3 (asing a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMYHhGbP9onEcMKvdqbeP3JXGKuBrcAnarH: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> ain a2 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (~ asubq a2 a1) -> (~ (a0 = a2)) -> (~ (a1 = a2)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> asubq (asing a1) a2 -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> ain a2 (asm (apow a2) a2) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ ain (apow a2) a2) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ (asing a2 = apow a2)) -> (~ (asm a3 (asing a1) = apow a2)) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (apow a2) (asing (apow a2)) -> ain (apow a2) (aun a4 (asing (apow a2))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> asubq a2 (aun a2 (asing (apow a2))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (asm a2 (asing a0) = asing a1) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> (~ aal2 (asing a2)) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aal5 (aun (asing (asing a2)) a4) -> aex4 (aun a3 (asing (apow a2))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex5 (aun (asing (asing a2)) a4) -> aex5 (aun (apow a2) (asing (apow a2))) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ (asing a1 = asm (apow a2) a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMN5xAsdAzXowb7ggMTtuVGAb16qiqizwwg: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> ain a0 a1 -> ain a0 a3 -> ain a2 a3 -> ain a2 a4 -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (~ asubq a2 a0) -> ain a2 (asing a2) -> (~ ain a1 (apow (asing a1))) -> asubq (asing a1) a2 -> ain a2 (asm a3 (asing a1)) -> (~ ain a0 (asm (apow a2) a2)) -> (~ ain a2 (apow (asing a2))) -> (~ ain (asing a1) a3) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ ain (apow a2) (apow a2)) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ ain (asm (apow a2) a2) a3) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asing a2) a4) -> (~ ain a1 (asing a3)) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal3 (apow (asing a2))) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex3 (asm (apow a2) (asing a1)) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ (asing a2 = apow a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMYoeFHFpmw9Jd44nfVoezYPjncQpCcdaDk: (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> ain a1 a3 -> ain a2 a4 -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> asubq a3 a4 -> (~ (a1 = a2)) -> ain a1 (aun (asing a1) (asing (asing a1))) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ (asing a1 = a3)) -> (~ ain (apow a2) (apow a2)) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (~ ain (asing a2) (asm a3 (asing a1))) -> (~ (a1 = asm (apow a2) a2)) -> asubq a3 (apow a2) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> ain a0 (asm a4 (asing a2)) -> (~ ain (apow a2) a4) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain a1 (aun a2 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> (asm (asm a4 a2) (asing a3) = asing a2) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (~ aal3 a2) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal3 (asm a4 (asing a1)) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex3 (asm a4 (asing a2)) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> (~ (a0 = a3)).
admit.
Qed.

Theorem conj_AbstrHF_TMHLUvxkrRPJfPKmcLPKvxbNtX3mhA54gAq: (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> ain a0 a1 -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (~ ain a0 (asing a1)) -> (~ ain (asing a1) a1) -> ain a2 (apow a2) -> ain a2 (asm (apow a2) (apow (asing a1))) -> (~ ain a1 (asing (asing a1))) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ asubq (asm (apow a2) a2) a2) -> (~ (asing a1 = asing (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> (~ (asing a2 = apow a2)) -> (~ ain a0 (asing (apow (asing a1)))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> ain a1 (asm a4 (asing a2)) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> ain a1 (aun (asing (asing a2)) a4) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> (asm (apow a2) (asing (asing a1)) = a3) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ aal2 (asing (asing a1))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal4 (aun a3 (asing (apow a2))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm a4 (asing a1)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex3 (asm a4 (asing a0)) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)).
admit.
Qed.

Theorem conj_AbstrHF_TMcnVAAJnmqHtWmg6J2XChAaLGpcNivJobw: ain a0 a1 -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> ain a1 a4 -> ain a2 a4 -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (~ ain a0 (asing a1)) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ (a0 = asm a3 (asing a1))) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ ain a2 (asing a1)) -> (~ asubq a2 (asing a1)) -> (~ (a1 = asm a3 (asing a1))) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ ain a1 (asm (apow a2) a2)) -> (~ (asing a1 = asm (apow a2) a2)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> ain a1 (apow (apow (asing a1))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> (~ ain (apow a2) (apow (asing a2))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain a0 (apow (asm a3 (asing a1))) -> (~ ain a2 (asing a3)) -> (~ ain (asing a2) (asing a3)) -> (~ ain a0 (asm a4 a2)) -> ain a2 (asm a4 (apow (asing a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain a0 (asing (apow a2))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (asm a2 (asing a1) = a1) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq a3 (asm a4 (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal2 a1) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal4 (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 (apow (asing a1)) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)).
admit.
Qed.

Theorem conj_AbstrHF_TMGGDVmMeHGYCYn6fBTJJ9TRAWZpFn6EcGB: (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (~ ain a1 a0) -> (~ ain a2 a0) -> (~ (a0 = a1)) -> (~ ain (asing a1) a2) -> ain a0 (asm (apow a2) (asing a1)) -> (~ ain a1 (apow (asing a2))) -> (~ (a0 = asm a3 (asing a1))) -> ain a2 (asm a3 (asing a1)) -> asubq a1 (asm a3 (asing a1)) -> (~ ain a0 (asm (apow a2) a2)) -> ain a2 (asm (apow a2) (apow (asing a2))) -> (~ (a1 = asing a2)) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ (a1 = apow (asing a1))) -> (~ ain (apow a2) a2) -> (~ ain a2 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> (~ asubq (apow a2) (asing a2)) -> (~ (a1 = asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (apow a2) (apow (asing a2))) -> ain a0 (aun (asing a2) (apow (asing a2))) -> ain a1 (aun a3 (asing (asing a2))) -> (~ ain (asing a2) (asing a3)) -> ain a3 (asm a4 (apow (asing a2))) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain a1 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq a1 (asm a2 (asing a1)) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 (apow (asing a1))) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal4 a3) -> aal2 (apow (asing (asing a1))) -> aal2 (asm a4 a2) -> aal3 (asm (apow a2) (apow (asing a2))) -> aal4 a4 -> aex2 (aun a1 (asing a3)) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex5 (aun (asing (asing a1)) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMZVBatsjWsHimXVBgekBBTCwUDwN8E2SrA: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> ain a1 a3 -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (~ (a1 = a2)) -> (~ (a0 = a3)) -> ain a0 (asm a3 (asing a1)) -> (~ asubq a1 (asing a2)) -> asubq a1 (apow (asing a1)) -> (~ ain (asing a1) a3) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ (a2 = asm (apow a2) a2)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> asubq a3 (apow a2) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain a1 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asing a1) (asm a2 (asing a0)) -> asubq (asm a2 (asing a1)) a1 -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal3 (aun (asing a1) (asing a3))) -> (~ aal5 (apow a2)) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> aal3 a3 -> aal3 (aun (asing a2) (apow (asing a2))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal4 (aun a3 (asing (asing a2))) -> aex2 (asm a4 a2) -> aex3 (asm (apow a2) (asing a2)) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (aun a3 (asing (apow a2))) -> aex5 (aun a4 (asing (apow a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMU6YvX8EtPQt6ssukMP3A6ZijtPBrb9vkW: (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> ain a1 a3 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> asubq a1 a2 -> (~ (a0 = a1)) -> ain a0 (apow a2) -> (~ ain (asing a1) a2) -> (~ ain a0 (asm (apow a2) a2)) -> (~ ain a3 (asing a1)) -> (~ ain (asm a3 (asing a1)) a2) -> (~ ain (asing a2) (asing (asing a1))) -> (~ (asing a1 = asing (asing a1))) -> (~ (a2 = asm a3 (asing a1))) -> (~ ain (apow (asing a1)) a3) -> (~ (asing a2 = apow a2)) -> (~ (asm a3 (asing a1) = apow a2)) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a2 (asm a4 (asing a1)) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> (~ ain (asm a3 (asing a1)) a4) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun a4 (asing (apow a2))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> asubq a2 (asm a4 (asing a2)) -> (asm a2 (asing a1) = a1) -> asubq (asm a3 (asing a2)) a2 -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal2 (asing (apow a2))) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> aal2 (asm a3 (asing a1)) -> aal2 (apow (asing (asing a1))) -> aal3 (asm (apow a2) (asing a2)) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMXTEHwAP8KZiBwGLecFDeV3aKc8WNzLkqZ: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (~ asubq (asing a1) (asing a2)) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ ain a1 (asm a3 (asing a1))) -> (~ (asing a1 = asing a2)) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (~ ain a3 (asing a2)) -> (~ (a2 = asing a2)) -> (~ ain a3 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ (a3 = asm (apow a2) a2)) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> (~ ain (apow a2) (asing (asing a2))) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> ain a0 (aun a1 (asing a3)) -> ain a3 (asm a4 (asing a2)) -> ain a2 (asm a4 (apow (asing a2))) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing a2)) a4) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (asm a2 (asing a0)) (asing a1) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> (asm a4 (asing a3) = a3) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> aal2 (asm (apow a2) a2) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex2 (asm a3 (asing a1)) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ (asing a1 = a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMPPoSYM8BnG7hzoMNsojXcRsdQrFRrBz7w: (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, ain a0 (apow X24)) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (~ ain a0 a0) -> (~ (a0 = a1)) -> (~ (a0 = a2)) -> ain a1 (apow a2) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (~ asubq (asm a3 (asing a1)) a2) -> (~ (asing a1 = asing a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (~ ain (apow a2) a3) -> (~ (asing a2 = asm a3 (asing a1))) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> (~ (asm (apow a2) a2 = apow a2)) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> (~ ain (asing a2) (asing a3)) -> ain a3 (aun a1 (asing a3)) -> (~ ain (asing a2) (asing (apow a2))) -> ain a1 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (asm a4 (asing a2)) a2) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> (asm a2 (asing a0) = asing a1) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq a2 (asm a3 (asing a2)) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal3 a2) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> aal2 a2 -> aal4 (aun a3 (asing (apow a2))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex5 (aun (asing (apow (asing a1))) a4) -> aex5 (aun (asing (asing a2)) a4) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))).
admit.
Qed.

Theorem conj_AbstrHF_TMdc4n3yVt5jkSmTPUmidHS8XfvECHqL9Fb: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> ain a2 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ (a0 = a1)) -> (~ (a1 = a2)) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> ain a1 (asing a1) -> ain a0 (apow (asing a1)) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ ain a2 (apow (asing a1))) -> ain a2 (asm (apow a2) (apow (asing a2))) -> (~ (a1 = asing a2)) -> (~ ain (asing a2) a2) -> (~ (asing a1 = asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain a1 (asm a4 (asing a2)) -> adisjoint (apow (asing a1)) (asm a4 a2) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain a1 (aun (asing (asing a2)) a4) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain (asing a1) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (~ aal2 a1) -> (~ aal2 (asing a2)) -> (~ aal3 a2) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal5 (aun (asing (asing a2)) a4) -> aex2 (asm a3 (asing a1)) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (apow a2) -> aex5 (aun (asing (asing a1)) a4) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> (~ ain a3 (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMJYNGGCHrNjRT5VdssnqH3VB8NGoNvDCpw: ain a1 a3 -> ain a0 a4 -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> ain a1 (asm (apow a2) (apow (asing a2))) -> ain (asing a1) (apow (asing a1)) -> (~ ain a1 (asm a3 (asing a1))) -> (~ ain (asm a3 (asing a1)) a2) -> (~ asubq (asm a3 (asing a1)) a2) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (~ (asing (asing a1) = a3)) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> (~ ain (apow a2) (apow (asing a2))) -> ain a0 (aun (asing a2) (apow (asing a2))) -> ain a2 (aun a3 (asing (asing a2))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> (~ ain a0 (asing a3)) -> ain a3 (asm a4 (asing a1)) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (asm a3 (asing a1)) a4 -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal2 a1) -> (~ aal3 (apow (asing a1))) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> aal3 (asm a4 (asing a2)) -> aal5 (aun (asing (asing a2)) a4) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (aun a1 (asing a3)) -> aex3 (asm a4 (asing a2)) -> aex3 (asm a4 (asing a1)) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex5 (aun (asing (asing a2)) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMEqk34QbcULqi1NGQPG7uRnpN4XAaTHoHv: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (~ ain a0 a0) -> (~ asubq a4 a3) -> (~ (a0 = a1)) -> (~ asubq a2 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> (~ ain a0 (asing a2)) -> (~ ain a0 (asing a1)) -> ain (asing a1) (apow a2) -> (~ ain (asing a1) (asing a2)) -> (~ ain (apow a2) a2) -> (~ asubq a2 (asm a3 (asing a1))) -> (~ (asing (asing a1) = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (~ ain (asing a2) a3) -> (~ (asing a2 = apow a2)) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain a3 (asing (asing a2))) -> (~ ain a3 (apow (asing a2))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> (~ ain a0 (asing (apow a2))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> asubq (aun (asing a1) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal2 (asm (apow a2) (apow (asing a1))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal3 (aun a2 (asing (apow a2))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (aun (asing a2) (asing (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)).
admit.
Qed.

Theorem conj_AbstrHF_TMVvsHcDnyT6xXm8j9mfKJNEc3QUM7ZN853: (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> asubq a3 a4 -> (~ (a1 = a2)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> ain a1 (aun (asing a1) (asing (asing a1))) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a1) (asing a2)) -> ain a2 (asm (apow a2) (apow (asing a2))) -> asubq (asing (asing a1)) (apow (asing a1)) -> (~ ain (asing a1) (asm a3 (asing a1))) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ (a3 = asm (apow a2) a2)) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> ain a0 (aun a3 (asing (asing a2))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain a0 (aun a1 (asing a3)) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain (asing a2) (aun (asing (asing a2)) a4) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain a2 (aun (asing (asing a2)) a4) -> (~ ain (asing a1) (asing (apow a2))) -> ain a0 (aun a2 (asing (apow a2))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (asm a2 (asing a1)) a1 -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq a3 (asm a4 (asing a3)) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (~ aal3 (apow (asing a1))) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> asubq a4 (aun (asing (asing (asing a1))) a4).
admit.
Qed.

Theorem conj_AbstrHF_TMUoK1U79Wk2yw16EqaXLVE4TZdEZK2RYV3: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> ain a0 a3 -> ain a2 a4 -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (~ ain a2 a0) -> (~ ain a3 a2) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> ain a1 (asing a1) -> (~ asubq a2 (asing a2)) -> ain a2 (asm (apow a2) (apow (asing a2))) -> (~ (a1 = asing a2)) -> (~ ain (asing (asing a1)) a2) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain (asm (apow a2) a2) a4) -> ain a2 (asm a4 a2) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a0 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (asm a2 (asing a0) = asing a1) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal3 (asm a4 a2)) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex3 (aun a2 (asing (apow a2))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMMQqQ7R7L7tZXp25J46JG25inwjzWQYSbM: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (~ ain a0 a0) -> (~ asubq a4 a3) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (~ ain a1 (apow (asing a1))) -> ain a1 (asm (apow a2) (apow (asing a1))) -> ain a2 (asm a3 (asing a1)) -> (~ ain a2 (apow (asing a2))) -> (~ (asing a1 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ (asing a2 = asm a3 (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a2) (apow (asing a2)) -> ain a0 (aun (asing a1) (apow (asing a2))) -> ain a0 (apow (asm a3 (asing a1))) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (~ aal4 a3) -> (~ aal4 (asm a4 (asing a2))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> aal3 (asm a4 (asing a1)) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMVoqWDLkQgLfQiMMPgXq24EmYVg6q3tZYm: (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> ain a1 (aun (asing a1) (asing (asing a1))) -> (~ ain (asm a3 (asing a1)) a2) -> (~ ain (apow a2) a2) -> (~ ain a2 (asing (asing a1))) -> (~ (asing a1 = asing (asing a1))) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (~ ain (asing a1) a3) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ ain (asm (apow a2) a2) a3) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (asm (apow a2) (asing (asing a1)) = a3) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> (~ aal2 (asing a1)) -> (~ aal2 (asing (apow a2))) -> (~ aal3 (asm a3 (asing a1))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ ain a0 (asing a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMVkrtooqLgBjcD6F6VR2aGvvTZ7Hqbp9sz: (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> ain a0 (apow a2) -> ain a1 (asm (apow a2) (apow (asing a1))) -> (~ ain (asing a1) (asing a2)) -> ain a2 (asm (apow a2) a2) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ (a1 = apow (asing a1))) -> (~ (asing a1 = a3)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ (a0 = apow a2)) -> asubq (asm a3 (asing a1)) (apow a2) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> (~ ain a3 (apow (asing a2))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> ain a3 (aun (asing a1) (asing a3)) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain (apow a2) (asing (apow a2)) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> asubq a2 (asm a4 (asing a2)) -> asubq a3 (aun a3 (asing (apow a2))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> (asm a3 (asing a2) = a2) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal4 (asm a4 (asing a2))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> aal3 (aun a2 (asing (apow a2))) -> aal5 (aun (apow a2) (asing (apow a2))) -> aal5 (aun a4 (asing (apow a2))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (apow (asing a2)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aex4 a4 -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex5 (aun (asing (asing a2)) a4) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMP6E9tFFSSc9gR4Sfc9cLYxz2yzVRneHR7: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> ain a0 a2 -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (~ ain a2 a2) -> asubq a1 a2 -> ain a0 (apow (asing a1)) -> (~ ain a0 (asing a1)) -> (~ ain a1 (apow (asing a2))) -> (~ ain a0 (asm (apow a2) a2)) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ ain a2 (asing (asing a1))) -> (~ (asing a1 = asing a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ (a2 = asm a3 (asing a1))) -> (~ ain a3 (asing a2)) -> (~ ain (apow a2) a3) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a0 (asing a3)) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> ain a3 (asm a4 (apow (asing a2))) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a0 (aun a2 (asing (apow a2))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> ain a1 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> asubq (asing a1) (asm a2 (asing a0)) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal4 (asm (apow a2) (asing a2))) -> (~ aal4 a3) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal3 (asm (apow a2) (asing a1)) -> aex2 a2 -> aex2 (asm a4 a2) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)).
admit.
Qed.

Theorem conj_AbstrHF_TMQNWCiDCJCJFsFKsEh7Dh9mATmMhxLmQeZ: (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (~ ain a2 a1) -> (~ asubq a3 a2) -> (~ ain (asing a1) (asing a2)) -> (~ ain a2 (apow (asing a1))) -> (~ ain (asm a3 (asing a1)) a2) -> (~ asubq (asm (apow a2) a2) a2) -> (~ ain a2 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asing a2) (apow a2)) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ (a2 = apow a2)) -> (~ ain (asm (apow a2) a2) a3) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> ain a0 (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> ain a1 (asm a4 (asing a2)) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> asubq a2 (asm a3 (asing a2)) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal2 a1) -> (~ aal4 (asm (apow a2) (asing a1))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal4 (asm a4 (asing a2))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal3 a3 -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMY7sJFjCpf7fgK2Kt95b9shSWTAh99LC12: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> ain a0 a2 -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (~ ain a2 a1) -> ain a2 (asm a3 (asing a1)) -> asubq a1 (asm a3 (asing a1)) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ ain (apow a2) a2) -> (~ ain a2 (asing (asing a1))) -> (~ (asing a1 = asm (apow a2) a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asing a2) (apow a2)) -> (~ ain a3 (apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> (~ ain a1 (asing a3)) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ asubq (asm a4 (asing a2)) a2) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> (asm a2 (asing a0) = asing a1) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> aal2 (asm a3 (asing a1)) -> aal2 (asm a4 a2) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (asm (apow a2) a2) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm (apow a2) (asing a2)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex5 (aun (asing (apow (asing a1))) a4) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMKbzXs6WBWWoBEnetjNGBzqtPEHiAcvmdX: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> ain a1 a2 -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (~ ain a2 a2) -> (~ (a0 = a3)) -> (~ (a2 = a3)) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (~ ain (asing a1) a0) -> ain a1 (aun (asing a1) (asing (asing a1))) -> (~ ain a2 (asing a1)) -> (~ ain a2 (apow (asing a1))) -> (~ ain a3 (asing a1)) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> ain a2 (asm a4 a2) -> (~ ain (asing a2) (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq a2 (aun a2 (asing (apow a2))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> aal3 (asm (apow a2) (apow (asing a2))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex2 (asm a3 (asing a1)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> ain a2 (asm (apow a2) (apow (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMWznoekER34pTdTwuDdhKLrgDzJSUn7rWn: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> ain a0 a3 -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (~ ain a2 a2) -> (~ (a0 = a3)) -> (~ asubq a1 a0) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> ain (asing a1) (asing (asing a1)) -> ain (asing a1) (apow (asing a1)) -> ain a2 (asm (apow a2) a2) -> (~ ain a2 (apow (asing a2))) -> (~ (a1 = asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ (asing a2 = asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asing a2) a4) -> ain a0 (apow (asm a3 (asing a1))) -> ain a0 (asm a4 (asing a2)) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain a2 (aun (asing (asing a2)) a4) -> (~ ain a0 (asing (apow a2))) -> (~ ain (asing a2) (asing (apow a2))) -> ain a2 (aun a3 (asing (apow a2))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal2 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal4 (asm (apow a2) (asing a2))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal2 (apow (asing (asing a1))) -> aal4 a4 -> aex3 (asm (apow a2) (asing a1)) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2).
admit.
Qed.

Theorem conj_AbstrHF_TMYtE6pJMqBQio9nwshfEWuEzRx5DhHAW2U: (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> ain a0 a3 -> ain a1 a3 -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (~ asubq a4 a3) -> (~ (a0 = a1)) -> asubq (asing a1) a2 -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ ain (asing a1) (asing a1)) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ ain a1 (asm a3 (asing a1))) -> (~ (asing a1 = apow a2)) -> (~ (asing a1 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ (asing a2 = a3)) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> (~ (asm (apow a2) a2 = apow a2)) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> (~ ain (asing (asing a1)) a4) -> ain a1 (aun (asing (asing a2)) a4) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (~ aal5 (apow a2)) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> aex2 (asm a3 (asing a2)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMJAZGrJLjgBotk4X6EV7BbJxrVS7vRUjrH: (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (~ asubq a3 a2) -> asubq a3 a4 -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> (~ ain a0 (asing a1)) -> (~ ain a1 (apow (asing a1))) -> ain a1 (asm (apow a2) (asing a2)) -> asubq a1 (asm a3 (asing a1)) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ ain a1 (asm a3 (asing a1))) -> (~ (a2 = asing (asing a1))) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ ain (asing (asing a1)) a3) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> (~ (asm (apow a2) a2 = apow a2)) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain a2 (aun a3 (asing (asing a2))) -> ain a1 (aun (asing a1) (asing a3)) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> ain a3 (aun (asing (asing a2)) a4) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain a1 (aun a2 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (~ asubq (asm a4 (asing a2)) a2) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm a2 (asing a1)) a1 -> asubq a2 (asm a3 (asing a2)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> (asm (apow a2) (asing (asing a1)) = a3) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal4 (asm a4 (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> aal2 (asm (apow a2) a2) -> aal4 a4 -> aal5 (aun a4 (asing (apow a2))) -> aex2 (apow (asing a1)) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex3 (asm a4 (asing a2)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex3 (asm a4 (asing a3)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMduX9uP8ThxfnF8WmkUbJDfZ2J3fVc24jU: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (~ ain a0 a0) -> (~ (a1 = a3)) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (~ ain (asing a1) a0) -> (~ asubq a2 (asing a1)) -> (~ ain a1 (asing (asing a1))) -> (~ ain (apow a2) a2) -> (~ (a2 = apow (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ ain a3 (asm a3 (asing a1))) -> (~ (asing (asing a1) = a3)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> (~ (asm (apow a2) a2 = apow a2)) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (~ ain (apow a2) (apow (asing a2))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asing a1) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (asm a2 (asing a0) = asing a1) -> (asm a2 (asing a1) = a1) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> (~ asubq (apow a2) (asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMN63N9t6eihgUvvCxQYzAmABkjHpKAy3sZ: ain a2 a3 -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (~ ain a2 a1) -> (~ (a0 = a1)) -> ain a0 (asm a3 (asing a1)) -> (~ (a0 = apow (asing a1))) -> (~ (a0 = asm a3 (asing a1))) -> (~ asubq a2 (asing a1)) -> ain a2 (asm (apow a2) (asing a1)) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> (~ (asm a3 (asing a1) = a3)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> (~ (asing a2 = apow a2)) -> ain a0 (apow (asing (asing a1))) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> (~ ain (asing (asing a1)) a4) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> ain a3 (aun (asing (asing a2)) a4) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a2 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm a2 (asing a1)) a1 -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal3 (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aal5 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm a4 (asing a0)) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> asubq a3 a4.
admit.
Qed.

Theorem conj_AbstrHF_TMEvZj36cBfJ5nedBh2bGhho7YY6u6UJN4m: (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> ain a0 a1 -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (~ ain a0 a0) -> (~ ain a3 a2) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> asubq (asing (asing a1)) (apow (asing a1)) -> (~ (asing (asing a1) = apow (asing a1))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ ain a3 (asing a2)) -> (~ ain a3 (asm a3 (asing a1))) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> ain a3 (asing a3) -> ain a1 (asm a4 (asing a2)) -> ain a3 (asm a4 a2) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain a1 (aun a3 (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal2 (asing (apow a2))) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> aal2 (asm (apow a2) a2) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal4 (aun a3 (asing (asing a2))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 a2 -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))).
admit.
Qed.

Theorem conj_AbstrHF_TMX372QVrGnDYc5RjsCV9CLyUfNMbpoH3ZM: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> ain a0 a1 -> ain a1 a4 -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (~ ain a2 a2) -> (~ (a1 = a3)) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> (~ ain a1 (apow (asing a1))) -> (~ ain (asing a1) a2) -> asubq a1 (apow (asing a1)) -> ain a2 (asm (apow a2) (asing a1)) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ ain (asing a2) a2) -> (~ (asing a1 = asing a2)) -> asubq (asing (asing a1)) (apow (asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> (~ (asing a2 = asm (apow a2) a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> ain a1 (apow (apow (asing a1))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> ain a2 (asm a4 (asing a1)) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> ain a1 (apow (asm a3 (asing a1))) -> (~ ain (apow (asing a1)) a4) -> ain a3 (asm a4 (asing a2)) -> (~ ain (asm (apow a2) a2) a4) -> ain a2 (asm a4 a2) -> ain a3 (asm a4 (asing a1)) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain a3 (aun (asing (asing a2)) a4) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMKP86HcRz4wtfehatsAefqKKZ8ow8aN51i: ain a0 a2 -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (~ ain a3 a3) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (~ (a0 = asing a2)) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ ain (asing a2) (asing (asing a1))) -> (~ (asing a1 = asing (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ (a1 = apow a2)) -> (~ (asing (asing a1) = a3)) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> (~ ain a3 (apow (asing a2))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> ain a0 (asm a4 (asing a1)) -> ain a3 (asm a4 (apow (asing a2))) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain (apow a2) (asing (apow a2)) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex4 a4 -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asing (apow (asing a1))) a4) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))).
admit.
Qed.

Theorem conj_AbstrHF_TMMT88Sjr4UVprvesCwi1ZKgMSYRDj5QxBH: (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (~ ain a0 a0) -> asubq a1 a2 -> (~ asubq a2 a1) -> (~ (a1 = a3)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> ain a1 (asm (apow a2) (asing a2)) -> (~ ain (asing a2) a1) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain (apow a2) a2) -> (~ asubq (asing a2) a2) -> (~ (asing a1 = a3)) -> asubq (asing (asing a1)) (apow (asing a1)) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ ain a3 (asing a2)) -> (~ ain (apow a2) (asing a2)) -> (~ ain (apow (asing a1)) a3) -> (~ (a1 = asm (apow a2) a2)) -> (~ (a0 = apow a2)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> (~ ain a1 (asing (apow (asing a1)))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> ain a0 (asm a4 (asing a2)) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain (asing a1) (asing (apow a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun a4 (asing (apow a2))) -> ain a3 (aun a4 (asing (apow a2))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal3 a2) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal4 a3) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> aal2 (asm a3 (asing a1)) -> aal5 (aun (asing (apow (asing a1))) a4) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (asm a3 (asing a1)) -> aex3 (asm (apow a2) (asing a2)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex4 (aun a3 (asing (apow a2))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> aex2 (aun (asing a1) (asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMHpcSMBxiVbBJVJLDarNoM3vpB9PwMfWcV: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> ain a3 a4 -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> ain a2 (asing a2) -> (~ ain a0 (asing a1)) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> asubq (asing a1) a2 -> ain a2 (asm (apow a2) (apow (asing a1))) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (~ ain (apow a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (apow a2) (asing a2)) -> (~ (asing a2 = asm (apow a2) a2)) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> aal2 a2 -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex3 (asm a4 (asing a3)) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asing (apow (asing a1))) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (apow a2) (apow a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMaKNp46JVNz1TWmcexfEStVSHrEEuRmV1N: (forall X24:set, ain X24 a1 -> (X24 = a0)) -> ain a2 a4 -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (~ ain a2 a0) -> ain a1 (asing a1) -> (~ ain (asing a1) a2) -> ain a1 (asm (apow a2) (apow (asing a2))) -> ain a1 (asm (apow a2) (asing a2)) -> asubq a1 (apow (asing a1)) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ (a1 = asing a2)) -> (~ ain (asing (asing a1)) a2) -> (~ (asing a1 = asm a3 (asing a1))) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ asubq a3 (asing a2)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ ain a1 (asing (apow (asing a1)))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a2) (asing (asing a2)) -> ain a0 (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> ain a1 (asm a4 (asing a2)) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain a0 (aun a3 (asing (apow a2))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> ain a0 (aun a4 (asing (apow a2))) -> ain a3 (aun a4 (asing (apow a2))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq a4 (aun (asing (asing a1)) a4) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (~ aal2 (asing (apow a2))) -> (~ aal3 (apow (asing a1))) -> (~ aal3 (apow (asing (asing a1)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))).
admit.
Qed.

Theorem conj_AbstrHF_TMWWVkSmYFRSPXrWomRALMusxZbDwBGtAXj: ain a0 a2 -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (~ (a1 = a3)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> (~ (a0 = apow (asing a1))) -> (~ (a0 = asing a2)) -> (~ ain a0 (asing (asing a1))) -> (~ ain a0 (asm (apow a2) a2)) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (~ ain (asing a2) (apow a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> ain a0 (aun a1 (asing a3)) -> (~ ain a0 (asm a4 a2)) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a4 (aun (asing (asing a1)) a4) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asing a1) (asm a2 (asing a0)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 a3) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (asm a3 (asing a1)) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (asm a4 a2) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (apow a2) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex5 (aun (asing (asing a2)) a4) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)).
admit.
Qed.

Theorem conj_AbstrHF_TMYBr98breLJ1m587NCFSeprGeyd5VnJxyG: (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ ain a1 a0) -> asubq a2 a3 -> (~ (a0 = a1)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> asubq (asing a1) a2 -> ain (asing a1) (asm (apow a2) a2) -> ain a1 (asm (apow a2) (asing a2)) -> asubq a1 (apow (asing a1)) -> (~ asubq (asm (apow a2) a2) a2) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ ain a3 (asing a2)) -> (~ (a2 = apow a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ (asing a2 = asm a3 (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ (asing a2 = a3)) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain a3 (asing (asing a2))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> ain a2 (aun a3 (asing (asing a2))) -> (~ ain a2 (aun a1 (asing a3))) -> (~ ain (asm (apow a2) a2) a4) -> (~ ain (apow a2) a4) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> (~ ain (asing a1) (asm a4 a2)) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> ain a1 (aun (asing (asing a2)) a4) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (asing a1) (asing (apow a2))) -> (~ ain (asing a2) (asing (apow a2))) -> (~ ain a3 (asing (apow a2))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal3 (asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal2 (asm a4 a2) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal4 (aun a3 (asing (asing a2))) -> aal4 (aun a3 (asing (apow a2))) -> aal5 (aun (asing (asing a1)) a4) -> aal5 (aun (asing (asing (asing a1))) a4) -> aal5 (aun (apow a2) (asing (apow a2))) -> aex3 (aun a2 (asing (apow a2))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> aex5 (aun (asing (asing a1)) a4) -> aex5 (aun (asing (apow (asing a1))) a4) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMVZGh9TEvusKfbEoswhhNxuV2cZJpcKwu8: (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, (~ ain X24 X24)) -> ain a0 a4 -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (~ ain a0 a0) -> (~ ain a1 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (~ ain (asing a1) a0) -> (~ (asing a1 = a2)) -> asubq a1 (asm a3 (asing a1)) -> (~ ain a2 (apow (asing a2))) -> ain a2 (asm (apow a2) (apow (asing a2))) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ (asm (apow a2) a2 = apow a2)) -> (~ ain a1 (asing (apow (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> ain a2 (aun a3 (asing (asing a2))) -> ain a3 (asm a4 (asing a2)) -> (~ ain (asm (apow a2) a2) a4) -> (~ ain a0 (asm a4 a2)) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq a1 (asm a2 (asing a1)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal4 (asm (apow a2) (asing a1))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal5 (aun a4 (asing (apow a2))) -> aex2 (asm a3 (asing a1)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex5 (aun (asing (asing a1)) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMKJg9M4PtabRCZpkss8R9gUvFFWeLLo4uh: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> ain a1 a4 -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (~ ain a2 a1) -> (~ ain a3 a2) -> ain a1 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 (apow (asing a1))) -> ain a1 (asm (apow a2) (apow (asing a1))) -> (~ ain (asing a1) (asing a2)) -> ain a2 (asm (apow a2) a2) -> (~ ain a0 (asm (apow a2) a2)) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (~ asubq (asm a3 (asing a1)) a2) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ (asing a1 = apow a2)) -> (~ ain (asing a2) (apow a2)) -> (~ asubq a3 (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> ain a0 (apow (asing (asing a1))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> (~ ain (asing a2) a4) -> ain a2 (aun a3 (asing (asing a2))) -> (~ ain a2 (aun a1 (asing a3))) -> ain a1 (aun (asing a1) (asing a3)) -> (~ ain (apow a2) a4) -> adisjoint (apow (asing a1)) (asm a4 a2) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain a2 (aun a3 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> asubq (asm a4 (asing a3)) a3 -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal4 a3) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> aal2 a2 -> aal2 (aun (asing a1) (asing (asing a1))) -> aal2 (asm a4 a2) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal4 (apow a2) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMVC5xPRGZQByUVGTzYbGnex6oZJFbGZ7k1: (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> asubq a3 a4 -> ain (asing a1) (apow (asing a1)) -> ain a2 (asm (apow a2) (apow (asing a2))) -> (~ ain (asing a1) (apow (asing a2))) -> (~ ain (asing (asing a1)) a2) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asing a2) (apow a2)) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ (a2 = asm a3 (asing a1))) -> (~ (a1 = asm (apow a2) a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> (~ (asing a2 = apow a2)) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain a2 (aun a1 (asing a3))) -> (~ ain (asm (apow a2) a2) a4) -> (~ ain (asing a1) (asm a4 a2)) -> (~ ain (asing a1) (asing (apow a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq a2 (apow (asm a3 (asing a1))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal2 (asing a3)) -> (~ aal3 (asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal3 (asm (apow a2) (asing a1)) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aex3 (asm a4 (asing a2)) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1).
admit.
Qed.

Theorem conj_AbstrHF_TMWNys2gNN7kEqUmNQQzY9cuE4dq2CT6fVo: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> ain a1 a3 -> ain a0 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> asubq a2 a3 -> (~ (a1 = a3)) -> (~ ain (asing a1) (asing a1)) -> (~ ain (apow a2) a2) -> (~ asubq (asm a3 (asing a1)) a2) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ (asing a1 = asm a3 (asing a1))) -> (~ (a2 = asing (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (~ (a2 = asing a2)) -> (~ ain a3 (asm a3 (asing a1))) -> asubq (asm a3 (asing a1)) (apow a2) -> (~ (asm (apow a2) a2 = apow a2)) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal2 (asing (apow a2))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex5 (aun (asing (asing a1)) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMXGCbk3nEAFRERSBVekXPgzAfpu81EwyCi: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> ain a0 a3 -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (~ (a0 = a1)) -> (~ (a2 = a3)) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> ain a0 (asm a3 (asing a1)) -> (~ (a0 = apow (asing a1))) -> (~ ain (asing a2) a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a3 (apow a2)) -> (~ asubq (apow a2) (asing a2)) -> (~ ain (asing a2) a3) -> (~ ain a3 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain a1 (apow (asm a3 (asing a1))) -> (~ ain (asing (asing a1)) a4) -> (~ ain (apow a2) a4) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain a1 (asing (apow a2))) -> ain a0 (aun a3 (asing (apow a2))) -> ain a2 (aun a3 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq a1 (asm a2 (asing a1)) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> (asm a4 (asing a3) = a3) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal2 a1) -> (~ aal2 (asing a3)) -> (~ aal3 (apow (asing a1))) -> (~ aal3 (aun (asing a1) (asing a3))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> aex2 (asm a3 (asing a1)) -> aex2 (aun a1 (asing (apow a2))) -> aex3 (asm (apow a2) (asing a2)) -> aex3 (asm (apow a2) (asing a0)) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))).
admit.
Qed.

Theorem conj_AbstrHF_TMHrViutVJ7r4rDjmHAB1vMCSLCkXWLLxMU: (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> asubq a1 (asing a0) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (~ ain (asing a1) a2) -> ain (asing a1) (apow (asing a1)) -> asubq a1 (apow (asing a1)) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ ain a2 (apow (asing a1))) -> (~ ain (asing a1) (asing a1)) -> (~ ain a1 (asing (asing a1))) -> (~ ain (asm a3 (asing a1)) a2) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ (asing a1 = asm (apow a2) a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (~ ain (asing a2) a3) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> (~ (asm a3 (asing a1) = a3)) -> (~ (a3 = asm (apow a2) a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ (asing a2 = apow a2)) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a3 (asing (asing a2))) -> ain a0 (asm a4 (asing a1)) -> ain a2 (asm a4 (asing a1)) -> (~ ain (asing a2) (aun a1 (asing a3))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (~ aal4 (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal5 (aun (apow a2) (asing (apow a2))) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))).
admit.
Qed.

Theorem conj_AbstrHF_TMPb6rCicfcSi7AbfstCjmjjj7WyNSU7nkW: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ ain (asing a1) (asing a1)) -> (~ (a1 = asing a2)) -> (~ asubq (asing a1) (asing a2)) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ asubq (asm (apow a2) a2) a2) -> (~ ain (asing a2) (asing (asing a1))) -> (~ (asing a1 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asing a2) (apow a2)) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> (~ ain (apow (asing a1)) a3) -> asubq (asm a3 (asing a1)) (apow a2) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ (a3 = apow a2)) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> ain a3 (aun (asing a1) (asing a3)) -> (~ ain (asm a3 (asing a1)) a4) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> (~ ain a3 (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> asubq a1 (asm a2 (asing a1)) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (asm (asm a4 a2) (asing a3) = asing a2) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (~ aal2 (asing a1)) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> aal3 (asm (apow a2) (asing a1)) -> aal3 (aun a2 (asing (apow a2))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aal5 (aun (asing (asing a1)) a4) -> aal5 (aun (apow a2) (asing (apow a2))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (aun a1 (asing (apow a2))) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMY9kEivv9B3BDBGpAmbRZVhMPtNpig7wZ3: (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> ain a3 a4 -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (~ asubq a4 a3) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain a1 (asm (apow a2) (asing a2)) -> (~ asubq a2 (asing a1)) -> (~ asubq a2 (asing a2)) -> (~ (a1 = asm a3 (asing a1))) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ ain (asing (asing a1)) a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a2) (asm (apow a2) a2)) -> (~ (a3 = apow a2)) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> (~ ain (asing a2) (asing a3)) -> (~ ain (apow (asing a1)) a4) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> (~ ain (asing a1) (asm a4 a2)) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain a3 (asing (apow a2))) -> ain a0 (aun a1 (asing (apow a2))) -> ain a2 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> ain a2 (aun a4 (asing (apow a2))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq (asm a3 (asing a2)) a2 -> asubq a2 (asm a3 (asing a2)) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> (asm (apow a2) (asing (asing a1)) = a3) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal2 (asing a3)) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (~ aal4 a3) -> (~ aal5 (aun a3 (asing (apow a2)))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aal4 (aun a3 (asing (apow a2))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (apow (asing a2)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMTrct2VVdsCS236Gz2uL2umHS3vvHDnMdB: (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> ain a1 a4 -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (~ (a1 = asm a3 (asing a1))) -> (~ ain a2 (asing (asing a1))) -> (~ ain (asing a1) a3) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (a2 = asm a3 (asing a1))) -> (~ (a1 = apow a2)) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain a0 (apow (apow (asing a1))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> ain a3 (asing a3) -> (~ ain (asm (apow a2) a2) a4) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asing a1) (asing (apow a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal3 (apow (asing a1))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex3 (asm a4 (asing a1)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (aun a3 (asing (apow a2))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)).
admit.
Qed.

Theorem conj_AbstrHF_TMT8NSyYrv6kpSehNJrsiiiLBCaYHZ45W9n: (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> ain a0 a3 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ (a0 = a3)) -> (~ asubq a1 a0) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> ain (asing a1) (asm (apow a2) a2) -> (~ ain a1 (apow (asing a2))) -> (~ ain (asing a1) a1) -> (~ ain (asing a2) a1) -> (~ ain a2 (asing a1)) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> (~ ain a3 (apow (asing a2))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> ain a0 (asm a4 (asing a2)) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> ain a2 (aun (asing (asing a2)) a4) -> (~ ain (asing a1) (asing (apow a2))) -> ain (apow a2) (asing (apow a2)) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> asubq a4 (aun (asing (asing a1)) a4) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> asubq a1 (asm a2 (asing a1)) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal3 a3 -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex5 (aun (asing (apow (asing a1))) a4) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMXadqZx69mbyhti26pYFK9eiBkc4MG7S1b: (forall X24:set, (~ ain X24 X24)) -> ain a0 a3 -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (~ asubq a4 a3) -> (~ asubq a2 a0) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> (forall X24:set, forall X25:set, asubq X25 (asing X24) -> ((X25 = a0) \/ (X25 = asing X24))) -> (~ ain (asing a1) a0) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> (~ (a0 = asing a1)) -> ain a0 (asm (apow a2) (asing a1)) -> (~ (asing a1 = a2)) -> (~ (a1 = apow (asing a1))) -> (~ asubq (asm a3 (asing a1)) a2) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (~ asubq (apow a2) (asing (asing a1))) -> (~ (a2 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (apow a2) (apow a2)) -> (~ ain a3 (asm a3 (asing a1))) -> (~ (a1 = asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (~ (apow (asing a1) = a3)) -> (~ (asing a2 = asm (apow a2) a2)) -> (~ (a3 = asm (apow a2) a2)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> ain a0 (apow (asm a3 (asing a1))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> ain a1 (aun a4 (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> asubq a2 (asm a4 (asing a2)) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq a3 (aun a3 (asing (apow a2))) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal4 a3) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> aal3 a3 -> aal4 (aun a3 (asing (asing a2))) -> aal5 (aun a4 (asing (apow a2))) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex5 (aun a4 (asing (apow a2))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> (asm (apow a2) (asing (asing a1)) = a3).
admit.
Qed.

Theorem conj_AbstrHF_TMctGS21Az7PG9mF2rRXEwdbgBiF8SghUJd: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> ain a1 a3 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (~ ain a0 a0) -> (~ (a1 = a3)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> ain a0 (apow (asing a1)) -> (~ ain a0 (asing a1)) -> ain a0 (asm (apow a2) (asing a1)) -> (~ ain a1 (apow (asing a2))) -> (~ asubq (asing a2) a2) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ asubq (apow a2) (asing a2)) -> (~ ain (apow (asing a1)) a3) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a2 (asm a4 a2) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a0 (aun a3 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq a4 (aun (asing (asing a2)) a4) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal3 (aun (asing a1) (asing a3))) -> aal2 (asm a3 (asing a1)) -> aal5 (aun (asing (asing a2)) a4) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2).
admit.
Qed.

Theorem conj_AbstrHF_TMVnbtrpt1SVm7YmTokUMptG43ivF13Geob: (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> ain a1 (asing a1) -> (~ ain a1 (asing a2)) -> asubq a1 (apow (asing a1)) -> ain a2 (asm (apow a2) (asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ (a2 = asm a3 (asing a1))) -> (~ ain (asing (asing a1)) a3) -> (~ (asing a2 = apow a2)) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain a2 (asm a4 (asing a1)) -> (~ ain a2 (asing a3)) -> (~ ain (asing a2) (aun a1 (asing a3))) -> ain a1 (aun (asing a1) (asing a3)) -> ain a3 (asm a4 (asing a2)) -> ain a3 (asm a4 (asing a1)) -> ain (asing a2) (aun (asing (asing a2)) a4) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a2)) a2 -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ aal3 (aun (asing a1) (asing a3))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (~ aal4 (asm a4 (asing a2))) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal4 (apow a2) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> aex2 (aun (asing a2) (asing (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMNeKifZUYs8PBAENY6w7A6xPq8Vc8yMJcu: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (~ ain a0 a0) -> (~ ain a2 a0) -> (~ ain a0 (asing a1)) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> (~ (a0 = asing (asing a1))) -> asubq a1 (apow (asing a1)) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> (~ ain a2 (asing a1)) -> ain a2 (asm (apow a2) (apow (asing a1))) -> ain a2 (asm (apow a2) (asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> asubq (asm a3 (asing a1)) (apow a2) -> (~ (asing a2 = asm (apow a2) a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> (~ ain (asing a2) a4) -> ain a0 (aun (asing a2) (apow (asing a2))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain a3 (asm a4 (asing a2)) -> ain a3 (asm a4 (apow (asing a2))) -> (~ ain (asing a1) (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain a1 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (asm a3 (asing a2) = a2) -> (asm (apow a2) (asing (asing a1)) = a3) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal5 a4) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal3 (asm (apow a2) (asing a1)) -> aex3 (asm a4 (asing a1)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24).
admit.
Qed.

Theorem conj_AbstrHF_TMUeUagu9qxCgj5k4KkigLJ9nsj5xGTA1Fd: (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> ain a0 a4 -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> (~ asubq a1 (asing a2)) -> (~ (a1 = asing (asing a1))) -> (~ asubq a2 (asm a3 (asing a1))) -> (~ (asing a1 = apow a2)) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain a0 (aun a3 (asing (asing a2))) -> (~ ain (apow (asing a1)) a4) -> ain (asing a2) (aun (asing (asing a2)) a4) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal2 (asing a2)) -> (~ aal4 (asm (apow a2) (asing a2))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> aal2 a2 -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal4 a4 -> aal5 (aun (asing (asing (asing a1))) a4) -> aal5 (aun (asing (apow (asing a1))) a4) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex5 (aun (asing (asing a2)) a4) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMKQ49NdiUTTU3hqgewukr2sDQSaACtNaHf: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> ain a0 a2 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (~ ain a2 a2) -> (~ (a2 = a3)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> (~ asubq a1 (asing a2)) -> (~ ain a2 (asing a1)) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a2) (apow a2)) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (~ ain a3 (asm (apow a2) (asing a1))) -> ain a0 (apow (asing (asing a1))) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> aal4 (apow a2) -> aal4 (aun a3 (asing (asing a2))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex4 a4 -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMXJnnt2ECBj3odwaS6SnoeMDwAh3FkP2F8: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain a1 (asm (apow a2) (apow (asing a2))) -> ain (asing a1) (asm (apow a2) (asing a2)) -> ain a2 (asm a3 (asing a1)) -> (~ ain (asing a1) (apow (asing a2))) -> (~ (a1 = asing (asing a1))) -> (~ asubq (asing a2) a2) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ (asing a2 = apow a2)) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain a0 (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm (apow a2) (asing (asing a1)) = a3) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> (asm (asm a4 a2) (asing a2) = asing a3) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (~ aal3 (apow (asing a1))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (~ aal3 (asm a3 (asing a1))) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> aal2 (asm a4 a2) -> aal3 a3 -> aal5 (aun (asing (apow (asing a1))) a4) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (aun (asing a2) (asing (asing a2))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> aal5 (aun (apow a2) (asing (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMSdfUwVQc95NoyMTZueQ4Q7UKRWgRdY2N8: (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> ain a1 a2 -> ain a0 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (~ ain a2 a1) -> asubq a1 a2 -> (~ (a1 = a3)) -> ain a1 (asm (apow a2) (apow (asing a1))) -> ain (asing a1) (apow (asing a1)) -> (~ ain a3 (asing a1)) -> (~ ain (asing a2) a2) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> ain a0 (asm a4 (asing a2)) -> (~ ain (asm a3 (asing a1)) a4) -> (~ ain (asm (apow a2) a2) a4) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain a3 (asm a4 a2) -> ain a3 (asm a4 (apow (asing a2))) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain a0 (aun a1 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (~ aal2 (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (aun a1 (asing (apow a2))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex3 (asm a4 (asing a0)) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))).
admit.
Qed.

Theorem conj_AbstrHF_TMPc9b1zx2hgyN61UmcDwFTvw4H4rwvzFoe: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (~ (a0 = a2)) -> ain a1 (asm (apow a2) (apow (asing a1))) -> (~ ain a1 (asing a2)) -> asubq a1 (apow (asing a1)) -> (~ ain a1 (asing (asing a1))) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ (asing a1 = asing a2)) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ ain a3 (apow a2)) -> asubq (asm a3 (asing a1)) (apow a2) -> (~ (asing a2 = asm (apow a2) a2)) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> (~ ain a2 (asing a3)) -> (~ ain (asing a2) (asing a3)) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain a2 (aun (asing (asing a2)) a4) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain (apow a2) (asing (apow a2)) -> ain a0 (aun a1 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (~ aal2 (asing (apow a2))) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 (apow (asing a2))) -> (~ aal3 (aun a1 (asing a3))) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal3 (asm (apow a2) (asing a2)) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex3 (asm (apow a2) (asing a1)) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex4 (apow a2) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))).
admit.
Qed.

Theorem conj_AbstrHF_TMSUBUbheE8r8RZgtALD7KhHB34pMQVUob9: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> ain a2 a3 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (~ asubq a4 a3) -> (~ (a0 = a1)) -> (~ ain a0 (asing a2)) -> (~ ain a0 (asing a1)) -> (~ ain (asing a1) a2) -> ain a0 (asm (apow a2) (asing a1)) -> (~ (a0 = asing (asing a1))) -> (~ ain (asing a2) a1) -> (~ (a1 = asing (asing a1))) -> (~ (asing a1 = asing (asing a1))) -> (~ (a2 = asing (asing a1))) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (~ (a3 = asm (apow a2) a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> ain a0 (aun (asing (asing a2)) a4) -> ain a2 (aun (asing (asing a2)) a4) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq a2 (aun a2 (asing (apow a2))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal2 (asm a4 a2) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aal5 (aun (apow a2) (asing (apow a2))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (asm a4 a2) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex5 (aun (asing (asing (asing a1))) a4) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))).
admit.
Qed.

Theorem conj_AbstrHF_TMJKaEgc36c6JEg6BTeZfKufgewQXhf1761: (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (~ ain a2 a2) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> ain a0 (apow (asing a1)) -> (~ ain (asing a1) (asing a1)) -> (~ ain (apow a2) a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> asubq a3 (apow a2) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> ain a1 (aun a3 (asing (asing a2))) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a3 (aun a4 (asing (apow a2))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (asm a2 (asing a0) = asing a1) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> asubq (asm a4 (asing a3)) a3 -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal2 (asing (apow a2))) -> (~ aal4 a3) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> aal3 (asm a4 (asing a2)) -> aex2 (asm a3 (asing a1)) -> aex3 (asm a4 (asing a1)) -> aex4 (apow a2) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex5 (aun (asing (asing a2)) a4) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMYvQQgwpeKEgB4jVdbAdvLd1WqzGXeXciQ: (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (~ (a0 = a3)) -> (~ ain a1 (apow (asing a1))) -> (~ (a0 = asm a3 (asing a1))) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain (asm a3 (asing a1)) a2) -> (~ ain a2 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ (a2 = asing a2)) -> (~ (asing a2 = a3)) -> (~ (a3 = asm (apow a2) a2)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain a0 (apow (apow (asing a1))) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a3 (asing (asing a2))) -> (~ ain (apow a2) (apow (asing a2))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> asubq a3 (aun a3 (asing (apow a2))) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal2 (asing a3)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (~ aal3 (apow (asing a2))) -> (~ aal3 (asm a4 a2)) -> (~ aal4 (asm a4 (asing a1))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> aal3 (asm (apow a2) (asing a2)) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (aun a1 (asing a3)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> aex5 (aun (asing (asing a2)) a4) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMQzV7mGXb6EANARx8jpYKLKbQXj6NYzdZP: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> ain a3 a4 -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (~ ain a1 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ ain a1 (apow (asing a2))) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ (a0 = asing a2)) -> ain a2 (asm (apow a2) (apow (asing a1))) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ asubq (asing a2) a2) -> (~ ain (apow a2) (asing (asing a1))) -> (~ ain (asing a1) a3) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> ain a0 (asm a4 (asing a1)) -> (~ ain a2 (aun a1 (asing a3))) -> ain a3 (aun (asing a1) (asing a3)) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> ain (asing a1) (aun (asing (asing a1)) a4) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (asm a4 (asing a2)) a2) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> asubq a3 (aun a3 (asing (apow a2))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asing a1) (asm a2 (asing a0)) -> (asm a2 (asing a0) = asing a1) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (~ aal2 (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> aex2 (aun a1 (asing (apow a2))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex3 (asm (apow a2) (asing a0)) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex5 (aun (apow a2) (asing (apow a2))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> (~ asubq (aun (asing (asing a2)) a4) a4).
admit.
Qed.

Theorem conj_AbstrHF_TMUxgWDCugPkbCE6Y8eDzaFccZoHQuRuRi8: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> ain a1 a2 -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (~ (a1 = a2)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> ain a1 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) (asm (apow a2) a2) -> (~ ain (asing a2) a1) -> (~ ain a0 (asing (asing a1))) -> (~ asubq (asm (apow a2) a2) a2) -> (~ (asing a1 = asing a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> (~ ain a0 (asm a4 a2)) -> ain a1 (aun (asing (asing a2)) a4) -> ain a0 (aun (asing (asing a2)) a4) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (asm a4 (asing a2)) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq (asm a3 (asing a1)) a4 -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal5 a4) -> aal2 (apow (asing (asing a1))) -> aal4 (aun a3 (asing (asing a2))) -> aal5 (aun (asing (asing a1)) a4) -> aal5 (aun (apow a2) (asing (apow a2))) -> aex2 a2 -> aex2 (apow (asing a1)) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex2 (apow (asing a2)) -> aex2 (asm a3 (asing a2)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex3 (asm (apow a2) (asing a0)) -> aex3 (asm a4 (asing a0)) -> aex3 (asm a4 (asing a3)) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMJQgnQ3xxR4RkjdpsoWxdTfkkVhvwXSgyA: (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> ain a0 a2 -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (~ ain a2 a0) -> (~ asubq a2 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> ain a2 (apow a2) -> (~ ain a0 (asm (apow a2) a2)) -> (~ asubq a2 (asing a2)) -> (~ asubq a2 (asm a3 (asing a1))) -> (~ ain (apow a2) (asing (asing a1))) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ ain (apow a2) (asing a2)) -> (~ asubq a3 (asing a2)) -> asubq (asm a3 (asing a1)) (apow a2) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> ain a2 (aun a3 (asing (asing a2))) -> (~ ain a0 (asing a3)) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> ain a3 (aun (asing (asing a2)) a4) -> ain a0 (aun (asing (asing a2)) a4) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> asubq a4 (aun (asing (asing a2)) a4) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (apow a2) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)).
admit.
Qed.

Theorem conj_AbstrHF_TMVCfzzKCBMVUHjtRyHU4vexmvHCQowCyYm: (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (~ ain a1 a0) -> (~ ain a2 a1) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> ain a1 (aun (asing a1) (asing (asing a1))) -> (~ asubq a1 (asing a1)) -> ain (asing a1) (asm (apow a2) a2) -> (~ (a0 = asm a3 (asing a1))) -> (~ ain (asing a1) (apow (asing a2))) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ (a1 = asing (asing a1))) -> (~ ain (asm a3 (asing a1)) a2) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ ain (apow a2) (asing a2)) -> (~ (a2 = asing a2)) -> (~ (asm a3 (asing a1) = a3)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ (asm (apow a2) a2 = apow a2)) -> ain a0 (apow (apow (asing a1))) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> (~ ain (apow a2) (apow (asing a2))) -> (~ ain a2 (asing a3)) -> (~ ain (asing a2) (aun a1 (asing a3))) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> (~ ain a1 (asing (apow a2))) -> (~ ain (asing a2) (asing (apow a2))) -> ain (apow a2) (asing (apow a2)) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal3 (apow (asing a1))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex2 (asm a3 (asing a2)) -> aex4 (apow a2) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMYhHErjWYZd7QpD3GkRdGuUYULryHSZWbM: (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (~ ain (asing a1) a0) -> (~ ain a1 (apow (asing a1))) -> (~ ain (asing a2) a1) -> ain a2 (asm (apow a2) a2) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ (a2 = asing (asing a1))) -> asubq (asing (asing a1)) (apow (asing a1)) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (a1 = apow a2)) -> (~ (apow (asing a1) = a3)) -> (~ ain (asing a2) (asm (apow a2) a2)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> ain a1 (apow (asm a3 (asing a1))) -> (~ ain (asing a1) (asm a4 a2)) -> ain a3 (asm a4 (apow (asing a2))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm a2 (asing a1)) a1 -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal2 (asing a1)) -> (~ aal3 a2) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> aal3 a3 -> aal4 a4 -> aal4 (aun a3 (asing (apow a2))) -> aal5 (aun (apow a2) (asing (apow a2))) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex3 (asm (apow a2) (asing a2)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 a4 -> aex4 (aun a3 (asing (apow a2))) -> aex5 (aun (asing (apow (asing a1))) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (~ ain (asing a2) (asm (apow a2) (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMRcszcJJTeA814irvYbnP4qEQHwsspiuXx: (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ asubq a1 a0) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> (~ ain (asing a1) a0) -> (~ ain a1 (apow (asing a1))) -> ain a2 (apow a2) -> (~ ain a2 (apow (asing a1))) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ asubq (apow a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ ain a3 (apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> (~ (asm (apow a2) a2 = apow a2)) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> (~ ain (apow a2) (apow (asing a2))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> (~ ain (asing a2) (aun a1 (asing a3))) -> (~ ain a0 (asm a4 a2)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain a1 (aun a3 (asing (apow a2))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> asubq a2 (aun a2 (asing (apow a2))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal3 (apow (asing a1))) -> (~ aal3 (apow (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> aal5 (aun a4 (asing (apow a2))) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex3 (asm a4 (asing a2)) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex3 (asm a4 (asing a3)) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (aun a3 (asing (apow a2))) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMPrETM75XDEPzsM5JF3ZiCRxEisX3WQoSJ: (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (~ ain a0 a0) -> (~ (a0 = a1)) -> (~ asubq a1 a0) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> ain a0 (asm (apow a2) (asing a2)) -> asubq a1 (apow (asing a1)) -> (~ ain a0 (asm (apow a2) a2)) -> (~ ain (asing a1) (apow (asing a2))) -> (~ ain a1 (asm (apow a2) a2)) -> (~ (a1 = asing (asing a1))) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ (a2 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> ain a0 (aun (asing a2) (apow (asing a2))) -> (~ ain (asing a2) (asing a3)) -> (~ ain (asing (asing a1)) a4) -> (~ ain (apow a2) a4) -> (~ ain (asing a1) (asm a4 a2)) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> ain a0 (aun a2 (asing (apow a2))) -> ain a0 (aun a3 (asing (apow a2))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> aal3 (asm a4 (asing a1)) -> aal4 (aun a3 (asing (asing a2))) -> aal4 a4 -> aal5 (aun a4 (asing (apow a2))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (asm a4 a2) -> aex2 (aun (asing a3) (asing (apow a2))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMJaMmS2aBwHX4AzDnTuc5NcnFyCWHfJAvW: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (~ ain a0 a0) -> ain a1 (apow a2) -> (~ (a0 = asing a1)) -> (~ ain (asing a1) a1) -> (~ ain a2 (asing a1)) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ (a2 = apow a2)) -> (~ (a0 = apow a2)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> asubq a3 (apow a2) -> ain a1 (apow (apow (asing a1))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> ain a1 (apow (asm a3 (asing a1))) -> ain a3 (asing a3) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain a0 (aun (asing (asing a2)) a4) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> asubq a2 (asm a4 (asing a2)) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (asm a2 (asing a0) = asing a1) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> asubq a2 (asm a3 (asing a2)) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> aal3 (aun a2 (asing (apow a2))) -> aal4 (apow a2) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aex2 (apow (asing a2)) -> aex2 (aun a1 (asing a3)) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aex5 (aun (asing (asing a1)) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> (~ ain a2 (apow (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMacRtx1o7uApJvpJiouatq27vTe8iwT5E4: (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (~ (a1 = asing a2)) -> (~ asubq a2 (asm a3 (asing a1))) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (asing a2 = a3)) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> (~ ain (apow a2) (apow (asing a2))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> ain a0 (aun a1 (asing a3)) -> (~ ain (asing a1) (asm a4 a2)) -> (~ ain a3 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq a3 (aun a3 (asing (apow a2))) -> asubq a4 (aun (asing (asing a2)) a4) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (asm a3 (asing a2) = a2) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (~ aal3 a2) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal5 (apow a2)) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex3 (aun a2 (asing (apow a2))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMFvCHVgrQ974Vb6svwS6m2qcAiKYZg1Gcn: (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 (asm X24 (asing X25)) -> aal5 X24) -> asubq a3 a4 -> (~ asubq a4 a3) -> (~ (a0 = a2)) -> ain a0 (asm (apow a2) (asing a2)) -> ain a1 (apow a2) -> (~ (a0 = asm a3 (asing a1))) -> (~ ain (asing (asing a1)) a2) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ (a2 = asing (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (~ ain (asing a1) a3) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (apow a2) (asing a2)) -> (~ ain (asing a2) (asm a3 (asing a1))) -> (~ (asing a2 = asm a3 (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> (~ ain (asing a1) (asm a4 a2)) -> ain a2 (asm a4 (apow (asing a2))) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain a0 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (asm a3 (asing a2) = a2) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (~ aal5 a4) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> aal2 (asm (apow a2) a2) -> aal4 a4 -> aex2 (aun a1 (asing a3)) -> aex2 (asm a4 a2) -> aex3 (asm (apow a2) (asing a1)) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun a4 (asing (apow a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25).
admit.
Qed.

Theorem conj_AbstrHF_TMUhJdFqYo1noPyMNkeNtP8BMC2xVvzqDaz: (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (~ ain (asing a1) a0) -> ain a1 (asing a1) -> ain a0 (apow (asing a1)) -> (~ (a1 = asing a1)) -> ain (asing a1) (asm (apow a2) a2) -> ain a1 (asm (apow a2) (asing a2)) -> (~ ain (asing a2) a1) -> (~ (asing a1 = asing a2)) -> asubq (asing (asing a1)) (apow (asing a1)) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ ain a3 (asing a2)) -> (~ (a1 = apow a2)) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> (~ ain a2 (asing a3)) -> (~ ain (asm (apow a2) a2) a4) -> (~ ain (asing a1) (asm a4 a2)) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain (apow a2) (asing (apow a2)) -> ain a0 (aun a1 (asing (apow a2))) -> ain a2 (aun a3 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> (asm a2 (asing a0) = asing a1) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq a2 (apow (asm a3 (asing a1))) -> (~ aal2 (asing a2)) -> (~ aal3 (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aal3 (asm (apow a2) (apow (asing a2))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aex2 (asm (apow a2) a2) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex3 (asm a4 (asing a2)) -> aex3 (asm a4 (asing a1)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex5 (aun (asing (asing a1)) a4) -> aex5 (aun (asing (asing a2)) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))).
admit.
Qed.

Theorem conj_AbstrHF_TMLvpiwTKkfLxXUUitUdzgB7ysAdoCU8QcH: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> asubq a1 a2 -> ain a0 (apow (asing a1)) -> ain (asing a1) (apow a2) -> (~ (a0 = asing a1)) -> ain a0 (asm (apow a2) (asing a1)) -> (~ (asing a1 = a2)) -> (~ ain a2 (asing a1)) -> (~ ain a0 (asm (apow a2) a2)) -> ain a0 (apow (asing a2)) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ (asing (asing a1) = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asing a2) (asm a3 (asing a1))) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ ain a1 (asing (apow (asing a1)))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a0 (aun a3 (asing (apow a2))) -> ain a1 (aun a3 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (asm a4 (asing a2)) a2) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing a1)) a4) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal3 (aun a1 (asing a3))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (~ aal4 (asm a4 (asing a2))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal2 (apow (asing (asing a1))) -> aal3 (asm a4 (asing a1)) -> aex2 a2 -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMLs9xDW6zN5MEZ8EX46meQXw1QNqtytCUP: (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> ain a1 a2 -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (~ ain a2 a2) -> (~ asubq a4 a3) -> (~ (a2 = a3)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> ain a2 (asing a2) -> (~ ain (asing a1) a2) -> (~ (a0 = asing (asing a1))) -> (~ ain a2 (apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ (a2 = asm (apow a2) a2)) -> (~ ain a3 (asm a3 (asing a1))) -> (~ ain (asm (apow a2) a2) a3) -> (~ ain (asing a2) (asm (apow a2) a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> (~ ain (asing a2) a4) -> ain a0 (aun a3 (asing (asing a2))) -> ain a1 (aun (asing a1) (asing a3)) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain (asing a1) (asing (apow a2))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (asing a1) (asm a2 (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> (asm (apow a2) (asing (asing a1)) = a3) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm a4 (asing a3) = a3) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal2 (asing a2)) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal3 (asm a4 a2)) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal4 (aun a3 (asing (asing a2))) -> aal4 (aun a3 (asing (apow a2))) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 (asm a3 (asing a1)) -> aex3 (asm (apow a2) (asing a2)) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMJLD9yPrCfbyrZSLmRjL2gkVBqT482ynNi: (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> ain a1 a4 -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (~ ain a2 a0) -> (~ asubq a2 a1) -> (~ ain a0 (asing a2)) -> ain a1 (asm (apow a2) (apow (asing a1))) -> (~ (a0 = apow (asing a1))) -> (~ (a0 = asm (apow a2) a2)) -> (~ ain a0 (asing (asing a1))) -> (~ ain a3 (asing a1)) -> (~ (asing a1 = asing (asing a1))) -> (~ ain (asing a1) a3) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ ain (apow a2) a3) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain a3 (asing (asing a2))) -> (~ ain (asing a2) a4) -> ain a3 (asing a3) -> ain a1 (asm a4 (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a3 (aun a3 (asing (apow a2))) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal4 (asm (apow a2) (asing a2))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> (~ aal6 (aun a4 (asing (apow a2)))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aex2 a2 -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex5 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMT5SJErDgH6dY7nTc99XNpqFCymnnZYMQN: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (~ ain a1 a1) -> (~ ain a2 a1) -> (~ ain (asing a1) (asing a2)) -> (~ ain (asing a2) a2) -> (~ ain (asm a3 (asing a1)) a2) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (~ asubq (apow a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> (~ (a3 = asm (apow a2) a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain a1 (apow (apow (asing a1))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> (~ ain (asing a1) a4) -> (~ ain (asing a2) a4) -> ain a1 (aun a3 (asing (asing a2))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain a3 (aun a1 (asing a3)) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> asubq a3 (aun a3 (asing (apow a2))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> (asm a2 (asing a1) = a1) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> (asm (asm a4 a2) (asing a3) = asing a2) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> asubq (asm a3 (asing a1)) a4 -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 a4) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal3 (asm (apow a2) (apow (asing a2))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex2 (asm (apow a2) a2) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex4 a4 -> aex4 (aun a3 (asing (apow a2))) -> aex5 (aun (apow a2) (asing (apow a2))) -> aex5 (aun a4 (asing (apow a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)).
admit.
Qed.

Theorem conj_AbstrHF_TMNJGBcmK8KmcpjhzqLaU5BTweKtAsS439S: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> ain a0 a3 -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> asubq (asing a0) a1 -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a2 a1) -> asubq a1 a2 -> (~ (a1 = a3)) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> ain a1 (apow a2) -> ain (asing a1) (asm (apow a2) (asing a2)) -> ain a2 (asm (apow a2) (asing a1)) -> (~ ain a3 (asing a1)) -> (~ (asing (asing a1) = apow (asing a1))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ ain a1 (asing (apow (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> (~ ain a2 (aun a1 (asing a3))) -> ain a1 (aun (asing a1) (asing a3)) -> (~ ain (apow (asing a1)) a4) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> (~ ain (asing a2) (asing (apow a2))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> (asm (apow a2) (asing (asing a1)) = a3) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal2 (asing (apow a2))) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal3 (apow (asing a2))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aal3 (asm (apow a2) (asing a2)) -> aal4 (apow a2) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 (asm a4 (asing a2)) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))).
admit.
Qed.

Theorem conj_AbstrHF_TMXmThPPa2NzBnqfjbgTDK9SU7ngJS5UQym: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> ain a1 (asing a1) -> ain a0 (asm (apow a2) (asing a2)) -> (~ ain (asing a1) a2) -> (~ (a0 = asing a2)) -> (~ asubq a2 (asing a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (apow a2) (apow a2)) -> (~ ain a3 (asing a2)) -> (~ (a2 = apow a2)) -> (~ ain (asing a2) a3) -> (~ ain (asing a2) (asm a3 (asing a1))) -> (~ (asing a2 = a3)) -> (~ (asm a3 (asing a1) = apow a2)) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> ain a3 (aun (asing a1) (asing a3)) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain a0 (aun a3 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> ain a1 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal4 (asm (apow a2) (asing a2))) -> (~ aal4 (asm a4 (asing a2))) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> aal2 a2 -> aal2 (asm a3 (asing a1)) -> aex2 (asm (apow a2) a2) -> aex2 (aun a1 (asing (apow a2))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex3 (asm a4 (asing a2)) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex4 a4 -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a0 (aun a2 (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMKG2m83bgMV8RWzw86kVhvDjGMzr5mtsq1: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> ain a1 a3 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (~ (a0 = a2)) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ ain a0 (asing a1)) -> asubq (asing a1) a2 -> ain a0 (asm (apow a2) (asing a1)) -> (~ ain a2 (asing a1)) -> (~ ain a2 (apow (asing a1))) -> (~ ain a0 (asm (apow a2) a2)) -> (~ (a1 = asing a2)) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ asubq (asm (apow a2) a2) a2) -> (~ ain (asing a2) (asing (asing a1))) -> (~ (asing a1 = a3)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (apow a2) (asing a2)) -> (~ ain (asing a2) a3) -> (~ ain (asing a2) (asm a3 (asing a1))) -> (~ ain (asm (apow a2) a2) a3) -> asubq a3 (apow a2) -> (~ (a3 = asm (apow a2) a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ (a3 = apow a2)) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> (~ ain (asing a2) a4) -> ain a1 (aun a3 (asing (asing a2))) -> ain a0 (apow (asm a3 (asing a1))) -> (~ ain (asm a3 (asing a1)) a4) -> (~ ain (apow a2) a4) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain a2 (aun a3 (asing (apow a2))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq a3 (aun a3 (asing (apow a2))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> asubq a2 (asm a3 (asing a2)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (asm (asm a4 a2) (asing a3) = asing a2) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal3 (asm a3 (asing a1))) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal5 (apow a2)) -> (~ aal5 a4) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aex2 (asm a3 (asing a1)) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMTr2JDXRQ57CE9BMMfxVEhoQ5S9JCpFwMk: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> ain a0 a1 -> ain a1 a2 -> ain a3 a4 -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (~ (a1 = a2)) -> ain a2 (asing a2) -> ain a0 (asm a3 (asing a1)) -> ain a1 (asm (apow a2) (apow (asing a1))) -> (~ asubq a1 (asing a2)) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) a2) -> (~ ain (asing a2) (asing (asing a1))) -> (~ (a2 = asm a3 (asing a1))) -> (~ ain a3 (asing a2)) -> (~ (a2 = apow a2)) -> (~ asubq a3 (asing a2)) -> (~ ain (apow (asing a1)) a3) -> (~ (asing a2 = asm a3 (asing a1))) -> (~ (asing a2 = a3)) -> (~ (asing a2 = asm (apow a2) a2)) -> ain a0 (apow (apow (asing a1))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> (~ ain (apow (asing a1)) a4) -> ain a3 (asm a4 (asing a2)) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (asing a1) (asm a2 (asing a0)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> aex2 (apow (asing a1)) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex3 (asm (apow a2) (asing a2)) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> aex5 (aun a4 (asing (apow a2))) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMT9ecgysxQxnPrMdYXpU9nnXRDEHYYUnxh: ain a2 a3 -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> asubq a1 a2 -> (~ (a0 = a1)) -> (~ (a2 = a3)) -> (~ ain a0 (asm (apow a2) a2)) -> (~ ain (asm a3 (asing a1)) a2) -> (~ ain a2 (asing (asing a1))) -> (~ ain (apow a2) (asing (asing a1))) -> (~ ain (asing a1) a3) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (~ ain a3 (asing a2)) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ asubq (apow a2) (asing a2)) -> (~ ain (asing a2) (asm (apow a2) a2)) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a0 (aun (asing a2) (apow (asing a2))) -> (~ ain a2 (aun a1 (asing a3))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> asubq a1 (asm a2 (asing a1)) -> (asm a3 (asing a2) = a2) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aex2 (apow (asing a1)) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex5 (aun (asing (asing a1)) a4) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMcFVbtB6Q1N3Rma1RDhfXnR3vNYckyRfz2: ain a0 a4 -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (~ ain a1 a1) -> (~ asubq a2 a1) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> ain a0 (apow a2) -> ain (asing a1) (apow a2) -> (~ ain a0 (asm (apow a2) a2)) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ ain (apow a2) (asing a2)) -> (~ ain (apow (asing a1)) a3) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain a0 (apow (asing (asing a1))) -> ain a0 (apow (apow (asing a1))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> (~ ain a1 (asing a3)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (asm a3 (asing a2) = a2) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (~ aal4 a3) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> aal3 (asm (apow a2) (asing a2)) -> aal4 a4 -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aal5 (aun (asing (asing a1)) a4) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (asm a3 (asing a2)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex4 a4 -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24).
admit.
Qed.

Theorem conj_AbstrHF_TMLBtQC2Rw2nwumv9MQ1CSpB2Nnn2pe5r8A: (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (~ asubq a4 a3) -> (~ asubq a1 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> (~ ain a1 (asing a2)) -> (~ ain a1 (asm (apow a2) a2)) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ (asing a1 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> (~ asubq (apow a2) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> asubq a3 (apow a2) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> (~ ain a1 (asing (apow (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a2 (asm a4 (asing a1)) -> ain a0 (aun a3 (asing (asing a2))) -> ain a2 (aun a3 (asing (asing a2))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain a3 (asm a4 (apow (asing a2))) -> ain a3 (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal2 (asing a1)) -> (~ aal3 (asm a4 a2)) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> aal2 (apow (asing (asing a1))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex5 (aun (asing (apow (asing a1))) a4) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3).
admit.
Qed.

Theorem conj_AbstrHF_TMKeKWY4kjkPdGhomjEsn2ynJKEmY4DUNji: (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (~ ain a0 a0) -> ain a1 (aun (asing a1) (asing (asing a1))) -> (~ ain (apow a2) (asing a2)) -> (~ asubq (apow a2) (asing a2)) -> (~ (a3 = asm (apow a2) a2)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun a3 (asing (asing a2))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain a3 (asing a3) -> ain a3 (asm a4 (asing a1)) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain a0 (aun (asing (asing a2)) a4) -> (~ ain (asing a1) (asing (apow a2))) -> ain a1 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> (~ asubq (asm a4 (asing a2)) a2) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq a2 (apow (asm a3 (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal3 a3 -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex5 (aun (asing (apow (asing a1))) a4) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))).
admit.
Qed.

Theorem conj_AbstrHF_TMYoC23fJLhzRzfeY17XDdc9e2YRVdAPyJ5: (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> ain a1 a4 -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (~ ain a3 a2) -> (~ (a0 = a1)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> asubq (asing a1) a2 -> (~ (a0 = asing a1)) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (~ ain a3 (apow a2)) -> (~ ain a3 (asm a3 (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> (~ ain a2 (asing a3)) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> (asm (asm a4 a2) (asing a3) = asing a2) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq (asm a3 (asing a1)) a4 -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (~ aal2 a1) -> (~ aal4 (asm (apow a2) (asing a2))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex5 (aun (apow a2) (asing (apow a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))).
admit.
Qed.

Theorem conj_AbstrHF_TMF3d54fydsPiBwo9DQFnspW7sucroKXnYS: (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> ain a0 a2 -> ain a1 a4 -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (~ asubq a1 (asing a1)) -> (~ (a0 = asing a2)) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ asubq a2 (asm a3 (asing a1))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ (a2 = asm a3 (asing a1))) -> (~ (asm a3 (asing a1) = a3)) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> (~ (asing a2 = apow a2)) -> (~ ain a1 (asing (apow (asing a1)))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> ain a3 (asing a3) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> ain a3 (asm a4 a2) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> (~ ain a0 (asing (apow a2))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> asubq a3 (aun a3 (asing (asing a2))) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> asubq a4 (aun (asing (asing a2)) a4) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm a3 (asing a2)) a2 -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (asm (asm a4 a2) (asing a2) = asing a3) -> asubq a2 (apow (asm a3 (asing a1))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> (~ aal3 (aun a1 (asing a3))) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aal4 (aun a3 (asing (apow a2))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex5 (aun (asing (asing a2)) a4) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ (apow (asing a1) = a3)).
admit.
Qed.

Theorem conj_AbstrHF_TMYXnD5fTjeLeuyagWWHjoQNX2WrzdETiZn: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> asubq a1 a2 -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> ain (asing a1) (asing (asing a1)) -> ain a0 (asm a3 (asing a1)) -> (~ ain (asing a1) (asing a2)) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ asubq (asing a2) a2) -> (~ ain (apow a2) (asing (asing a1))) -> asubq (asing (asing a1)) (apow (asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a3 (apow a2)) -> (~ (a2 = asm a3 (asing a1))) -> (~ ain (asing (asing a1)) a3) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> ain a1 (apow (asm a3 (asing a1))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> ain a3 (aun a1 (asing a3)) -> ain a1 (aun (asing a1) (asing a3)) -> ain a1 (asm a4 (apow (asing a2))) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (asm a2 (asing a0) = asing a1) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (asm a3 (asing a1)) a4 -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal3 (asm a4 a2)) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun (asing (asing a2)) a4) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex3 a3 -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex5 (aun (asing (asing a2)) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> ain (asing a2) (aun (asing (asing a2)) a4).
admit.
Qed.

Theorem conj_AbstrHF_TMSfRE9Qf3xYymSjmKeQp7afGixZD83QDHq: (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> (~ (a0 = asing a1)) -> (~ (a1 = asing a1)) -> (~ (a0 = asing a2)) -> ain a0 (apow (asing a2)) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a2) a2) -> (~ ain (apow a2) a2) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (apow a2) (apow a2)) -> (~ (a2 = asm a3 (asing a1))) -> asubq (asm a3 (asing a1)) (apow a2) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> asubq a3 (apow a2) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a0 (asm a4 (asing a2)) -> ain a3 (asm a4 (asing a2)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> (~ ain a0 (asing (apow a2))) -> (~ ain a3 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal4 (asm (apow a2) (asing a2))) -> (~ aal4 a3) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (~ aal5 a4) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> aal2 (asm a3 (asing a1)) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex3 (asm a4 (asing a1)) -> aex3 (aun a2 (asing (apow a2))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex5 (aun (asing (apow (asing a1))) a4) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)).
admit.
Qed.

Theorem conj_AbstrHF_TMZVoU4eBL7oFTiDVFm56CXgfiBKDekeigJ: (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (~ ain (asing a1) a0) -> ain a0 (apow (asing a1)) -> ain a1 (asm (apow a2) (asing a2)) -> (~ (asing a1 = a2)) -> ain (asing a1) (asm (apow a2) (asing a1)) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ (a1 = asing (asing a1))) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (~ ain (asing a1) a3) -> (~ asubq (apow a2) (asing a2)) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain a1 (apow (apow (asing a1))) -> (~ ain a1 (asing (apow (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> (~ ain (apow a2) (asing (asing a2))) -> (~ ain (asing a2) a4) -> ain a2 (aun (asing a2) (apow (asing a2))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain a0 (aun a3 (asing (apow a2))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a0 (aun a4 (asing (apow a2))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> asubq a4 (aun a4 (asing (apow a2))) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> (asm a3 (asing a2) = a2) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal3 (apow (asing a2))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain a1 a1).
admit.
Qed.

Theorem conj_AbstrHF_TMXPzr1pssysWEJSKyPi8SwN57smgtsA64r: ain a2 a4 -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (~ ain a3 a2) -> asubq a1 a2 -> (~ (a1 = a3)) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> (~ asubq a1 (asing a1)) -> (~ ain (asing a2) a1) -> (~ ain (asing a1) (asing a2)) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ (asing a1 = asing (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ ain a3 (apow a2)) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> (~ ain (asing (asing a1)) a3) -> (~ (a1 = apow a2)) -> (~ (asing (asing a1) = a3)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a1 (asing a3)) -> (~ ain a2 (asing a3)) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain a0 (aun a2 (asing (apow a2))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal2 (asing a2)) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> aal3 (asm (apow a2) (asing a1)) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (asm a3 (asing a1)) -> aex2 (apow (asing a2)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex4 (aun a3 (asing (apow a2))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMWsi9cqmZ8wKqK6USEKA6LtfoDE5KGhzpA: (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> ain a1 a2 -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (~ ain a1 a0) -> (~ ain a2 a1) -> ain (asing a1) (asm (apow a2) a2) -> ain a1 (asm (apow a2) (asing a2)) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> ain a2 (asm (apow a2) (apow (asing a1))) -> (~ ain a0 (asm (apow a2) a2)) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ ain a3 (asing a1)) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ ain (apow a2) (asing (asing a1))) -> (~ (apow (asing a1) = a3)) -> asubq a3 (apow a2) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> (~ ain (apow a2) a4) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> ain a3 (aun (asing (asing a2)) a4) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> ain (apow a2) (aun a1 (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> asubq a2 (aun a2 (asing (apow a2))) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq a4 (aun (asing (asing a2)) a4) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> (~ aal2 (asing a2)) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> aal2 a2 -> aal2 (apow (asing (asing a1))) -> aal3 (asm a4 (asing a2)) -> aal5 (aun (asing (asing a2)) a4) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (apow (asing a2)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (apow a2) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMXX4gQqRwN26FJkKmhAXRtsEF6CDrZXaGd: (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> ain a2 (asing a2) -> (~ asubq a1 (asing a1)) -> (~ (a0 = asm (apow a2) a2)) -> (~ ain a0 (asing (asing a1))) -> ain (asing a1) (apow (asing a1)) -> ain a2 (asm a3 (asing a1)) -> (~ ain a2 (apow (asing a2))) -> (~ ain (apow a2) a2) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asing a2) a3) -> ain a0 (apow (apow (asing a1))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> ain a0 (aun (asing a2) (apow (asing a2))) -> ain a2 (aun a3 (asing (asing a2))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> (~ ain (asm a3 (asing a1)) a4) -> (~ ain (apow a2) a4) -> ain a1 (aun (asing (asing a2)) a4) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> (~ ain (asing a2) (asing (apow a2))) -> ain a1 (aun a2 (asing (apow a2))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq a1 (asm a2 (asing a1)) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal2 (asing a2)) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal4 (asm a4 (asing a2))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal5 (aun (asing (apow (asing a1))) a4) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm (apow a2) (asing a1)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex5 (aun (asing (apow (asing a1))) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> (~ ain a1 (asm a3 (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMTxoZk7vCcx4Zc63vwRZ5C3gCA1tCHKYY9: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> ain a0 a3 -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (~ asubq a2 a1) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> (~ ain a0 (asing a2)) -> ain a0 (asm a3 (asing a1)) -> ain (asing a1) (asm (apow a2) a2) -> (~ (asing a1 = a2)) -> ain (asing a1) (asm (apow a2) (asing a2)) -> ain a2 (asm a3 (asing a1)) -> (~ (a1 = asing a2)) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain (asing (asing a1)) a2) -> (~ ain (apow a2) (asing (asing a1))) -> (~ ain (asing a2) (apow a2)) -> (~ (a2 = apow a2)) -> (~ (a2 = asing a2)) -> (~ asubq a3 (asing a2)) -> (~ ain (asing (asing a1)) a3) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> (~ ain (apow a2) (apow (asing a2))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> (~ ain (asing a2) (asing a3)) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain a0 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> (asm a4 (asing a3) = a3) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (~ aal4 (asm (apow a2) (asing a1))) -> (~ aal5 (apow a2)) -> aal3 (asm (apow a2) (asing a2)) -> aal5 (aun (asing (asing a1)) a4) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))).
admit.
Qed.

Theorem conj_AbstrHF_TMFoRMHKhZUDsvC7f2FQm6sZc68ECJZHnWW: (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> ain a3 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> ain a0 (asm (apow a2) (asing a2)) -> ain a1 (apow a2) -> ain a2 (asm (apow a2) a2) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a2) a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ ain (asing a2) (asm (apow a2) a2)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ (a3 = apow a2)) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> (~ ain a3 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (asm a4 (asing a2)) -> asubq a2 (aun a2 (asing (apow a2))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> (asm (asm a4 a2) (asing a3) = asing a2) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal2 a1) -> (~ aal2 (asing a1)) -> (~ aal3 (apow (asing a2))) -> (~ aal5 a4) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal4 (aun a3 (asing (asing a2))) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm (apow a2) (asing a1)) -> aex3 (asm a4 (asing a2)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex5 (aun (apow a2) (asing (apow a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain a0 (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMZSuzGLegHu58Dqbbkz1GgG7mKHofbfiD5: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (~ (a0 = a1)) -> (~ (a1 = a3)) -> (~ asubq a1 a0) -> ain a0 (asm (apow a2) (asing a2)) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> ain a0 (asm (apow a2) (asing a1)) -> (~ (a0 = asm (apow a2) a2)) -> (~ ain (asing a1) (asing a2)) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ ain a2 (apow (asing a2))) -> (~ (a1 = asm a3 (asing a1))) -> (~ asubq (asing a1) (asing a2)) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ asubq a2 (asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ (a2 = asing a2)) -> (~ (asing a2 = apow a2)) -> ain a1 (apow (apow (asing a1))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a2 (asm a4 (asing a1)) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain (asing a2) (aun (asing (asing a2)) a4) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a3 (aun a4 (asing (apow a2))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal3 (aun a1 (asing a3))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex3 (asm a4 (asing a3)) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMJvCWmRevG8icjVEpBJRtFGkHCJ3d19o2h: (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (~ ain (asing a1) a0) -> ain (asing a1) (asing (asing a1)) -> asubq (asing a1) a2 -> ain a1 (asm (apow a2) (apow (asing a2))) -> ain (asing a1) (apow (asing a1)) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a1 (asm a3 (asing a1))) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ ain (apow (asing a1)) a3) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> ain a1 (apow (asm a3 (asing a1))) -> ain a3 (asm a4 (asing a2)) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain a2 (asm a4 a2) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq a3 (asm a4 (asing a3)) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (~ aal2 (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))).
admit.
Qed.

Theorem conj_AbstrHF_TMPzYTMjxdo9nRwScxEHbEotrJD8JF8ZbKx: (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (~ ain a1 a1) -> (~ asubq a2 a1) -> (~ (a0 = asing a1)) -> ain a1 (asm (apow a2) (asing a2)) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a2 (apow (asing a1))) -> (~ ain a1 (asing (asing a1))) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ ain (asing a1) a3) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> (~ ain a2 (asing a3)) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> ain a1 (aun (asing (asing a2)) a4) -> ain (apow a2) (aun a2 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (asm a3 (asing a2) = a2) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal3 a2) -> (~ aal5 a4) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> aal2 (asm (apow a2) (apow (asing a1))) -> aal2 (asm a4 a2) -> aal4 (aun a3 (asing (apow a2))) -> aex2 (asm a3 (asing a1)) -> aex2 (aun (asing a3) (asing (apow a2))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> aex4 (aun a3 (asing (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMZZ7tqwXzfRD2iuyvAUyWE5c42j61GtpDN: (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (~ ain a0 a0) -> (~ (a1 = a3)) -> ain a0 (apow (asing a1)) -> (~ ain a1 (apow (asing a1))) -> (~ (a0 = apow (asing a1))) -> (~ (a1 = asm a3 (asing a1))) -> (~ ain a3 (asing a1)) -> (~ ain (apow a2) a2) -> (~ ain a2 (asing (asing a1))) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (~ ain (asing a2) a3) -> (~ ain (apow a2) a3) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> (~ ain a3 (apow (asing a2))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain a2 (aun (asing (asing a2)) a4) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain a0 (aun a1 (asing (apow a2))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> (asm (apow a2) (asing (asing a1)) = a3) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq (asm a4 (asing a3)) a3 -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal2 a1) -> (~ aal2 (asing a1)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (~ aal4 (asm (apow a2) (asing a2))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aex3 a3 -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex5 (aun a4 (asing (apow a2))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))).
admit.
Qed.

Theorem conj_AbstrHF_TMHYA29eXqt9rCfcth2hNYiPacBTZSUhG8o: (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (~ (a2 = a3)) -> ain (asing a1) (asing (asing a1)) -> (~ ain a0 (asing a2)) -> ain a1 (apow a2) -> (~ (a1 = asing a1)) -> ain (asing a1) (apow (asing a1)) -> (~ ain a3 (asing a1)) -> (~ asubq (asing a1) (asing a2)) -> (~ asubq (asm a3 (asing a1)) a2) -> (~ asubq (asm (apow a2) a2) a2) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ ain (apow a2) a3) -> (~ (asing (asing a1) = a3)) -> (~ (a3 = asm (apow a2) a2)) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain a3 (asing (asing a2))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> (~ ain (apow a2) (apow (asing a2))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain a2 (aun a3 (asing (asing a2))) -> (~ ain a1 (asing a3)) -> (~ ain (asing a2) (asing a3)) -> ain a3 (asm a4 (asing a1)) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain a1 (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain a0 (aun a2 (asing (apow a2))) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq a1 (asm a2 (asing a1)) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal3 a2) -> (~ aal3 (aun a1 (asing a3))) -> (~ aal4 a3) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 a2 -> aex2 (asm (apow a2) a2) -> aex3 (asm (apow a2) (asing a2)) -> aex3 (asm a4 (asing a2)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex3 (asm a4 (asing a0)) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4).
admit.
Qed.

Theorem conj_AbstrHF_TMU1VRbEKFqJWModknmwXem9QbKHVM5gVip: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (~ (a0 = a3)) -> ain a0 (apow (asing a1)) -> (~ ain a0 (asing a1)) -> (~ ain (asing a2) a1) -> asubq a1 (asm a3 (asing a1)) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ (a2 = asing (asing a1))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a3 (asing a2)) -> (~ ain (apow a2) (asing a2)) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> (~ ain a0 (asing (apow (asing a1)))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asing a1) a4) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> ain a1 (aun a3 (asing (asing a2))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (apow a2) (asing (apow a2)) -> ain a2 (aun a3 (asing (apow a2))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (asm a4 (asing a2)) a2) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm a2 (asing a0)) (asing a1) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> asubq a3 (asm a4 (asing a3)) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal4 (asm (apow a2) (asing a2))) -> aal3 (asm a4 (asing a2)) -> aal4 (aun a3 (asing (asing a2))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 (aun a1 (asing (apow a2))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))).
admit.
Qed.

Theorem conj_AbstrHF_TMNPFsSfu2g1odxJxrzm2dVMuKqK6LWjyNg: (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (~ asubq a2 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (asing a2 = asm a3 (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> (~ (asm a3 (asing a1) = a3)) -> (~ (asm a3 (asing a1) = apow a2)) -> (~ (a3 = apow a2)) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain a1 (apow (apow (asing a1))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> ain a0 (aun a3 (asing (asing a2))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> ain a1 (apow (asm a3 (asing a1))) -> ain (asing a2) (aun (asing (asing a2)) a4) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a0 (aun (asing (asing a2)) a4) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain a0 (aun a2 (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal2 a1) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal3 (aun a1 (asing a3))) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> aex2 a2 -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)).
admit.
Qed.

Theorem conj_AbstrHF_TMTYMwzJUqvsCDYB1wbRLjzB6gcW3BbT9yE: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ (a1 = a2)) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ ain a1 (apow (asing a1))) -> ain a1 (asm (apow a2) (apow (asing a1))) -> (~ (a0 = asm a3 (asing a1))) -> (~ ain (asing a1) (apow (asing a2))) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ (asing a1 = a3)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> (~ ain (asing a2) (asing a3)) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain a1 (aun a3 (asing (apow a2))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq a3 (asm a4 (asing a3)) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal4 (asm (apow a2) (asing a2))) -> (~ aal4 a3) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal3 (asm a4 (asing a1)) -> aal5 (aun (asing (asing (asing a1))) a4) -> aal5 (aun (asing (asing a2)) a4) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex3 (asm (apow a2) (asing a0)) -> aex4 (aun a3 (asing (asing a2))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex4 a4 -> aex3 (asm a4 (asing a3)) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2).
admit.
Qed.

Theorem conj_AbstrHF_TMdbeePMY3oe8SpYaHVratdRqnb9Pq7kyay: (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (~ asubq a2 a1) -> (~ (a1 = a3)) -> (~ (a0 = asing (asing a1))) -> (~ (a0 = apow (asing a1))) -> (~ (a0 = asm a3 (asing a1))) -> (~ (asing a1 = a2)) -> (~ ain (asing a1) (apow (asing a2))) -> (~ asubq (asing a1) (asing (asing a1))) -> asubq (asing (asing a1)) (apow (asing a1)) -> (~ (asing (asing a1) = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ (a2 = asm a3 (asing a1))) -> (~ ain a3 (asing a2)) -> (~ (a2 = apow a2)) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> (~ (a0 = apow a2)) -> (~ (asing (asing a1) = a3)) -> (~ (asm a3 (asing a1) = a3)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain a0 (asing a3)) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a2 (asm a4 (asing a2)) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq a2 (aun a2 (asing (apow a2))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (~ aal3 (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal5 (aun (asing (asing a1)) a4) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex2 (asm (apow a2) a2) -> aex3 (aun a2 (asing (apow a2))) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2).
admit.
Qed.

Theorem conj_AbstrHF_TMFKNdmWFapi2H1tPQnEDPdYHNfcN5PDpvf: (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> ain a0 a2 -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (~ ain a1 a0) -> asubq a1 a2 -> (~ (a0 = a3)) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain a1 (aun (asing a1) (asing (asing a1))) -> asubq a1 (asm a3 (asing a1)) -> (~ ain a0 (asm (apow a2) a2)) -> (~ ain (asing a1) (asing a1)) -> (~ (a1 = apow (asing a1))) -> (~ ain (asing a2) a2) -> (~ asubq (asing a2) a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (~ ain a3 (apow a2)) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> (~ (asm a3 (asing a1) = apow a2)) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> ain a0 (aun (asing a2) (apow (asing a2))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> ain a1 (aun a3 (asing (asing a2))) -> ain a3 (aun a1 (asing a3)) -> ain a3 (asm a4 (asing a1)) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain (apow a2) (asing (apow a2)) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (asm (asm a4 a2) (asing a3) = asing a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal4 a3) -> (~ aal4 (asm (apow a2) (asing a1))) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (~ aal5 (apow a2)) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal3 a3 -> aal3 (asm (apow a2) (apow (asing a2))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> aex4 (apow a2) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex5 (aun (asing (asing (asing a1))) a4) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMQ1MnnwwDgeJMCUKRmqs44YkwyFXRHB6Kv: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> ain a0 a3 -> ain a1 a4 -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ ain a0 (asing a1)) -> ain a1 (apow a2) -> (~ ain a1 (apow (asing a2))) -> ain a2 (apow a2) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ ain a3 (asing a1)) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ asubq (asing a2) a2) -> (~ asubq (asm a3 (asing a1)) a2) -> (~ (asing a1 = apow a2)) -> (~ asubq (apow a2) (asing (asing a1))) -> (~ (asing (asing a1) = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ ain (apow a2) (asing a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ (asing a2 = apow a2)) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> (~ ain a0 (asing a3)) -> ain a3 (aun a1 (asing a3)) -> ain a3 (aun (asing a1) (asing a3)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain a1 (aun a3 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (asm a4 (asing a2)) a2) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> (asm a3 (asing a2) = a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (asm a4 (asing a3)) a3 -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal3 (apow (asing a2))) -> (~ aal3 (asm a4 a2)) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex5 (aun (asing (apow (asing a1))) a4) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> asubq (asm a3 (asing a1)) a4.
admit.
Qed.

Theorem conj_AbstrHF_TMX2SULF7HBSFoAYgQmV32fazExxEPko64X: ain a1 a3 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (~ ain a3 a3) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> ain a0 (apow a2) -> (~ asubq a1 (asing a1)) -> (~ ain (asing a1) a2) -> (~ ain (asing a1) a1) -> (~ (a0 = asing (asing a1))) -> (~ ain a0 (asing (asing a1))) -> asubq a1 (asm a3 (asing a1)) -> (~ asubq (apow a2) (asing (asing a1))) -> (~ (asing (asing a1) = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> asubq (asm a3 (asing a1)) (apow a2) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain a3 (asing (asing a2))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain a1 (aun a3 (asing (asing a2))) -> ain a0 (apow (asm a3 (asing a1))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> ain a2 (asm a4 (apow (asing a2))) -> ain (asing a2) (aun (asing (asing a2)) a4) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a2 (asm a4 (asing a2)) -> asubq a3 (aun a3 (asing (apow a2))) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (asm a2 (asing a0)) (asing a1) -> (asm a3 (asing a2) = a2) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> asubq a2 (apow (asm a3 (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal2 (asing a3)) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex3 (asm (apow a2) (asing a0)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> aal5 (aun (asing (asing a2)) a4).
admit.
Qed.

Theorem conj_AbstrHF_TMQmg4YkzJWeRBkuYz2phLDDqqTUSWkLE7y: (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> ain a0 a2 -> ain a0 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> ain a1 (apow a2) -> ain a0 (apow (asing a2)) -> (~ ain (apow a2) a2) -> (~ asubq (asm (apow a2) a2) a2) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ (a2 = asm (apow a2) a2)) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (~ asubq a3 (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ (asing (asing a1) = a3)) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a0 (aun (asing a2) (apow (asing a2))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> (~ ain (asing a2) (asing a3)) -> ain a0 (aun a1 (asing a3)) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> (~ ain a1 (asing (apow a2))) -> ain a0 (aun a3 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> (asm a2 (asing a1) = a1) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> (asm a4 (asing a3) = a3) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal3 (aun a1 (asing a3))) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (apow a2)) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (~ aal5 a4) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex3 (aun a2 (asing (apow a2))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ (a2 = a3)).
admit.
Qed.

Theorem conj_AbstrHF_TMXUsaeHjGJursPKHXiSzF4g6LmjuiydLQM: (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a1 a1) -> (~ ain a3 a2) -> ain (asing a1) (apow a2) -> (~ (a0 = asm (apow a2) a2)) -> (~ ain (asing a1) (asing a2)) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ (asing a1 = asing a2)) -> (~ (asing a1 = asm a3 (asing a1))) -> (~ (asing a1 = apow a2)) -> (~ (asing a1 = asing (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ (asing a2 = apow a2)) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain a3 (asm a4 (asing a2)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (apow a2) (asing (apow a2)) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing a2)) a4) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asm a2 (asing a1)) a1 -> asubq a2 (asm a3 (asing a2)) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (~ aal2 (asing a2)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> aal4 a4 -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex3 (asm a4 (asing a2)) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun a3 (asing (asing a2))) -> aex4 a4 -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> asubq a2 (aun (asing a1) (apow (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMLDsWHYRtA2jwaU3YjvuRZBwdZR4sYxFew: (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (~ asubq a3 a2) -> (~ (a1 = a2)) -> (~ (a1 = a3)) -> ain a1 (asm (apow a2) (apow (asing a1))) -> ain a2 (asm a3 (asing a1)) -> (~ ain (asing a1) (apow (asing a2))) -> (~ ain (asing a2) a2) -> (~ (asing a1 = asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> (~ (asing a2 = apow a2)) -> ain a0 (apow (asing (asing a1))) -> (~ ain a0 (asing (apow (asing a1)))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asing a2) a4) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> (~ ain a0 (asing a3)) -> ain a3 (asing a3) -> (~ ain a2 (aun a1 (asing a3))) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> (~ ain a3 (asing (apow a2))) -> ain a1 (aun a2 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> asubq a3 (aun a3 (asing (apow a2))) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> asubq a4 (aun a4 (asing (apow a2))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal3 (asm (apow a2) (asing a1)) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aal5 (aun (asing (asing a1)) a4) -> aal5 (aun (asing (apow (asing a1))) a4) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm (apow a2) (asing a0)) -> aex5 (aun (asing (asing a1)) a4) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMZVXj5kwyMtxL3VhHRN8icXKApKG6eUpWt: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> ain a1 a3 -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (~ ain a1 a1) -> (~ ain a2 a1) -> asubq a1 a2 -> (~ asubq a3 a2) -> (forall X24:set, forall X25:set, asubq X25 (asing X24) -> ((X25 = a0) \/ (X25 = asing X24))) -> (~ ain a1 (asing a2)) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> ain a2 (apow a2) -> (~ ain a0 (asm (apow a2) a2)) -> (~ asubq (asing a1) (asing a2)) -> (~ (asing a1 = apow a2)) -> asubq (asing (asing a1)) (apow (asing a1)) -> (~ asubq (apow a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ ain a3 (asm a3 (asing a1))) -> (~ (apow (asing a1) = a3)) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> ain a2 (aun (asing a2) (apow (asing a2))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain a1 (apow (asm a3 (asing a1))) -> ain a0 (aun a1 (asing a3)) -> ain a3 (aun (asing a1) (asing a3)) -> (~ ain (asm (apow a2) a2) a4) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain a0 (aun a1 (asing (apow a2))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain a0 (aun a4 (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> asubq a1 (asm a2 (asing a1)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal2 (asing a3)) -> (~ aal2 (asing (apow a2))) -> (~ aal3 (aun a1 (asing a3))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> aal2 (asm (apow a2) a2) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> ain a0 (asm (apow a2) (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMVWyf6LjPoKBKqEj9k6W6cDb21qZZRsLKe: (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> ain a1 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> asubq a3 a4 -> (~ (a0 = a1)) -> (~ asubq a1 (asing a1)) -> (~ asubq a2 (asing a2)) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (~ (a2 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (a2 = asm a3 (asing a1))) -> (~ ain (asm (apow a2) a2) a3) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> ain a1 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> (asm (asm a4 a2) (asing a3) = asing a2) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq (asm a4 (asing a3)) a3 -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (~ aal5 a4) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex3 (aun a2 (asing (apow a2))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex5 (aun a4 (asing (apow a2))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25).
admit.
Qed.

Theorem conj_AbstrHF_TMRZGrkkc43pzbwXRnQwevXLwuEow8emepm: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ ain a1 a0) -> (~ ain (asing a1) a0) -> ain a1 (asm (apow a2) (apow (asing a1))) -> (~ ain (asing a1) a2) -> (~ ain (asing a1) a1) -> (~ ain (asing a1) (apow (asing a2))) -> (~ ain (asing a1) a3) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> ain a0 (apow (asing (asing a1))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> ain a2 (asm a4 (asing a1)) -> (~ ain a1 (asing a3)) -> ain a3 (asm a4 (asing a2)) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> (~ ain (asing a1) (asm a4 a2)) -> ain a1 (asm a4 (apow (asing a2))) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain a3 (aun (asing (asing a2)) a4) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> (asm (asm a4 a2) (asing a2) = asing a3) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal4 a3) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> aal3 (asm (apow a2) (asing a2)) -> aal3 a3 -> aal3 (asm (apow a2) (apow (asing a2))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aex2 (asm a3 (asing a1)) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> (~ (a1 = apow a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMM4B6mA9tYVtDZMfafij1bDaTRA2FAaNAV: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> ain a0 a3 -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> asubq a1 (asing a0) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (~ ain a2 (apow (asing a1))) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ ain a2 (asing (asing a1))) -> asubq (asing (asing a1)) (apow (asing a1)) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a2) (apow a2)) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ (a2 = apow a2)) -> (~ ain (asing (asing a1)) a3) -> (~ (asm (apow a2) a2 = apow a2)) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (apow (asm a3 (asing a1))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq a1 (asm a2 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a0)) (asm (apow a2) a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal2 (asing (asing a1))) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 (aun a1 (asing a3))) -> (~ aal3 (aun (asing a1) (asing a3))) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> aal2 (apow (asing (asing a1))) -> aal3 (asm a4 (asing a1)) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMVn47YpfpzV9gtADSYDbradHahyjpraNFi: (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> asubq a2 a3 -> asubq a3 a4 -> (~ (a0 = a1)) -> (~ (asing a1 = apow a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a3 (asing a2)) -> (~ ain (apow a2) (asing a2)) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (~ (asing a2 = asm a3 (asing a1))) -> (~ (asm a3 (asing a1) = apow a2)) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> (~ ain a1 (asing (apow (asing a1)))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a0 (asm a4 (asing a1)) -> ain a2 (asm a4 (apow (asing a2))) -> ain a3 (asm a4 (apow (asing a2))) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> (asm a3 (asing a2) = a2) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> (asm (asm a4 a2) (asing a2) = asing a3) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal3 (asm (apow a2) (asing a1)) -> aal4 (apow a2) -> aal4 a4 -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aal5 (aun (apow a2) (asing (apow a2))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMddp1noRVXy6FqBdphimGDjTfSbNLhcPp2: (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (~ asubq a3 a2) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ ain (asing a1) a0) -> ain a0 (asm a3 (asing a1)) -> ain (asing a1) (apow a2) -> (~ ain (asing a1) (asing a2)) -> ain a2 (asm a3 (asing a1)) -> (~ asubq a2 (asing a1)) -> (~ ain (asing a1) (asing a1)) -> (~ asubq (asm (apow a2) a2) a2) -> (~ asubq (apow a2) (asing (asing a1))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ (a1 = asm (apow a2) a2)) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain a0 (apow (apow (asing a1))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain a1 (asing a3)) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (asm a4 (asing a2)) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> (asm a2 (asing a0) = asing a1) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> (asm (asm a4 a2) (asing a3) = asing a2) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal4 (asm (apow a2) (asing a2))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex5 (aun (asing (asing a1)) a4) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> (~ ain (asing a2) (asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMX8pdWBnZ4rHwkux2cJ1RDbahuyygVyHit: (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (~ ain a0 a0) -> (~ (a0 = a1)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (forall X24:set, forall X25:set, asubq X25 (asing X24) -> ((X25 = a0) \/ (X25 = asing X24))) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> ain a0 (apow a2) -> (~ (a0 = asing (asing a1))) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ (a2 = asing a2)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> (~ asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) a2)) -> ain a0 (apow (apow (asing a1))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> (~ ain a0 (asm a4 a2)) -> ain a2 (asm a4 a2) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> asubq (asing a1) (asm a2 (asing a0)) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> (~ aal3 (apow (asing a1))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (~ aal4 (asm a4 (asing a1))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> aal4 (apow a2) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMViZw567XBkgMHejGXJENkqqmoA87ZLuJH: (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ ain (asing a1) a0) -> ain a0 (apow (asing a1)) -> (~ ain a1 (apow (asing a1))) -> (~ ain a0 (asing (asing a1))) -> ain a2 (asm (apow a2) (apow (asing a1))) -> (~ asubq (asm (apow a2) a2) a2) -> (~ (asing a1 = asm (apow a2) a2)) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ ain a3 (apow a2)) -> (~ (asing (asing a1) = a3)) -> (~ (asm a3 (asing a1) = a3)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun a3 (asing (asing a2))) -> ain a2 (aun a3 (asing (asing a2))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> (~ ain (asing (asing a1)) a4) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain a1 (asm a4 (apow (asing a2))) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq a3 (aun a3 (asing (apow a2))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq a1 (asm a2 (asing a1)) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal4 (asm a4 (asing a2))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aal2 (asm (apow a2) (apow (asing a1))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal3 (asm a4 (asing a1)) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMZsB14diYFjGZk13c45onW6rgWpMuT5kwd: (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> ain a0 (asm (apow a2) (asing a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ (asing a1 = asm a3 (asing a1))) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ ain a3 (asing a2)) -> (~ ain (apow a2) (asing a2)) -> (~ (a1 = asm (apow a2) a2)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> (~ ain a1 (asing (apow (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> ain a3 (asm a4 (asing a1)) -> ain a3 (asm a4 (apow (asing a2))) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (asm a2 (asing a0) = asing a1) -> asubq (asm a3 (asing a2)) a2 -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> (asm (asm a4 a2) (asing a3) = asing a2) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal4 (asm a4 (asing a2))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> aal3 (asm (apow a2) (asing a1)) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex5 (aun (apow a2) (asing (apow a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> ain a0 a3.
admit.
Qed.

Theorem conj_AbstrHF_TMSwxCf9N1yJd4z9TjQYY9AcQFJebUrMnYR: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (~ (a0 = a3)) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> ain a0 (asm (apow a2) (asing a2)) -> ain a0 (apow (asing a2)) -> (~ ain (asing a1) (apow (asing a2))) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a2) (apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ (a2 = apow a2)) -> (~ (asing a2 = asm a3 (asing a1))) -> asubq a3 (apow a2) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ (a3 = apow a2)) -> (~ (asm (apow a2) a2 = apow a2)) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a0 (apow (asm a3 (asing a1))) -> ain a3 (aun a1 (asing a3)) -> ain a3 (aun (asing a1) (asing a3)) -> ain a3 (asm a4 (asing a1)) -> ain a0 (aun a2 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq a4 (aun (asing (asing a1)) a4) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asm a2 (asing a0)) (asing a1) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (asm a4 (asing a3)) a3 -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (~ aal4 (asm a4 (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (apow a2)) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> aal2 (asm a3 (asing a1)) -> aal2 (asm (apow a2) a2) -> aal3 (asm a4 (asing a1)) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 a2 -> aex3 (aun (asing a2) (apow (asing a2))) -> aex3 (asm a4 (asing a1)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMVAEffKxUwMu9DkBtWMuu6bF2d14Ad9Vme: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> ain a2 a4 -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> ain a1 (asing a1) -> (~ (a0 = asm (apow a2) a2)) -> (~ ain a0 (asing (asing a1))) -> (~ (a1 = asing (asing a1))) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (~ (asing a1 = asing (asing a1))) -> (~ (a2 = apow a2)) -> (~ ain (apow a2) (asing a2)) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> (~ ain (asing (asing a1)) a4) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (asm a4 (asing a2)) a2) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal3 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal2 a2 -> aal3 (asm (apow a2) (asing a2)) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal3 (asm a4 (asing a2)) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm a4 (asing a2)) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ asubq (asm a3 (asing a1)) (asing a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMNcpo8vBQhmYesWJQPGg85zhgJacJvFWdT: (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> asubq a3 a4 -> (~ (a0 = asing (asing a1))) -> ain a1 (asm (apow a2) (asing a2)) -> (~ (asing a1 = a2)) -> asubq a1 (asm a3 (asing a1)) -> (~ ain (asing a1) (asing a1)) -> (~ ain (asing a1) (apow (asing a2))) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ (a2 = apow (asing a1))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ (a2 = apow a2)) -> (~ (a1 = asm (apow a2) a2)) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> (~ ain a1 (asing (apow (asing a1)))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> ain a0 (aun a3 (asing (asing a2))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq a2 (asm a3 (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal3 (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (~ aal4 (asm a4 (asing a1))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal2 (asm a4 a2) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal5 (aun (asing (asing a1)) a4) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex5 (aun (apow a2) (asing (asing a2))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> (~ aal4 (asm a4 (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMQarKJVAbZMjNLYPgv2Y52QJR1K1CYcDBz: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> ain a1 a3 -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (~ ain a2 a1) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ ain (asing a1) a1) -> ain a2 (asm a3 (asing a1)) -> ain a2 (apow a2) -> (~ ain (asing (asing a1)) a2) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> (~ ain a1 (asing a3)) -> ain a1 (asm a4 (asing a2)) -> (~ ain (asing (asing a1)) a4) -> (~ ain a0 (asm a4 a2)) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> (~ ain a0 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> ain a0 (aun a4 (asing (apow a2))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex3 (asm a4 (asing a3)) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex5 (aun a4 (asing (apow a2))) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> asubq a3 (aun a3 (asing (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMZHQkeK62DAEwxazTVXr4jF9c61QufRob7: (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> ain a0 (asm a3 (asing a1)) -> ain a2 (asm (apow a2) a2) -> (~ (asing a1 = asing a2)) -> (~ ain (asing a1) a3) -> (~ ain a3 (apow a2)) -> (~ (asing a2 = asm a3 (asing a1))) -> asubq (asm a3 (asing a1)) (apow a2) -> (~ (asing a2 = a3)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ (asm (apow a2) a2 = apow a2)) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> ain a2 (asm a4 (asing a1)) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> ain a0 (aun (asing a2) (apow (asing a2))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> (~ ain (apow (asing a1)) a4) -> ain a3 (asm a4 (apow (asing a2))) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq a3 (aun a3 (asing (apow a2))) -> asubq a4 (aun (asing (asing a1)) a4) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> aal2 a2 -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex3 (asm (apow a2) (asing a2)) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> (~ ain a3 a3).
admit.
Qed.

Theorem conj_AbstrHF_TMZ8gjAn3i959xrxqdML2DzRWBQztRHGkmw: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 (asm X24 (asing X25)) -> aal5 X24) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ ain a2 a2) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> asubq a1 (apow (asing a1)) -> (~ asubq a2 (asing a1)) -> (~ ain a0 (asm (apow a2) a2)) -> (~ ain (asing a2) a2) -> (~ ain (asing a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asing a2) (apow a2)) -> (~ ain (apow a2) a3) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ ain a1 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq a4 (aun (asing (asing a2)) a4) -> asubq (asm a3 (asing a2)) a2 -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> (asm (asm a4 a2) (asing a2) = asing a3) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq (asm a4 (asing a3)) a3 -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal2 (asing a3)) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> aal2 a2 -> aal2 (asm (apow a2) (apow (asing a1))) -> aal4 (apow a2) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex2 a2 -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (aun a2 (asing (apow a2))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm a4 (asing a3)) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMVqzkaq2xXEN38d1aPct3wWJQLR5tdZhWz: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (~ ain a3 a3) -> asubq a2 a3 -> (~ asubq a2 a0) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (~ ain (asing a1) (asing a1)) -> (~ asubq (asing a1) (asing a2)) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ (asing a1 = asing a2)) -> (~ (asing a1 = asing (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (~ ain (asing a2) (apow a2)) -> (~ ain (apow a2) (asing a2)) -> (~ (a1 = asm (apow a2) a2)) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ (asing a2 = a3)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a2 (asm a4 (asing a1)) -> (~ ain a0 (asing a3)) -> ain a1 (asm a4 (asing a2)) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain a1 (asm a4 (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> asubq a3 (asm a4 (asing a3)) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal2 a1) -> (~ aal2 (asing (apow a2))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> aal2 (asm (apow a2) a2) -> aal3 (aun (asing a2) (apow (asing a2))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (asm (apow a2) a2) -> aex2 (asm a4 a2) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex4 a4 -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMYvuR8b4Co9CWkY9z9kfh1FNb8qNBrLBow: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> ain a2 (asing a2) -> ain a2 (apow a2) -> ain a2 (asm (apow a2) (apow (asing a2))) -> (~ asubq (asing a1) (asing a2)) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ (asing a1 = asing a2)) -> (~ ain (apow a2) (asing (asing a1))) -> (~ ain (asing a1) a3) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ (a2 = asm a3 (asing a1))) -> (~ ain a3 (asm a3 (asing a1))) -> ain a1 (apow (apow (asing a1))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (~ ain (apow a2) (apow (asing a2))) -> ain a0 (aun (asing a2) (apow (asing a2))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain a3 (aun (asing a1) (asing a3)) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> ain a1 (aun a4 (asing (apow a2))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal3 (apow (asing a1))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal3 a3 -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (aun a1 (asing (apow a2))) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (~ ain a3 (asing a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMLStnfiR4eyKzuPCNHNmEkUMxTvgnqzZXN: (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ ain (asing a1) a0) -> (~ ain a0 (asing a1)) -> ain a2 (asm a3 (asing a1)) -> (~ (a1 = apow (asing a1))) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (apow a2) (apow (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (~ (a1 = apow a2)) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> asubq a3 (apow a2) -> (~ (a3 = asm (apow a2) a2)) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ ain a3 (asing (asing a2))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> ain a2 (asm a4 (asing a1)) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> (~ ain a2 (asing a3)) -> ain a3 (aun a1 (asing a3)) -> (~ ain (asm (apow a2) a2) a4) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> ain a0 (aun (asing (asing a2)) a4) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> (~ ain a1 (asing (apow a2))) -> (~ ain (asing a1) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a1 (aun a4 (asing (apow a2))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (asm a4 (asing a2)) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (asm a2 (asing a0) = asing a1) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal2 (asing (apow a2))) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal4 a3) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (~ aal4 (asm a4 (asing a2))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal2 (apow (asing (asing a1))) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex5 (aun (asing (apow (asing a1))) a4) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2).
admit.
Qed.

Theorem conj_AbstrHF_TMbi4Dc5txS8JNazEzfi3PJH5tvSAp4oZhr: ain a0 a2 -> ain a1 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a3 a3) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> (~ ain a1 (asing a2)) -> ain (asing a1) (apow (asing a1)) -> ain (asing a1) (asm (apow a2) (asing a2)) -> ain a2 (asm (apow a2) (apow (asing a2))) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ ain a1 (asm (apow a2) a2)) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ ain a3 (asing a2)) -> (~ (a2 = asing a2)) -> (~ (asing a2 = asm a3 (asing a1))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asing a2) a4) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> ain a3 (asm a4 (asing a1)) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (aun a2 (asing (apow a2))) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> (asm (asm a4 a2) (asing a2) = asing a3) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq a3 (asm a4 (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal4 (asm (apow a2) (asing a2))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal2 (asm (apow a2) a2) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal4 (aun a3 (asing (asing a2))) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aex2 (asm (apow a2) a2) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (aun (asing a2) (apow (asing a2))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4).
admit.
Qed.

Theorem conj_AbstrHF_TMUs3CRo8QUsHqCtBBTpyS53wz89TWRxQhc: (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> ain a1 a2 -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> ain a1 (asm (apow a2) (apow (asing a1))) -> asubq (asing a1) a2 -> (~ ain a1 (asing a2)) -> (~ asubq (asing a1) (asing a2)) -> (~ ain (apow a2) a2) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ ain a3 (apow a2)) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ (asing a2 = a3)) -> (~ ain (asing a2) (asm (apow a2) a2)) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> ain a1 (aun (asing a1) (apow (asing a2))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal2 a1) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 (apow (asing a1))) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (~ aal4 a3) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> aal2 (asm a4 a2) -> aal4 (aun a3 (asing (apow a2))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aal5 (aun (asing (apow (asing a1))) a4) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2).
admit.
Qed.

Theorem conj_AbstrHF_TMbbd9UsHvdQ9VjM69uwGsGj7bcnaNMRn2g: (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> ain a0 a2 -> ain a2 a3 -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (~ asubq a2 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> (~ ain a0 (asing a2)) -> (~ (a1 = asing a1)) -> (~ ain a1 (apow (asing a2))) -> ain (asing a1) (asm (apow a2) (asing a2)) -> ain a2 (asm (apow a2) (asing a1)) -> (~ (a1 = asing (asing a1))) -> (~ (a1 = apow (asing a1))) -> (~ (a2 = asing (asing a1))) -> asubq (asing (asing a1)) (apow (asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq a3 (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> (~ ain a3 (apow (asing a2))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain a1 (aun a3 (asing (asing a2))) -> (~ ain a0 (asing a3)) -> ain a3 (aun a1 (asing a3)) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain a0 (aun a2 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> (asm (asm a4 a2) (asing a2) = asing a3) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> (asm (asm a4 a2) (asing a3) = asing a2) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> aal5 (aun (asing (apow (asing a1))) a4) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aex2 (asm a3 (asing a1)) -> aex3 (asm (apow a2) (asing a1)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))).
admit.
Qed.

Theorem conj_AbstrHF_TMZCmVUuPuXVpsAmHax67m7vU7syUWryXG7: (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> ain a1 a3 -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> asubq a3 a4 -> (~ (a1 = a2)) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain a1 (aun (asing a1) (asing (asing a1))) -> ain a0 (asm a3 (asing a1)) -> asubq (asing a1) a2 -> (~ (a0 = asm (apow a2) a2)) -> ain a2 (asm a3 (asing a1)) -> (~ (a1 = asm a3 (asing a1))) -> (~ ain a1 (asing (asing a1))) -> (~ (asing a1 = a3)) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (~ (a2 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a3 (asing a2)) -> (~ ain (apow (asing a1)) a3) -> (~ ain (asm (apow a2) a2) a3) -> (~ (asing a2 = asm (apow a2) a2)) -> ain a0 (apow (asing (asing a1))) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain (asing a2) (aun (asing (asing a2)) a4) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (asm a2 (asing a0) = asing a1) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> (~ aal3 a2) -> (~ aal3 (asm a3 (asing a1))) -> aal2 a2 -> aal3 (asm a4 (asing a2)) -> aal4 (aun a3 (asing (asing a2))) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (asm (apow a2) a2) -> aex3 (asm a4 (asing a0)) -> aex3 (asm a4 (asing a3)) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24).
admit.
Qed.

Theorem conj_AbstrHF_TMQCt3M6YzNowkkgoskTM8dUpYUJzfFrnpi: (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> asubq (asing a1) a2 -> (~ ain (asing a1) a1) -> (~ ain a1 (asing a2)) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a2) a2) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ ain (apow a2) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ (asing a2 = asm (apow a2) a2)) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> ain a1 (asm a4 (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain a1 (asing (apow a2))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> ain a1 (aun a4 (asing (apow a2))) -> (~ asubq (asm a4 (asing a2)) a2) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> (~ aal2 (asing (asing a1))) -> (~ aal2 (asing a3)) -> (~ aal3 (apow (asing a1))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (~ aal5 a4) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (aun a1 (asing a3)) -> aex3 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> ain a1 (aun a3 (asing (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMS6shXQvDPW2cwzt4vQ8bKC71osnzpK7jG: (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 (asm X24 (asing X25)) -> aal5 X24) -> (~ ain a2 a2) -> (~ asubq a3 a2) -> (~ asubq a4 a3) -> (~ (a0 = a1)) -> (~ asubq a1 a0) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ (a0 = apow (asing a1))) -> ain a2 (asm a3 (asing a1)) -> ain a2 (asm (apow a2) a2) -> ain a2 (asm (apow a2) (asing a1)) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (~ (a1 = asm (apow a2) a2)) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a2 (aun a3 (asing (asing a2))) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> ain a2 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (asm a2 (asing a0) = asing a1) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> aal4 (apow a2) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a3)).
admit.
Qed.

Theorem conj_AbstrHF_TMFhPAFPkVEoXK1PVDTRkDkLKgZ1kULAbvj: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (~ ain a1 a1) -> (~ (a2 = a3)) -> (~ ain a1 (apow (asing a1))) -> ain a0 (asm (apow a2) (asing a1)) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ (a0 = asm a3 (asing a1))) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> ain a2 (asm (apow a2) (apow (asing a1))) -> (~ ain (asing a1) (asing a1)) -> (~ ain a3 (asing a1)) -> (~ ain (asing a2) a2) -> (~ asubq (apow a2) (asing (asing a1))) -> (~ ain (asing (asing a1)) a3) -> (~ ain (asm (apow a2) a2) a3) -> asubq (asm a3 (asing a1)) (apow a2) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> (~ (a3 = asm (apow a2) a2)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ ain a1 (asing (apow (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a3 (asing (asing a2))) -> (~ ain (apow a2) (apow (asing a2))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> (~ ain a1 (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> (asm (apow a2) (asing (asing a1)) = a3) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> (asm (asm a4 a2) (asing a2) = asing a3) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal2 (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal3 (aun (asing a1) (asing a3))) -> (~ aal4 (asm a4 (asing a2))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal2 (asm a4 a2) -> aal3 (asm (apow a2) (asing a2)) -> aal4 a4 -> aex2 (apow (asing a1)) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMWtkAL3KsfqfgwZJHPFnFRr6fU5iqmosa7: (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> ain a2 a3 -> ain a0 a4 -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (~ asubq a2 a1) -> (~ (a0 = a3)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> ain a1 (apow a2) -> ain a2 (asm (apow a2) (apow (asing a2))) -> (~ ain a1 (asm a3 (asing a1))) -> (~ asubq (asm a3 (asing a1)) a2) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ (asing a1 = asm (apow a2) a2)) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (~ (a2 = asm a3 (asing a1))) -> (~ (a2 = asm (apow a2) a2)) -> (~ (asing a2 = apow a2)) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> (~ ain (asing a2) (asing a3)) -> (~ ain a2 (aun a1 (asing a3))) -> ain a1 (aun a2 (asing (apow a2))) -> ain a2 (aun a3 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> asubq a4 (aun (asing (asing a1)) a4) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal4 a3) -> (~ aal5 a4) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> aal3 a3 -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (asm a4 (asing a3) = a3).
admit.
Qed.

Theorem conj_AbstrHF_TMVdzw3BkRf35EqU483ES4VeiHycS6Gg32C: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ asubq a3 a2) -> (~ ain a1 (asing a2)) -> ain a1 (asm (apow a2) (asing a2)) -> (~ (a0 = asm (apow a2) a2)) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ asubq a2 (asing a2)) -> (~ (a1 = asing (asing a1))) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (~ (a2 = asm (apow a2) a2)) -> (~ ain a3 (asm a3 (asing a1))) -> (~ (a0 = apow a2)) -> asubq a3 (apow a2) -> (~ ain (asing a2) (asm (apow a2) a2)) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> (~ (asing a2 = asm (apow a2) a2)) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> (~ (a3 = apow a2)) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> (~ ain a0 (asing (apow (asing a1)))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain a3 (aun (asing a1) (asing a3)) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain (asing a2) (aun (asing (asing a2)) a4) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a4 (aun (asing (asing a1)) a4) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal3 (asm a4 a2)) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aal5 (aun (asing (asing a2)) a4) -> aex2 (asm a4 a2) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> ain (asing a1) (aun (asing (asing a1)) a4).
admit.
Qed.

Theorem conj_AbstrHF_TMPn3MSCwTJMXyCNAi72Us5fu1aSJPWv7yx: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> ain a0 a2 -> ain a2 a3 -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (~ asubq a2 a1) -> (~ asubq a1 a0) -> (~ (a0 = asing (asing a1))) -> (~ (a0 = asm (apow a2) a2)) -> ain a2 (asm (apow a2) a2) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ (a1 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ (asm a3 (asing a1) = a3)) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> (~ ain a0 (asing a3)) -> (~ ain a2 (aun a1 (asing a3))) -> ain a1 (aun (asing a1) (asing a3)) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> ain a3 (asm a4 (apow (asing a2))) -> ain a1 (aun (asing (asing a2)) a4) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain a0 (aun a1 (asing (apow a2))) -> ain a0 (aun a2 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> ain a1 (aun a4 (asing (apow a2))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> (asm (asm a4 a2) (asing a2) = asing a3) -> asubq (asm a4 (asing a3)) a3 -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal5 (aun (apow a2) (asing (apow a2))) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 a2 -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex5 (aun (asing (apow (asing a1))) a4) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (~ ain (asm a3 (asing a1)) a2).
admit.
Qed.

Theorem conj_AbstrHF_TMEqkucaShRJWeoQSQzUJ91UTx7eqjGd1xL: (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> ain a1 a3 -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (~ ain a1 (apow (asing a1))) -> ain a1 (asm (apow a2) (apow (asing a1))) -> (~ ain a0 (asm (apow a2) a2)) -> ain a2 (asm (apow a2) (asing a1)) -> (~ (a1 = asing a2)) -> (~ ain (apow a2) a2) -> (~ asubq a2 (asm a3 (asing a1))) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a2) (asing (asing a1))) -> (~ ain (apow a2) (asing (asing a1))) -> (~ ain (asm (apow a2) a2) a3) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain a2 (asm a4 a2) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain a3 (asing (apow a2))) -> ain a1 (aun a2 (asing (apow a2))) -> ain a1 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq a3 (asm a4 (asing a3)) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (~ aal3 (apow (asing a1))) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (~ aal4 (asm a4 (asing a2))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> aal2 (asm (apow a2) a2) -> aal2 (asm a4 a2) -> aal3 (asm (apow a2) (apow (asing a2))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (aun a1 (asing a3)) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (aun a3 (asing (apow a2))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex5 (aun (asing (apow (asing a1))) a4) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (~ ain a3 (apow (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMHGCKx7BXiAcUV7U1bkR9QBECJVE9ZWBiP: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (~ ain X24 a0)) -> ain a0 a2 -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (~ (a1 = asing a2)) -> (~ asubq a2 (asm a3 (asing a1))) -> (~ (asing a1 = a3)) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (~ (asing (asing a1) = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ ain a3 (apow a2)) -> (~ ain (asing (asing a1)) a3) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> ain a2 (asm a4 (asing a1)) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain a0 (asm a4 (asing a2)) -> (~ ain (asing a1) (asm a4 a2)) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal5 (apow a2)) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 a4) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal3 (aun a2 (asing (apow a2))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> ain (asing a1) (asm (apow a2) (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMUkoU2dAhrdnsrTqdXuWZHk4awwi9GvHAC: (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, asubq X25 (asing X24) -> ((X25 = a0) \/ (X25 = asing X24))) -> ain a1 (asm (apow a2) (apow (asing a1))) -> (~ ain a2 (asing a1)) -> ain a2 (asm (apow a2) a2) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ ain (asing a2) a3) -> (~ (a1 = apow a2)) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun a3 (asing (asing a2))) -> ain a2 (aun a3 (asing (asing a2))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> ain a3 (asm a4 (asing a2)) -> ain a3 (aun (asing (asing a2)) a4) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain a1 (asing (apow a2))) -> ain a0 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal4 (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (apow (asing a1)) -> aex2 (asm (apow a2) a2) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex4 (aun a3 (asing (apow a2))) -> aex5 (aun (asing (apow (asing a1))) a4) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMddr7Vb5VgRrGostbMKH6NqmP8QsHYLNLk: (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain a1 (aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> ain a2 (apow a2) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ ain (asing a2) a2) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ (a2 = asm a3 (asing a1))) -> (~ ain a3 (asing a2)) -> (~ (a1 = asm (apow a2) a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> ain a2 (aun a3 (asing (asing a2))) -> ain a3 (asm a4 (asing a2)) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain a0 (aun (asing (asing a2)) a4) -> ain a0 (aun a2 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq a3 (aun a3 (asing (asing a2))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq a2 (asm a3 (asing a2)) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (asing a3)).
admit.
Qed.

Theorem conj_AbstrHF_TMF99aZjKeCCjPSVT3gWWPEaToZfiE1J6F7: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 (asm X24 (asing X25)) -> aal5 X24) -> (~ asubq a2 a1) -> (~ ain a0 (asing a2)) -> (~ (a0 = apow (asing a1))) -> ain a0 (apow (asing a2)) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ ain (asm (apow a2) a2) a3) -> (~ (a1 = apow a2)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (~ (asm a3 (asing a1) = apow a2)) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> ain a2 (asm a4 (asing a1)) -> (~ ain (asm a3 (asing a1)) a4) -> ain a2 (asm a4 a2) -> ain a2 (asm a4 (apow (asing a2))) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (asm a2 (asing a0)) (asing a1) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal2 (asing (apow a2))) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> aal2 (asm a3 (asing a1)) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMHAXRrPhW5tWvE63Zt61aYYD7LL41Gi4ew: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (~ asubq a2 a1) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain (asing a1) (asing (asing a1)) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a1) (apow (asing a2))) -> (~ ain a1 (asm (apow a2) a2)) -> (~ (a1 = asing (asing a1))) -> (~ ain a2 (asing (asing a1))) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ (a2 = asm (apow a2) a2)) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> (~ ain a1 (asing (apow (asing a1)))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain a0 (aun a3 (asing (asing a2))) -> (~ ain a2 (aun a1 (asing a3))) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain a3 (asm a4 a2) -> ain a0 (aun a4 (asing (apow a2))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aal2 a2 -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)).
admit.
Qed.

Theorem conj_AbstrHF_TMXSiTJEP25mZWsye74Mmg99GegLY6ukcLf: (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (~ ain a0 (asing a2)) -> (~ (a0 = apow (asing a1))) -> (~ ain (asing a2) a1) -> ain a2 (apow a2) -> (~ ain (apow a2) a2) -> (~ (a2 = asm (apow a2) a2)) -> (~ (a0 = apow a2)) -> asubq a3 (apow a2) -> ain a2 (aun a3 (asing (asing a2))) -> (~ ain (asm (apow a2) a2) a4) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain a3 (asm a4 (apow (asing a2))) -> ain a3 (aun (asing (asing a2)) a4) -> ain a1 (aun a2 (asing (apow a2))) -> ain a0 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal2 (asing a2)) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> aal2 (apow (asing (asing a1))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aal5 (aun (asing (asing a2)) a4) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (aun a1 (asing (apow a2))) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex5 (aun (asing (apow (asing a1))) a4) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> (~ ain a3 (apow (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMUhdFDtdDBQsSZ6BW7UHEgan51se6DYMf8: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> (forall X24:set, forall X25:set, asubq X25 (asing X24) -> ((X25 = a0) \/ (X25 = asing X24))) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> ain a1 (aun (asing a1) (asing (asing a1))) -> (~ ain a0 (asing a2)) -> (~ asubq a1 (asing a2)) -> ain a2 (asm (apow a2) a2) -> ain a2 (asm (apow a2) (asing a1)) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ ain (asing (asing a1)) a2) -> (~ (a2 = apow (asing a1))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (~ ain (apow a2) (apow a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> (~ ain (asm (apow a2) a2) a4) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> (~ ain a0 (asm a4 a2)) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain a3 (asing (apow a2))) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing a1)) a4) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> aal3 a3 -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal3 (asm a4 (asing a2)) -> aal5 (aun (apow a2) (asing (apow a2))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex5 (aun (asing (asing a1)) a4) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMYd3pT4kLSyHV2HEPiXiwCorChqEZwk13J: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> asubq a1 (asing a0) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (~ asubq a2 a1) -> (~ ain a2 (apow (asing a1))) -> (~ ain a2 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ ain a3 (apow a2)) -> (~ (asm a3 (asing a1) = a3)) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> (~ (asing a2 = apow a2)) -> (~ ain a1 (asing (apow (asing a1)))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain a1 (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> ain a3 (aun (asing (asing a2)) a4) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> (~ ain a3 (asing (apow a2))) -> ain a1 (aun a2 (asing (apow a2))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal3 (apow (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (~ aal4 a3) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal3 (asm (apow a2) (asing a2)) -> aex2 a2 -> aex2 (asm (apow a2) a2) -> aex2 (apow (asing a2)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)).
admit.
Qed.

Theorem conj_AbstrHF_TMHFwV1tcuGWKHQ287s8dxSGaJHULytwWC4: ain a1 a4 -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> ain a2 (asing a2) -> (~ (a0 = asing a1)) -> ain (asing a1) (asm (apow a2) a2) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ (asing a1 = apow a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (apow a2) (apow a2)) -> (~ (apow (asing a1) = a3)) -> ain a1 (apow (apow (asing a1))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> ain a1 (apow (asm a3 (asing a1))) -> ain a0 (aun a1 (asing a3)) -> ain a3 (asm a4 (asing a2)) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain a1 (aun a3 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (aun a2 (asing (apow a2))) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (~ aal3 (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> aal2 (asm a4 a2) -> aal5 (aun (asing (apow (asing a1))) a4) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 a2 -> aex2 (aun a1 (asing (apow a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> (~ ain (asing a2) a1).
admit.
Qed.

Theorem conj_AbstrHF_TMUTpau7zmwbvCou85Y51x9Y995ajFD1Sn4: (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> ain a1 a3 -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> asubq a3 a4 -> (~ asubq a2 a0) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> ain a0 (apow (asing a1)) -> (~ ain a1 (apow (asing a2))) -> ain a1 (asm (apow a2) (asing a2)) -> (~ ain a2 (apow (asing a2))) -> (~ ain a1 (asing (asing a1))) -> (~ ain (asing a2) (asing (asing a1))) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (~ (a1 = apow a2)) -> (~ (apow (asing a1) = a3)) -> (~ (asing a2 = asm (apow a2) a2)) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun a3 (asing (asing a2))) -> (~ ain a0 (asm a4 a2)) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain a3 (aun (asing (asing a2)) a4) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ ain a0 (asing (apow a2))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq a2 (aun a2 (asing (apow a2))) -> asubq a3 (aun a3 (asing (apow a2))) -> asubq a4 (aun (asing (asing a1)) a4) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 a3) -> (~ aal4 (asm a4 (apow (asing a2)))) -> aal2 a2 -> aal2 (aun (asing a1) (asing (asing a1))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex3 a3 -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex4 (apow a2) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))).
admit.
Qed.

Theorem conj_AbstrHF_TMFyqcBra9vaxaCqw59wdXXugkfqgiDm8yj: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> ain a0 a4 -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (~ ain a2 a2) -> (~ ain a3 a2) -> (~ asubq a2 a1) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ asubq a2 (asing a2)) -> (~ ain (asing a1) (asing a1)) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ asubq a2 (asm a3 (asing a1))) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (~ asubq (apow a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ asubq a3 (asing a2)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> (~ ain (asing a1) a4) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> ain a3 (asing a3) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> (~ ain a1 (asing (apow a2))) -> (~ ain (asing a2) (asing (apow a2))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> aal2 a2 -> aal3 a3 -> aal3 (asm a4 (asing a2)) -> aal5 (aun (asing (asing a1)) a4) -> aal5 (aun (apow a2) (asing (apow a2))) -> aex2 a2 -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex3 (asm (apow a2) (asing a1)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (apow a2) -> aex3 (asm (apow a2) (asing a0)) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)).
admit.
Qed.

Theorem conj_AbstrHF_TMbVTA74sEBqo1EDiKkuLLYnovnaPH7E1Di: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> ain a1 a3 -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (~ asubq a1 a0) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> ain a1 (apow a2) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> ain a2 (apow a2) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> ain (asing a2) (asing (asing a2)) -> ain (asing a2) (apow (asing a2)) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain a2 (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> (~ ain a0 (asing a3)) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> aal5 (aun (asing (apow (asing a1))) a4) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex5 (aun (asing (asing a1)) a4) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2.
admit.
Qed.

Theorem conj_AbstrHF_TMFcLMoS7imZKN4q4bt6K6sMsNJrfmzdNSX: (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> ain a0 a2 -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> asubq a1 (apow (asing a1)) -> (~ asubq a2 (asing a1)) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ ain a1 (asm a3 (asing a1))) -> (~ asubq (asing a2) a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ (apow (asing a1) = a3)) -> (~ (asing a2 = asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> (~ (asm (apow a2) a2 = apow a2)) -> ain a1 (apow (apow (asing a1))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asing a2) (asing a3)) -> ain a1 (asm a4 (asing a2)) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asing a1) (asing (apow a2))) -> ain a1 (aun a2 (asing (apow a2))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal2 (asing (apow a2))) -> (~ aal5 (apow a2)) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> aal2 (asm a4 a2) -> aal4 a4 -> aal5 (aun (apow a2) (asing (asing a2))) -> aal5 (aun (asing (apow (asing a1))) a4) -> aex2 (apow (asing a1)) -> aex2 (asm (apow a2) a2) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMb5jdcCTLSrzYvqL42wGmEh9QrngTYu3Vt: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (~ (a0 = a1)) -> (~ asubq a2 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> ain a0 (apow (asing a1)) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ ain (asing a1) a1) -> (~ ain (asing a1) (asing a2)) -> (~ asubq a2 (asing a1)) -> (~ ain a2 (apow (asing a2))) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ ain a2 (asing (asing a1))) -> (~ (asing (asing a1) = apow (asing a1))) -> (~ ain (apow a2) (apow a2)) -> (~ (a2 = asm (apow a2) a2)) -> (~ (apow (asing a1) = a3)) -> (~ ain (asing a2) (asm (apow a2) a2)) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> (~ ain a1 (asing (apow (asing a1)))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain a3 (aun (asing a1) (asing a3)) -> ain a1 (asm a4 (asing a2)) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain (asing a2) (aun (asing (asing a2)) a4) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a0 (aun a3 (asing (apow a2))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a2 (asm a4 (asing a2)) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq a1 (asm a2 (asing a1)) -> asubq (asm a3 (asing a2)) a2 -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal4 (asm (apow a2) (asing a2))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> aal3 (asm a4 (asing a1)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex4 a4 -> aex3 (asm a4 (asing a0)) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> ain a1 (aun (asing a1) (asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TML6ugTR6aCJH8xASP7BMLbaa1bxF1TcpQg: (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (~ ain a1 a0) -> (~ ain a1 a1) -> (~ ain a3 a2) -> ain (asing a1) (asing (asing a1)) -> ain a1 (apow a2) -> (~ (a0 = apow (asing a1))) -> ain (asing a1) (asm (apow a2) (asing a2)) -> ain a2 (asm (apow a2) (apow (asing a2))) -> (~ ain (apow a2) a2) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (~ asubq (apow a2) (asing (asing a1))) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> (~ ain (asing a1) a4) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain a2 (asm a4 a2) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (asing (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (asm a3 (asing a2) = a2) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq a3 (asm a4 (asing a3)) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal2 (asm (apow a2) a2) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal4 a4 -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 (asm (apow a2) a2) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex4 (aun a3 (asing (asing a2))) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMaUzgyLkvxbQeKN8fd7A4pRcXqn5VHLFEd: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (~ ain a0 a0) -> (~ (a0 = a1)) -> ain (asing a1) (asing (asing a1)) -> ain a2 (asing a2) -> (~ (asing a1 = apow a2)) -> (~ (a2 = asing a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> (~ ain a3 (apow (asing a2))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asing a1) (asing (apow a2))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain a1 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex2 (asm (apow a2) a2) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> aex3 (asm a4 (asing a3)).
admit.
Qed.

Theorem conj_AbstrHF_TMUbamG2BXwK6A3rMAbLUqwvrLG3fLibLYU: (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, (~ aal5 X24) -> (~ aal6 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> ain (asing a1) (apow a2) -> (~ ain a1 (asing a2)) -> (~ ain a1 (asm a3 (asing a1))) -> (~ (a1 = apow (asing a1))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (~ ain (asing a2) (apow a2)) -> (~ (a2 = asm a3 (asing a1))) -> (~ ain (asing a2) a3) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ (asm a3 (asing a1) = apow a2)) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> (~ ain a3 (apow (asing a2))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> (~ ain (apow a2) a4) -> (~ ain (asing a1) (asm a4 a2)) -> ain a1 (aun (asing (asing a2)) a4) -> ain a0 (aun a3 (asing (apow a2))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> asubq a4 (aun (asing (asing a2)) a4) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq a2 (asm a3 (asing a2)) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMSkMi8NwNWRQ5UnjWcDZfDgwoxiDHgztCV: (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> asubq a2 a3 -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ ain a0 (asing a1)) -> ain (asing a1) (asm (apow a2) a2) -> (~ ain a2 (apow (asing a2))) -> ain a2 (asm (apow a2) (apow (asing a2))) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ (asing a1 = a3)) -> (~ ain a3 (asm a3 (asing a1))) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> (~ (asing a2 = apow a2)) -> (~ ain a0 (asing (apow (asing a1)))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> ain a0 (aun a1 (asing a3)) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> asubq a2 (apow (asm a3 (asing a1))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal4 (asm a4 (asing a1))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)).
admit.
Qed.

Theorem conj_AbstrHF_TMMN9FXfwBTxeZryeAchtwocnZewsPwGbmR: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (~ ain a3 a3) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> ain a1 (aun (asing a1) (asing (asing a1))) -> ain a1 (apow a2) -> ain a1 (asm (apow a2) (apow (asing a1))) -> ain a1 (asm (apow a2) (asing a2)) -> (~ ain (asing a1) (asing a1)) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (a2 = asm (apow a2) a2)) -> (~ ain (apow (asing a1)) a3) -> (~ ain (asm (apow a2) a2) a3) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a1 (apow (apow (asing a1))) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain a1 (asm a4 (asing a2)) -> (~ ain (asing (asing a1)) a4) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain a0 (aun a2 (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun a4 (asing (apow a2))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (apow (asing a2)) -> aex2 (aun (asing (asing a1)) (asing a3)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ (a2 = asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMYTfc8VJJM1mstUnjZStDyAbpiUf39KNkV: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, (~ ain X24 a0)) -> ain a0 a3 -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (~ (a0 = asing (asing a1))) -> (~ ain a1 (asing (asing a1))) -> (~ (a1 = apow (asing a1))) -> (~ ain (asing a2) a2) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ ain (apow a2) a3) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (asing a1) (asing (asing a2))) -> (~ ain a3 (asing (asing a2))) -> (~ ain (apow a2) (asing (asing a2))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> (~ ain a1 (asing a3)) -> (~ ain (asing a2) (aun a1 (asing a3))) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> asubq a4 (aun (asing (asing a1)) a4) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> asubq (asing a1) (asm a2 (asing a0)) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ aal2 a1) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> aal5 (aun (apow a2) (asing (apow a2))) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))).
admit.
Qed.

Theorem conj_AbstrHF_TMMDDXNascYjJZp14GGBzwX3mDMkjQ8Lr9Y: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a3 a3) -> (~ asubq a1 a0) -> (~ (a0 = asing a1)) -> (~ (a0 = asing a2)) -> (~ (a0 = asm (apow a2) a2)) -> (~ asubq (asing a1) (asing a2)) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ (asing a1 = asing (asing a1))) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (~ (asing (asing a1) = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ (a2 = apow a2)) -> (~ ain (asing a2) a3) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> ain a0 (asm a4 (asing a1)) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> ain a3 (asm a4 (asing a2)) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> (~ ain (asing a1) (asm a4 a2)) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> ain a1 (aun (asing (asing a2)) a4) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq a4 (aun (asing (asing a2)) a4) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (asm a3 (asing a2)) a2 -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq a3 (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal2 (asm (apow a2) (apow (asing a1))) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aal5 (aun (apow a2) (asing (apow a2))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMZH74f6LBPJbDgUr2KmfyK3z1De6os4Pxy: (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 (asm X24 (asing X25)) -> aal5 X24) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ (a1 = a2)) -> (~ asubq a2 a0) -> (forall X24:set, forall X25:set, asubq X25 (asing X24) -> ((X25 = a0) \/ (X25 = asing X24))) -> ain a0 (apow a2) -> (~ ain a2 (apow (asing a2))) -> (~ asubq (asing a1) (asing a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> (~ ain (asing a1) a4) -> ain a3 (asm a4 (asing a2)) -> (~ ain (asm (apow a2) a2) a4) -> ain a2 (asm a4 (apow (asing a2))) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> (~ ain a1 (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq a1 (asm a2 (asing a1)) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex2 (aun a1 (asing a3)) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> aex4 (aun a3 (asing (apow a2))) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq a1 (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMPBUWFw7axZGCzyJcUQgPWpuCu7qubuppS: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, (~ ain X24 a0)) -> ain a1 a2 -> ain a0 a3 -> ain a2 a3 -> ain a1 a4 -> ain a3 a4 -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (~ (a0 = asing a1)) -> (~ asubq a1 (asing a2)) -> (~ ain (asing a1) a1) -> ain a2 (asm a3 (asing a1)) -> (~ ain a0 (asm (apow a2) a2)) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ (asing a1 = asing a2)) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (~ (asing a2 = asm (apow a2) a2)) -> (~ (asing a2 = apow a2)) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain a3 (asing (asing a2))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> (~ ain (asing a1) a4) -> (~ ain (asing a2) a4) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a3 (aun (asing (asing a2)) a4) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> ain a0 (aun a1 (asing (apow a2))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ asubq (asm a4 (asing a2)) a2) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> aal2 (asm (apow a2) (apow (asing a1))) -> aal3 (aun a2 (asing (apow a2))) -> aal5 (aun (apow a2) (asing (apow a2))) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 (asm a3 (asing a1)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMcdwxQeZYFcNfe4VJ5FJGAgBGQiSmo1qAt: (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> ain a2 a4 -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (~ ain a2 a0) -> (~ ain a3 a3) -> (~ asubq a2 a1) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> ain (asing a1) (asing (asing a1)) -> (~ ain a1 (apow (asing a1))) -> ain a2 (asm (apow a2) a2) -> (~ ain a2 (apow (asing a2))) -> (~ (a1 = asm a3 (asing a1))) -> (~ ain (asing a2) a2) -> (~ ain (apow a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ (asing a2 = asm (apow a2) a2)) -> (~ (a3 = asm (apow a2) a2)) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> ain a0 (aun a3 (asing (asing a2))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> (~ ain a3 (asing (apow a2))) -> ain a0 (aun a3 (asing (apow a2))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> (asm (asm a4 a2) (asing a3) = asing a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal2 a1) -> (~ aal3 (apow (asing a1))) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal5 (apow a2)) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex3 (asm a4 (asing a3)) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ ain a3 (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMLpXkpwxtJ3boxgP3WH7pi6QFpRDNUgu9y: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> asubq a2 a3 -> (~ asubq a2 a0) -> (~ asubq (asing a1) (asing a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ ain a3 (asing a2)) -> (~ asubq (apow a2) (asing a2)) -> (~ ain (asing a2) (asm (apow a2) a2)) -> (~ (asing a2 = apow a2)) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> (~ ain a0 (asing (apow (asing a1)))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> (~ ain (asing a1) a4) -> (~ ain (asing a2) a4) -> ain a0 (aun a3 (asing (asing a2))) -> (~ ain a2 (aun a1 (asing a3))) -> (~ ain (apow (asing a1)) a4) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> ain a3 (aun (asing (asing a2)) a4) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> ain a0 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq a2 (aun a2 (asing (apow a2))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (asm (asm a4 a2) (asing a2) = asing a3) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal2 (asing a1)) -> (~ aal2 (asing (asing a1))) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal2 a2 -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal4 (aun a3 (asing (apow a2))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aex2 (apow (asing a2)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMQmtP6rp6jdNYMYTxhM1Q8aG5QmTAcbidD: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (~ (a1 = a3)) -> ain a1 (asing a1) -> (~ ain a0 (asing a1)) -> (~ ain (asing a1) (apow (asing a2))) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ ain a1 (asm (apow a2) a2)) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (~ ain a3 (asing a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ ain (apow (asing a1)) a3) -> (~ (asing a2 = asm a3 (asing a1))) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> (~ ain a3 (apow (asing a2))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> (~ ain (asm a3 (asing a1)) a4) -> (~ ain (apow a2) a4) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (aun (asing a1) (apow (asing a2))) (aun (asing (asing a2)) a4) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (apow a2)) -> aal3 (asm a4 (asing a2)) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex3 (asm a4 (asing a3)) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex5 (aun (apow a2) (asing (apow a2))) -> aex5 (aun a4 (asing (apow a2))) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> (~ ain (apow (asing a1)) a4).
admit.
Qed.

Theorem conj_AbstrHF_TMNuXVjgAFqBPf4kPfetzfjUHfq8rXcEUTv: ain a2 a3 -> ain a1 a4 -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (~ (a0 = a1)) -> (~ ain (asing a1) a0) -> (~ ain (asing a1) a2) -> ain a0 (asm (apow a2) (asing a1)) -> (~ ain (asing a2) a1) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a3 (asing a1)) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ (a2 = asm a3 (asing a1))) -> (~ (a2 = asm (apow a2) a2)) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> (~ ain a1 (asing (apow (asing a1)))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> ain a0 (asm a4 (asing a1)) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> (~ ain (asing a2) (asing a3)) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain a0 (aun (asing (asing a2)) a4) -> (~ ain a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asm a3 (asing a1)) a4 -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal2 a1) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal5 (apow a2)) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aex2 (asm a4 a2) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex3 (asm (apow a2) (asing a0)) -> aex3 (asm a4 (asing a0)) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))).
admit.
Qed.

Theorem conj_AbstrHF_TMWW8CLnk7porA1mw7jHUX7hL5fZpmmmNCv: (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (~ ain a2 a0) -> (~ (a1 = a2)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ ain a2 (asing a1)) -> (~ ain a2 (apow (asing a2))) -> ain a2 (asm (apow a2) (apow (asing a2))) -> ain a0 (apow (asing a2)) -> (~ ain a2 (asing (asing a1))) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ ain (apow a2) (asing a2)) -> (~ ain a3 (asm a3 (asing a1))) -> (~ ain (apow a2) a3) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> (~ ain (asing a1) (asm a4 a2)) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> (~ ain (asing a1) (asing (apow a2))) -> ain (apow a2) (asing (apow a2)) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal2 (asing a2)) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal4 a3) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> aal3 (asm a4 (asing a1)) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (asm a3 (asing a1)) -> aex2 (asm a4 a2) -> aex2 (asm a3 (asing a2)) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25).
admit.
Qed.

Theorem conj_AbstrHF_TMbwkGes35rRRjcy4oJYQJ5qWKs7JYfjUiq: (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (~ ain a2 a0) -> (~ ain a3 a2) -> (~ (a1 = a3)) -> (~ asubq a1 a0) -> (~ ain (asing a2) a1) -> (~ ain a1 (asm (apow a2) a2)) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ (asing a1 = asing a2)) -> (~ ain (asing a2) (asing (asing a1))) -> (~ asubq (apow a2) (asing (asing a1))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> (~ ain (apow a2) (apow (asing a2))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> (~ ain (asing a2) a4) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain a0 (apow (asm a3 (asing a1))) -> (~ ain a0 (asing a3)) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain a0 (aun a2 (asing (apow a2))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> asubq a4 (aun (asing (asing a2)) a4) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal2 (asing a3)) -> (~ aal2 (asing (apow a2))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal5 (aun (apow a2) (asing (apow a2))) -> aex2 (asm a3 (asing a1)) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex2 (aun a1 (asing a3)) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)).
admit.
Qed.

Theorem conj_AbstrHF_TMbvKNUdNmFUVJXCHpV6PER3ysQwKaJ9xdP: (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (~ ain a1 a0) -> ain a0 (asm (apow a2) (asing a2)) -> (~ ain a0 (asing (asing a1))) -> (~ asubq a2 (asing a2)) -> (~ (a1 = asing a2)) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ asubq (asm (apow a2) a2) a2) -> (~ (a2 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (~ (a2 = asm (apow a2) a2)) -> (~ ain (apow a2) (asing a2)) -> (~ (a2 = asing a2)) -> (~ ain (apow a2) a3) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> ain a0 (apow (apow (asing a1))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asing a2) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq a2 (aun a2 (asing (apow a2))) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal3 (asm a3 (asing a1))) -> aal4 (apow a2) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 (asm (apow a2) a2) -> aex3 (asm (apow a2) (asing a1)) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex5 (aun (apow a2) (asing (apow a2))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> asubq a3 a4.
admit.
Qed.

Theorem conj_AbstrHF_TMWz2fuN5e5gkRrMWHxH6SzPWuiDfpFAkK3: ain a1 a4 -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> asubq a1 (asing a0) -> asubq (asing a0) a1 -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a0 a0) -> (~ ain a2 a2) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> (~ ain (apow a2) (apow (asing a2))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> (~ ain (asing a2) (asing a3)) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> asubq (asm a3 (asing a1)) a4 -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asing a1)) -> (~ aal2 (asing a3)) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> aal3 (asm (apow a2) (asing a2)) -> aal3 (aun (asing a1) (apow (asing a2))) -> aex2 (asm (apow a2) a2) -> aex3 (aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex4 (apow a2) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMc6mhDGxo6JdBgNutWKvnJxepNg2VXatbe: (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (~ (a0 = a3)) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> ain a0 (apow (asing a1)) -> (~ ain a0 (asing a2)) -> (~ (a0 = apow (asing a1))) -> (~ ain (asing a2) a1) -> ain a2 (asm (apow a2) (asing a1)) -> (~ (a1 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> (~ ain (asing a2) (asm (apow a2) a2)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asing a2) a4) -> ain a3 (aun (asing a1) (asing a3)) -> (~ ain (apow a2) a4) -> ain a3 (asm a4 a2) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (apow a2) (asing (apow a2)) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal2 (asing (asing a1))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal5 (apow a2)) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 a4) -> aal3 (asm (apow a2) (apow (asing a2))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (apow (asing a1)) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex3 (asm a4 (asing a0)) -> aex5 (aun a4 (asing (apow a2))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)).
admit.
Qed.

Theorem conj_AbstrHF_TMW44JWA9ZhuiJ4SJvW72G1RD81Pp1WZk29: ain a0 a4 -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (~ ain a1 a1) -> (~ (a0 = a2)) -> ain a0 (asm (apow a2) (asing a2)) -> ain a2 (asing a2) -> (~ ain a1 (apow (asing a2))) -> (~ (asing a1 = a2)) -> (~ ain (asing a1) (apow (asing a2))) -> (~ ain (asm a3 (asing a1)) a2) -> (~ ain a2 (asing (asing a1))) -> (~ (asing a1 = apow a2)) -> (~ (asing a1 = asing (asing a1))) -> (~ asubq (apow a2) (asing (asing a1))) -> (~ (a2 = apow (asing a1))) -> (~ ain a3 (asing a2)) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> (~ ain a0 (asing (apow (asing a1)))) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain a1 (asing (apow (asing a1)))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> ain a0 (aun a3 (asing (asing a2))) -> ain a1 (aun a3 (asing (asing a2))) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq a2 (apow (asm a3 (asing a1))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal2 (apow (asing (asing a1))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal4 (aun a3 (asing (apow a2))) -> aex2 (apow (asing a2)) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex3 (asm a4 (asing a1)) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ ain (asing (asing a1)) a4).
admit.
Qed.

Theorem conj_AbstrHF_TMVX6wZxmc7yyapsYmJKxjmoEugEDynFM5X: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> ain a1 a3 -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> ain a1 (aun (asing a1) (asing (asing a1))) -> ain a0 (asm a3 (asing a1)) -> ain (asing a1) (apow a2) -> (~ ain (asing a1) a2) -> ain a2 (asm (apow a2) (apow (asing a1))) -> (~ ain a0 (asm (apow a2) a2)) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (~ ain (apow a2) (asing (asing a1))) -> (~ (asing (asing a1) = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (~ ain (asing a2) (asm a3 (asing a1))) -> (~ (a1 = asm (apow a2) a2)) -> (~ (apow (asing a1) = a3)) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal4 (asm (apow a2) (asing a1))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aal5 (aun (asing (asing a1)) a4) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (asm a3 (asing a1)) -> aex2 (asm a4 a2) -> aex2 (aun a1 (asing (apow a2))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex3 (asm a4 (asing a3)) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asing (asing a2)) a4) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> asubq a2 (aun (asing a1) (apow (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMPeugjTAHH1TZ68oGTckSFfNpUMgRjUksr: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> ain a0 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (~ ain a2 a1) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> ain a1 (asm (apow a2) (apow (asing a1))) -> ain (asing a1) (apow a2) -> (~ (a0 = asm (apow a2) a2)) -> (~ (a1 = asing a2)) -> (~ asubq (asing a1) (asing a2)) -> (~ ain a1 (asm a3 (asing a1))) -> (~ asubq (asm (apow a2) a2) a2) -> (~ ain a2 (asing (asing a1))) -> (~ (asing a1 = asing a2)) -> (~ ain (asing a2) (asing (asing a1))) -> (~ ain (asing a1) a3) -> (~ asubq (apow a2) (asing (asing a1))) -> (~ (a2 = apow (asing a1))) -> (~ ain (asing a2) a3) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ (asm (apow a2) a2 = apow a2)) -> ain a0 (apow (asing (asing a1))) -> (~ ain a1 (asing (apow (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asing a2) (asing (apow a2))) -> ain a0 (aun a2 (asing (apow a2))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (asm a2 (asing a1) = a1) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal2 (asing a3)) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> aal2 (asm (apow a2) a2) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26).
admit.
Qed.

Theorem conj_AbstrHF_TMMwnXJqAotfCKGkb9rMmMcspGqV3Jepgfj: (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> asubq a1 a2 -> (~ (a1 = a3)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> ain a1 (aun (asing a1) (asing (asing a1))) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ (asing a1 = a2)) -> ain a2 (asm (apow a2) a2) -> (~ ain a0 (asm (apow a2) a2)) -> ain a2 (asm (apow a2) (asing a1)) -> (~ (a1 = asing a2)) -> (~ asubq (asing a1) (asing a2)) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ asubq (asm (apow a2) a2) a2) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (~ asubq (apow a2) (apow (asing a1))) -> asubq (asm a3 (asing a1)) (apow a2) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> ain a3 (asing a3) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> (~ ain (asm (apow a2) a2) a4) -> ain (asing a1) (aun (asing (asing a1)) a4) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain a1 (aun a2 (asing (apow a2))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq a4 (aun a4 (asing (apow a2))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal3 (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 (asm (apow a2) a2) -> aex2 (asm a4 a2) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex4 (aun a3 (asing (apow a2))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex5 (aun a4 (asing (apow a2))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))).
admit.
Qed.

Theorem conj_AbstrHF_TMGDTJvWEGTHGLFFtNc4o4kWHJJA6pucvnG: (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> ain a2 a3 -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (~ ain a3 a2) -> ain a2 (asing a2) -> ain (asing a1) (asm (apow a2) a2) -> (~ (a1 = asing a2)) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ ain (asing a2) a3) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain a0 (apow (apow (asing a1))) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> (~ ain a0 (asing a3)) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> asubq (asm a2 (asing a1)) a1 -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (asm a4 (asing a3)) a3 -> asubq a3 (aun (apow a2) (asing (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> aal3 (asm (apow a2) (apow (asing a2))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMJgXHWVF6r42gFhkvZ26DjzDiTa8PdP5Ne: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> ain a0 a2 -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (~ ain a1 (apow (asing a2))) -> (~ (a2 = apow a2)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (~ (asm a3 (asing a1) = a3)) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> (~ ain a3 (asing (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain a0 (apow (asm a3 (asing a1))) -> ain a3 (aun (asing a1) (asing a3)) -> (~ ain (asm a3 (asing a1)) a4) -> (~ ain (apow a2) a4) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> ain a3 (asm a4 a2) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> asubq a2 (asm a4 (asing a2)) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (apow (asing a2))) (asing a2)) -> asubq a3 (asm a4 (asing a3)) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (~ aal2 (asing a3)) -> (~ aal5 a4) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal5 (aun (asing (asing a1)) a4) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex2 (asm a4 a2) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex5 (aun (apow a2) (asing (apow a2))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)).
admit.
Qed.

Theorem conj_AbstrHF_TMTV4EugiZqzLBHsjmW2SRS62diBSVifk2k: (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> asubq a2 a3 -> ain a1 (aun (asing a1) (asing (asing a1))) -> (~ (a0 = asing a1)) -> (~ ain a1 (asing a2)) -> (~ (a0 = asm (apow a2) a2)) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ asubq a2 (asing a1)) -> (~ ain a0 (asm (apow a2) a2)) -> (~ (a1 = apow (asing a1))) -> (~ (asing a1 = aun (asing a1) (asing (asing a1)))) -> (~ (asing a1 = apow a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ ain (asing a2) (apow a2)) -> (~ ain (asing a2) (asm a3 (asing a1))) -> (~ ain a3 (asm a3 (asing a1))) -> (~ (asing a2 = asm a3 (asing a1))) -> (~ (a3 = asm (apow a2) a2)) -> (~ (asm a3 (asing a1) = apow a2)) -> ain (asing a2) (asing (asing a2)) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> ain a0 (apow (asm a3 (asing a1))) -> ain a3 (asm a4 (asing a1)) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal2 a1) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> aal5 (aun (asing (asing a2)) a4) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex3 (asm a4 (asing a2)) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)).
admit.
Qed.

Theorem conj_AbstrHF_TMbLdkxFu9PXdmfTKKUmFafxM8hXWzPoLWD: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> ain a0 a1 -> ain a3 a4 -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (~ (a0 = a2)) -> (~ asubq a1 (asing a2)) -> ain a2 (apow a2) -> ain a2 (asm (apow a2) (apow (asing a2))) -> (~ ain a3 (asing a1)) -> (~ (a1 = asing (asing a1))) -> (~ asubq a2 (asm a3 (asing a1))) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ (asing a1 = apow a2)) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ ain (asing (asing a1)) a3) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> (~ ain (asing a2) a4) -> ain a0 (aun (asing a2) (apow (asing a2))) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> (~ ain a0 (asm a4 a2)) -> ain a3 (asm a4 a2) -> ain a3 (asm a4 (asing a1)) -> ain a0 (aun (asing (asing a2)) a4) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asing a1) (asm a2 (asing a0)) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> (asm a4 (asing a3) = a3) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal5 (apow a2)) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal2 (asm a4 a2) -> aal5 (aun a4 (asing (apow a2))) -> aex2 a2 -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex3 (asm a4 (asing a3)) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMbuMmpZFDHYAQTpYH6F2E6R652GJWfGRQM: (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> ain a2 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ asubq a1 a0) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ ain (asing a1) a0) -> ain a0 (apow (asing a1)) -> ain a0 (asm a3 (asing a1)) -> (~ asubq a1 (asing a2)) -> ain a2 (asm a3 (asing a1)) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ ain (asing (asing a1)) a2) -> (~ (asing a1 = asm (apow a2) a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> asubq a3 (apow a2) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain a2 (aun a3 (asing (asing a2))) -> (~ ain a2 (asing a3)) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> ain a1 (aun a2 (asing (apow a2))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> asubq a4 (aun (asing (asing a1)) a4) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq a2 (asm a3 (asing a2)) -> (asm (asm a3 (asing a1)) (asing a2) = a1) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal2 (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal4 a3) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal4 a4 -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex2 a2 -> aex4 (aun a3 (asing (asing a2))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24).
admit.
Qed.

Theorem conj_AbstrHF_TMQ2t5CfdU1Jr6pXgdhXDjusXzXBXWNmLMc: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> ain a0 a1 -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, ain X24 (apow (asing X25)) -> ((X24 = a0) \/ (X24 = asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> ain a1 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) (asm (apow a2) a2) -> (~ asubq (asing a1) (asing a2)) -> (~ ain a1 (asing (asing a1))) -> (~ (a1 = asing (asing a1))) -> (~ (asing a1 = a3)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (apow a2) (asing a2)) -> (~ asubq (apow a2) (asing a2)) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> ain a0 (apow (asm a3 (asing a1))) -> ain a3 (asm a4 (asing a2)) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain (apow a2) (aun a1 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> ain a1 (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq (asm a2 (asing a1)) a1 -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (apow (asing a2)) (aun (asing (asing a2)) a4) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (~ aal3 a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal3 (apow (asing a2))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal3 (aun a2 (asing (apow a2))) -> aal4 a4 -> aal5 (aun (asing (asing (asing a1))) a4) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> aex4 (apow a2) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))).
admit.
Qed.

Theorem conj_AbstrHF_TMH588FyWvVCMJ4usYFD53gxAUshdWE1eto: (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> ain a0 a3 -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> (aal3 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> ain a0 (asm a3 (asing a1)) -> ain a1 (asm (apow a2) (asing a2)) -> (~ ain a2 (apow (asing a1))) -> (~ ain (asing a1) (apow (asing a2))) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ ain a2 (asing (asing a1))) -> (~ (asing a1 = asm a3 (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (~ ain (apow a2) (apow a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ (a1 = apow a2)) -> (~ (asing a2 = asm a3 (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> ain (asing a2) (apow (asing a2)) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> ain a1 (aun a3 (asing (asing a2))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> ain a3 (asm a4 (apow (asing a2))) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (apow a2) (asing (apow a2)) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain a0 (aun a3 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a3 (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal3 (apow (asing a2))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal5 (aun a4 (asing (apow a2))) -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex5 (aun (asing (asing a1)) a4) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> (~ ain a3 (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMdSFo3JLWqextQ6qtunre3aiU17NL32Hd9: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> asubq a3 a4 -> (~ ain a1 (apow (asing a1))) -> (~ ain a2 (apow (asing a2))) -> (~ asubq (asm (apow a2) a2) a2) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ (asing a1 = a3)) -> (~ ain (apow a2) (asing (asing a1))) -> (~ asubq (apow a2) (asing (asing a1))) -> (~ ain a3 (apow a2)) -> (~ (a2 = apow a2)) -> asubq (asm a3 (asing a1)) (apow a2) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing a2) (asing a3)) -> ain a0 (aun a1 (asing a3)) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> (~ ain a3 (asing (apow a2))) -> ain (apow a2) (aun a1 (asing (apow a2))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> ain a0 (aun a4 (asing (apow a2))) -> ain a3 (aun a4 (asing (apow a2))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (asm a4 (asing a2)) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> (asm a4 (asing a3) = a3) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) a4 -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal2 (asing a3)) -> (~ aal2 (asing (apow a2))) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal3 (asm a4 a2)) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (~ aal5 a4) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> aal2 (asm (apow a2) (apow (asing a1))) -> aal2 (apow (asing (asing a1))) -> aal3 a3 -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex5 (aun (asing (asing (asing a1))) a4) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal3 (apow (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMcXtGjcyEEiY4RE4DSCuTzs2SqDcPA2q3R: (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> (~ (a0 = asm a3 (asing a1))) -> (~ (a1 = apow (asing a1))) -> (~ ain (asing a2) a2) -> (~ (asing a1 = asm a3 (asing a1))) -> (~ (asing a1 = apow a2)) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (~ (asing a2 = a3)) -> (~ (asm a3 (asing a1) = a3)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> (~ (asing a2 = apow a2)) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain a0 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal3 (apow (asing a2))) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (aun a1 (asing a3)) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> (~ (asing (asing a1) = apow (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMbBYUFiBKojfgoWad2vSkJiWVLRgVptnx1: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, (aun X24 X25 = aun X25 X24)) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (~ (a0 = a3)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> ain a1 (aun (asing a1) (asing (asing a1))) -> (~ asubq a1 (asing a2)) -> ain a2 (asm (apow a2) (apow (asing a1))) -> (~ (asing a1 = asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (a2 = asm (apow a2) a2)) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> asubq (asm a3 (asing a1)) (apow a2) -> (~ (a3 = asm (apow a2) a2)) -> (~ (asm (apow a2) a2 = apow a2)) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (apow a2) (asing (asing a2))) -> ain a1 (apow (asm a3 (asing a1))) -> ain a0 (aun a1 (asing a3)) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> ain a1 (asm a4 (apow (asing a2))) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (asing a1) (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> asubq a2 (asm a3 (asing a2)) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1.
admit.
Qed.

Theorem conj_AbstrHF_TMJDs45bqgjhKh6vSrt2V5FxczDbyt3J3sT: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (~ (a0 = a1)) -> ain (asing a1) (asing (asing a1)) -> ain a1 (asm (apow a2) (apow (asing a1))) -> ain (asing a1) (apow (asing a1)) -> (~ asubq (apow a2) (asing (asing a1))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ (a2 = asm (apow a2) a2)) -> (~ asubq (apow a2) (asing a2)) -> (~ (a1 = asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> (~ (asm a3 (asing a1) = a3)) -> (~ (a3 = asm (apow a2) a2)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ (asm a3 (asing a1) = apow a2)) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> ain a0 (aun (asing a1) (apow (asing a2))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain a3 (asing a3) -> ain a0 (asm a4 (asing a2)) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain a2 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain a0 (aun a4 (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (asm a2 (asing a1) = a1) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> (asm (asm a4 a2) (asing a2) = asing a3) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> (asm a4 (asing a3) = a3) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal2 (asing a2)) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> aal2 (asm a3 (asing a1)) -> aal2 (apow (asing (asing a1))) -> aal4 (aun a3 (asing (asing a2))) -> aex2 (asm a3 (asing a1)) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)).
admit.
Qed.

Theorem conj_AbstrHF_TMGdW9rwZFbvv6QqhPJNv74sDn7CANe3n5L: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> ain a3 a4 -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 (asm X24 (asing X25)) -> aal5 X24) -> (~ (a1 = a2)) -> (~ asubq a2 a0) -> ain a0 (apow a2) -> (~ (a0 = asm a3 (asing a1))) -> ain (asing a1) (apow (asing a1)) -> asubq a1 (apow (asing a1)) -> (~ ain a1 (asm (apow a2) a2)) -> (~ ain (asing a2) a2) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ (asing a1 = a3)) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ (a2 = asing a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> ain a3 (asm a4 (apow (asing a2))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (apow a2) (asing (apow a2)) -> ain a0 (aun a1 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq a4 (aun a4 (asing (apow a2))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal2 (asing a3)) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> aal4 (aun a3 (asing (asing a2))) -> aex2 (asm a3 (asing a1)) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex4 (aun a3 (asing (asing a2))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))).
admit.
Qed.

Theorem conj_AbstrHF_TMVeAcQAMwMjQjeRk6224cgS5a5WYZP6FEe: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (~ ain a2 a2) -> ain a1 (asm (apow a2) (apow (asing a1))) -> (~ (a1 = asing a1)) -> ain a2 (asm (apow a2) (asing a1)) -> ain a0 (apow (asing a2)) -> (~ ain (asing a2) a2) -> (~ (asing a1 = asm (apow a2) a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (~ (asing (asing a1) = a3)) -> (~ (asing a2 = a3)) -> asubq a3 (apow a2) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> ain a0 (apow (asm a3 (asing a1))) -> ain a3 (asing a3) -> (~ ain (asm (apow a2) a2) a4) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> (~ asubq (aun a3 (asing (asing a2))) a3) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> asubq a4 (aun (asing (asing a1)) a4) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (asm a2 (asing a0) = asing a1) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> asubq a3 (asm a4 (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal2 (asing a3)) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal3 (aun a1 (asing a3))) -> (~ aal4 (asm (apow a2) (asing a1))) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (apow (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal3 a3 -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aal4 (aun a3 (asing (apow a2))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (aun (asing a3) (asing (apow a2))) -> aex3 a3 -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex4 (aun a3 (asing (asing a2))) -> aex3 (asm a4 (asing a3)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))).
admit.
Qed.

Theorem conj_AbstrHF_TMbNiSf8u6GdKrJ8D3BkN3dgFwPVZin4wpw: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (~ asubq a3 a2) -> asubq (asing a1) a2 -> (~ (a0 = asm a3 (asing a1))) -> (~ ain a2 (asing a1)) -> ain a0 (apow (asing a2)) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ ain (asing a2) (asing (asing a1))) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (~ (a2 = asing (asing a1))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ ain a3 (apow a2)) -> (~ (a2 = asm (apow a2) a2)) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asing a1) a4) -> ain a1 (aun (asing a1) (asing a3)) -> ain a2 (asm a4 (apow (asing a2))) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq a4 (aun (asing (asing a2)) a4) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> asubq (asm (asm a4 (asing a2)) (asing a1)) (aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> asubq (asm a4 (asing a3)) a3 -> asubq a3 (asm a4 (asing a3)) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> aal4 (aun a3 (asing (asing a2))) -> aex2 (asm a3 (asing a1)) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2))) (asm a4 (asing a2)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> (forall X24:set, (~ aal2 (asing X24))).
admit.
Qed.

Theorem conj_AbstrHF_TMUhRdeP8UWevuTWMCqV6YDfMk12bV54EpT: (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> ain a3 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (~ ain a3 a2) -> (~ ain a3 a3) -> (~ asubq a3 a2) -> (~ (a2 = a3)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (~ ain (asing a1) a2) -> ain (asing a1) (asm (apow a2) a2) -> (~ (a0 = asing (asing a1))) -> (~ ain a1 (asing a2)) -> (~ ain (asing a2) a1) -> (~ ain a2 (asing a1)) -> asubq a1 (asm a3 (asing a1)) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ ain (asing a2) (asing (asing a1))) -> (~ (asing a1 = asm a3 (asing a1))) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ (a2 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (asing a2 = apow a2)) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain (apow a2) (apow (asing a2))) -> ain a0 (asm a4 (asing a1)) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain a2 (aun a3 (asing (asing a2))) -> (~ ain a2 (aun a1 (asing a3))) -> (~ ain (asm a3 (asing a1)) a4) -> ain a1 (asm a4 (apow (asing a2))) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (~ aal2 (asing a1)) -> (~ aal2 (asing (asing a1))) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> aal2 (asm a3 (asing a1)) -> aal3 (asm (apow a2) (apow (asing a2))) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal4 a4 -> aal5 (aun (asing (asing a1)) a4) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex3 (asm a4 (asing a2)) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> ain (asing a1) (apow (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMJdJWy8dTUzZ1vterRDDdShT7JynQw4RSV: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> ain a2 a4 -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (~ asubq a2 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (~ asubq a1 (asing a1)) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ ain (asing a1) (apow (asing a2))) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (~ asubq (asing a2) a2) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (~ ain (asing a1) a3) -> (~ (a2 = asing a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ (asm a3 (asing a1) = a3)) -> asubq a3 (apow a2) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a0 (aun a3 (asing (asing a2))) -> ain a0 (apow (asm a3 (asing a1))) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> (~ ain (asing (asing a1)) a4) -> adisjoint (apow (asing a1)) (asm a4 a2) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal4 (asm (apow a2) (asing a2))) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal2 (asm (apow a2) (apow (asing a1))) -> aal4 (aun a3 (asing (asing a2))) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (asm a3 (asing a2)) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex4 (apow a2) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> aex2 (asm (apow a2) (apow (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMWmATEyFabRsd54HDsWqrMQpa9cjpdGgMY: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (~ asubq a2 a0) -> (~ asubq a1 (asing a1)) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> (~ (a0 = asing a1)) -> ain a2 (apow a2) -> (~ ain a2 (apow (asing a2))) -> ain a2 (asm (apow a2) (apow (asing a2))) -> ain a0 (apow (asing a2)) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ (a2 = asm a3 (asing a1))) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ ain (asing a2) a3) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> (~ (asm a3 (asing a1) = apow a2)) -> ain a1 (apow (apow (asing a1))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (asm a4 (asing a1)) -> ain a3 (asm a4 a2) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asing a1) (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> (X24 = aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal2 (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal4 (aun a3 (asing (asing a2))) -> aex3 a3 -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))).
admit.
Qed.

Theorem conj_AbstrHF_TMTc23DtwcBUtX9n77ytmCEzAVFzehh1ovf: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ ain a1 a0) -> asubq a2 a3 -> (~ (a0 = a2)) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (~ ain a1 (asing a2)) -> (~ ain a2 (apow (asing a1))) -> ain a2 (asm (apow a2) (asing a1)) -> ain a0 (apow (asing a2)) -> (~ asubq (asing a1) (asing a2)) -> (~ (asing a1 = apow a2)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ (a1 = asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> (~ ain a1 (asing (apow (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> ain a3 (aun a1 (asing a3)) -> (~ ain (asing a1) (asm a4 a2)) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq a3 (aun a3 (asing (asing a2))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (asm a2 (asing a1) = a1) -> asubq a2 (asm a3 (asing a2)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> (asm a4 (asing a3) = a3) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal2 (asing (apow a2))) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (~ aal5 a4) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> aal2 (asm (apow a2) a2) -> aal3 (asm (apow a2) (asing a1)) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal5 (aun (asing (asing a2)) a4) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 (asm a4 a2) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex3 (asm (apow a2) (asing a0)) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMadMbq3yPRshETXtJkYLzaGTzNkx7JxXtZ: (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> ain a0 a3 -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (~ ain a3 a3) -> (~ asubq a3 a2) -> asubq a3 a4 -> (~ (a1 = a2)) -> (~ asubq a1 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> (~ ain a0 (asing a2)) -> ain a2 (asing a2) -> ain a1 (asm (apow a2) (apow (asing a2))) -> ain a2 (asm (apow a2) (apow (asing a1))) -> (~ ain (asing a1) (asing a1)) -> (~ (asing a1 = asm a3 (asing a1))) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ (asing a1 = asm (apow a2) a2)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ ain a3 (asing a2)) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> (~ ain a0 (asing (apow (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> ain a0 (asm a4 (asing a1)) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> asubq a2 (apow (asm a3 (asing a1))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal3 (aun (asing a1) (asing a3))) -> (~ aal4 a3) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (aun a1 (asing a3)) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex3 (asm a4 (asing a0)) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> asubq (asing a1) a2.
admit.
Qed.

Theorem conj_AbstrHF_TMJrg2qSjbpFeFVbnjozf51Bgv83twLCEy4: (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (~ ain a0 a0) -> (~ ain a2 a0) -> asubq a1 a2 -> asubq a3 a4 -> ain (asing a1) (asing (asing a1)) -> ain (asing a1) (apow a2) -> (~ asubq a1 (asing a2)) -> (~ (a1 = asing (asing a1))) -> (~ ain (apow a2) a2) -> (~ ain a2 (asing (asing a1))) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ (a1 = apow a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) a2) (aun a4 (asing (asm (apow a2) a2))) -> (~ ain a3 (asing (apow a2))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq (asm a3 (asing a1)) (aun (asing a2) (apow (asing a2))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> asubq (asm (apow a2) (asing a0)) (asm (apow a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> (asm (asm a4 a2) (asing a3) = asing a2) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal2 (asing (asing a1))) -> (~ aal2 (asing a2)) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal3 (asm (apow a2) (apow (asing a2))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))).
admit.
Qed.

Theorem conj_AbstrHF_TMdGmc8hu3b9pLcNajdNrVendjWfpx3nUTQ: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, asubq X24 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, (~ aal3 (aun (asing X24) (asing X25)))) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain a0 (apow (asing a1)) -> (~ (a0 = asing a2)) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a1 (asm a3 (asing a1))) -> (~ ain a1 (asm (apow a2) a2)) -> (~ (a1 = apow (asing a1))) -> (~ asubq (asing a2) a2) -> (~ asubq a2 (asm a3 (asing a1))) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) a3) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (~ ain (asing (asing a1)) a3) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> (~ (a3 = asm (apow a2) a2)) -> (~ (asm (apow a2) a2 = apow a2)) -> ain a0 (apow (asing (asing a1))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> ain a0 (aun a3 (asing (asing a2))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> (~ ain (asing (asing a1)) a4) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a0 (aun a4 (asing (apow a2))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> asubq (asing a1) (asm (asm (apow a2) (apow (asing a1))) (asing a2)) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> asubq (asm (asm (apow a2) (asing a1)) (asing a2)) (apow (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal3 (asm a4 a2)) -> (~ aal5 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun (asing (asing a1)) a4) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex2 (asm (apow a2) a2) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMUbfv2JydCNiFpqUdJ4pPfjSGuU3MzLip7: ain a0 a1 -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X25 X26 -> asubq (aun X24 X25) (aun X24 X26)) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (~ (a2 = a3)) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> asubq (asing a1) a2 -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ asubq a2 (asing a1)) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (~ asubq (asing a2) a2) -> (~ ain a2 (asing (asing a1))) -> (~ ain (asing a2) (asing (asing a1))) -> (~ (asing a1 = asm a3 (asing a1))) -> (~ (asing a1 = apow a2)) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a2) a3) -> (~ (asing (asing a1) = a3)) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> ain a2 (aun a3 (asing (asing a2))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> ain a0 (aun a3 (asing (apow a2))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1)) = apow (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> asubq (asm a3 (asing a1)) a4 -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> aal3 a3 -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal3 (asm a4 (asing a2)) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMYSjSAmGiU93m6Mu5ebXkC6KPhsHURKP7f: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> ain a0 a1 -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (~ ain a2 (apow (asing a2))) -> (~ asubq (asing a1) (asing (asing a1))) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ ain (asing a2) a2) -> (~ ain (asm a3 (asing a1)) a2) -> (~ asubq (asm (apow a2) a2) a2) -> asubq (asing (asing a1)) (apow (asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (~ ain (asing a2) (asm (apow a2) a2)) -> (~ ain a0 (asing (apow (asing a1)))) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain a3 (asing (apow a2))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (asing a2))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> aal3 (asm a4 (asing a1)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex5 (aun a4 (asing (apow a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a1)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMZ8VVUuueeS1JWjsS5krtHKkeMozNoMrRB: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> ain a1 a2 -> ain a0 a3 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a2 a2) -> asubq a1 a2 -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (~ asubq a1 (asing a1)) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ ain a2 (asing a1)) -> ain a2 (asm (apow a2) (apow (asing a2))) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ (a1 = apow (asing a1))) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ ain (apow (asing a1)) a3) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> ain a0 (apow (asing (asing a1))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> ain a3 (asm a4 (asing a2)) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain a1 (aun a2 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> (~ asubq (aun a3 (asing (apow a2))) a3) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal2 a1) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aex2 a2 -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex4 (apow a2) -> aex3 (asm (apow a2) (asing a0)) -> aex5 (aun (asing (apow (asing a1))) a4) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMNgPFLP7cB5K45qu8SrmfRwmWmYUCR1Vmy: (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> ain a2 a3 -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> ain (asing a1) (apow a2) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ (asing a1 = a2)) -> (~ (a2 = asing (asing a1))) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> ain a0 (aun (asing a2) (apow (asing a2))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain a0 (aun a3 (asing (asing a2))) -> (~ ain a2 (aun a1 (asing a3))) -> ain a3 (aun a1 (asing a3)) -> (~ ain (asing (asing a1)) a4) -> (~ ain (apow a2) a4) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain (asing a2) (asing (apow a2))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (asing a1)) (asing a0)) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal4 (asm a4 (asing a2))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (aun a3 (asing (apow a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMXmZm59zjDXrEMtJS3XGSEtNAKc9CxiprQ: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (~ (asing a1 = a2)) -> (~ ain (asing (asing a1)) a2) -> (~ ain (asm a3 (asing a1)) a2) -> (~ asubq a3 (asing a2)) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ (asing (asing a1) = a3)) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> ain (asing a2) (asing (asing a2)) -> ain a1 (aun a2 (asing (apow a2))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> asubq (asing a2) (asm (asm a4 a2) (asing a3)) -> (asm (asm a4 a2) (asing a3) = asing a2) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> asubq (asm a4 (asing a3)) a3 -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 (aun a1 (asing a3)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex3 (asm a4 (asing a1)) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex3 (asm (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> ain a2 (asm a3 (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMZFQcusAgjv7fATw2dM7f92iPQWTD6VWe7: ain a0 a4 -> ain a1 a4 -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (~ ain a2 a2) -> (~ (a0 = a3)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> ain a1 (aun (asing a1) (asing (asing a1))) -> (~ (a0 = asing a2)) -> (~ (a0 = asm a3 (asing a1))) -> ain (asing a1) (apow (asing a1)) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> ain a2 (asm (apow a2) (apow (asing a1))) -> (~ asubq a2 (asing a2)) -> (~ ain a1 (asing (asing a1))) -> (~ ain a2 (asing (asing a1))) -> (~ (asing a1 = asing (asing a1))) -> (~ (a2 = asing a2)) -> (~ asubq a3 (asing a2)) -> (~ ain (asing a2) (asm a3 (asing a1))) -> (~ (a1 = apow a2)) -> (~ (asm (apow a2) a2 = apow a2)) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain a0 (apow (asing (asing a1))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asing a2) a4) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain a1 (asm a4 (asing a2)) -> (~ ain a3 (aun (apow a2) (asing (apow a2)))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (~ asubq (asm a4 (asing a2)) a2) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq a2 (asm a3 (asing a2)) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1) = aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (~ aal5 (apow a2)) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aex2 a2 -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (asm a4 (asing a0)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))).
admit.
Qed.

Theorem conj_AbstrHF_TMTNksrZ4UQGLJVUfBEgUxfkdcvZfxezJco: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> ain a0 a3 -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> asubq a1 a2 -> asubq a3 a4 -> (~ (a1 = a2)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> ain a2 (apow a2) -> (~ ain a1 (asm (apow a2) (asing a1))) -> (~ ain (asm a3 (asing a1)) a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (a1 = asm (apow a2) a2)) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> asubq a3 (apow a2) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> (~ (a3 = asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> (~ ain a3 (asm (apow a2) (asing a1))) -> ain a1 (apow (apow (asing a1))) -> (~ ain a1 (asing (apow (asing a1)))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> (~ ain (asing a2) (asing a3)) -> ain a3 (asing a3) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (~ asubq (asm a4 (asing a2)) a2) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> asubq a2 (asm a3 (asing a2)) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal2 (asing (apow a2))) -> (~ aal3 (apow (asing a1))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> aal2 (apow (asing (asing a1))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMZnZCzUMgG4kFDtduRLt4zUAsMedxNApEf: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, (aal5 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal4 X25))))) -> (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> ain a0 a1 -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal2 X24 -> aal2 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (~ ain a1 a0) -> (~ asubq a3 a2) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain a1 (apow a2) -> (~ ain (asing a1) a2) -> ain (asing a1) (apow (asing a1)) -> (~ ain (apow a2) (asing (asing a1))) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (~ (a2 = apow (asing a1))) -> (~ (asing (asing a1) = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (~ ain (apow a2) (apow a2)) -> (~ ain a3 (asm a3 (asing a1))) -> (~ (asing (asing a1) = a3)) -> (~ (asing a2 = apow a2)) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> (~ ain a3 (asing (asing a2))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain a0 (aun a1 (asing a3)) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> (~ ain a0 (asing (apow a2))) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> asubq a2 (apow (asm a3 (asing a1))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asm a3 (asing a1)) a4 -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (~ aal2 (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> aal2 a2 -> aal3 a3 -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMMaBexEUkyeGx7xEFHiCNCfPP35G3QDsEw: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (ain X24 a2 <-> ((X24 = a0) \/ (X24 = a1)))) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> ain a0 a4 -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (~ ain a1 a0) -> (~ (a1 = a3)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> ain a1 (asm (apow a2) (apow (asing a2))) -> ain (asing a1) (asm (apow a2) (asing a2)) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ (a1 = asing (asing a1))) -> (~ ain (asing a2) a2) -> (~ (asing (asing a1) = apow (asing a1))) -> (~ asubq a3 (asing a2)) -> (~ ain (apow (asing a1)) a3) -> (~ (a0 = apow a2)) -> (~ ain (asing a2) (asm (apow a2) a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (apow a2) (apow (asing a2))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> (~ ain a1 (asing a3)) -> ain a1 (asm a4 (asing a2)) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain a0 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a3 (aun a4 (asing (apow a2))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> asubq a2 (asm a4 (asing a2)) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = asing a1)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (~ aal2 (asing a1)) -> (~ aal3 (asm a4 a2)) -> (~ aal4 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2))))) -> (~ aal5 a4) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun a4 (asing (apow a2)))) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal4 (apow a2) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex2 a2 -> aex2 (aun (asing (asing a1)) (asing a3)) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))).
admit.
Qed.

Theorem conj_AbstrHF_TMdHbJqEWQpU49Y2KUMVZiNBMzTGaCcdDWJ: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ asubq a1 (asing a2)) -> (~ ain a1 (apow (asing a2))) -> (~ (a0 = apow (asing a1))) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ ain (apow a2) a2) -> (~ (asing a1 = a3)) -> (~ ain (apow a2) (asing (asing a1))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ (a1 = apow a2)) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ (apow (asing a1) = a3)) -> (~ (asing a2 = a3)) -> (~ ain (asing a2) (asm (apow a2) a2)) -> ain a0 (aun a3 (asing (asing a2))) -> ain a1 (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> ain a1 (asm a4 (asing a2)) -> (~ ain (apow (asing a1)) a4) -> (~ ain (asm a3 (asing a1)) a4) -> (~ ain a0 (asm a4 a2)) -> ain (apow a2) (asing (apow a2)) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> asubq a3 (aun a3 (asing (apow a2))) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq a2 (asm a3 (asing a2)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> aal3 (asm (apow a2) (apow (asing a2))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aal5 (aun a4 (asing (apow a2))) -> aex2 (apow (asing a1)) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24).
admit.
Qed.

Theorem conj_AbstrHF_TMYMYZS2iytpHggiwvbeZpoEczMLbJuFGz4: (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (a1 = asing a0) -> (~ asubq a3 a2) -> (~ (a1 = a2)) -> (~ ain (asing (asing a1)) a2) -> (~ asubq (asing a2) a2) -> (~ asubq a2 (asm a3 (asing a1))) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ (asing a1 = a3)) -> (~ (asing a1 = asm (apow a2) a2)) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (~ ain (asing a1) a3) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ (asm (apow a2) a2 = apow a2)) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> adisjoint (apow (asing a1)) (asm a4 a2) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> ain a2 (aun (asing (asing a2)) a4) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq a3 (aun a3 (asing (apow a2))) -> (~ asubq (aun a4 (asing (apow a2))) a4) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (asm (apow a2) (asing a0) = asm (apow a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> (asm (asm a4 a2) (asing a2) = asing a3) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq a2 (apow (asm a3 (asing a1))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal5 (apow a2)) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> aal2 (apow (asing (asing a1))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex2 (apow (asing a2)) -> aex2 (asm a4 a2) -> aex3 a3 -> aex3 (aun (asing a2) (apow (asing a2))) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aun (asm (apow a2) a2) (apow (asing a2))) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)).
admit.
Qed.

Theorem conj_AbstrHF_TMQRLJ7sYx2PimP8CcXQ32VTiERYvtQnshR: (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> ain a3 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ (a1 = a3)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (~ asubq a2 (asing a1)) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ ain a1 (asm (apow a2) a2)) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (~ asubq (apow a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (apow a2) (apow a2)) -> (~ ain (apow a2) a3) -> asubq (asm (apow a2) (apow (asing a1))) (asm (apow a2) (apow (asing a2))) -> (~ (asing a2 = apow a2)) -> ain a0 (apow (asing (asing a1))) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> (~ ain a3 (asing (asing a2))) -> (~ ain (apow a2) (asing (asing a2))) -> (~ ain a3 (apow (asing a2))) -> (~ ain (asing a1) a4) -> ain a2 (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> (~ ain a2 (asing a3)) -> ain a1 (aun (asing a1) (asing a3)) -> ain a3 (asm a4 (asing a1)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain a1 (aun a3 (asing (apow a2))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (asm a4 (asing a0)) (asm a4 (apow (asing a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal3 (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal4 (asm a4 (asing a2))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal3 (asm (apow a2) (asing a2)) -> aex2 (apow (asing a1)) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex3 (aun a2 (asing (apow a2))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (~ (a3 = asm (apow a2) a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMWPPBfBYaYBhEdyn4K7adicow5YY8Bnwus: (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> ain a3 a4 -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (~ asubq a4 a3) -> (~ asubq a2 a0) -> (~ ain (asing a1) a0) -> (~ ain (asing a1) a1) -> (~ ain a1 (asing a2)) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ asubq (asing a2) a2) -> (~ asubq a2 (asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (~ (a2 = asm a3 (asing a1))) -> asubq (asm a3 (asing a1)) (apow a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain a1 (aun a3 (asing (asing a2))) -> (~ ain a0 (asing a3)) -> ain a2 (asm a4 a2) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain (asing a1) (asing (apow a2))) -> ain a0 (aun a2 (asing (apow a2))) -> ain a0 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> asubq a2 (asm a4 (asing a2)) -> asubq (aun a3 (asing (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing a2) (apow (asing a2))) (asm a3 (asing a1))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal2 (asing a2)) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 (aun a1 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex2 (asm a3 (asing a2)) -> aex3 (aun a2 (asing (apow a2))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMS8TgJvo8yxTN9VVVnpk8wSTratX1RM7SM: (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 (asm X24 (asing X25)) -> aal5 X24) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> ain a2 (asing a2) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> ain (asing a1) (asm (apow a2) (asing a2)) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> asubq (asm a3 (asing a1)) (asm (apow a2) (asing a1)) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> ain a1 (apow (apow (asing a1))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain a3 (asm a4 a2) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain a1 (aun a2 (asing (apow a2))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (asm a3 (asing a2) = a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal3 (asm a4 (asing a1)) -> aal4 a4 -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm a4 (asing a1)) -> aex3 (asm (apow a2) (asing a0)) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)).
admit.
Qed.

Theorem conj_AbstrHF_TMRiJpkmja3iMN5iw15ga38d3akrwd53aRa: (forall X24:set, (~ ain X24 X24)) -> ain a2 a4 -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> asubq a3 a4 -> (~ asubq a4 a3) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (~ ain (asing a1) a0) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ ain (asm a3 (asing a1)) a2) -> (~ (asing a1 = apow a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ (asing a2 = apow a2)) -> (~ (a3 = apow a2)) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain (asm a3 (asing a1)) (aun a3 (asing (asm a3 (asing a1)))) -> ain a1 (aun (asing a1) (asing a3)) -> ain a3 (asm a4 (asing a1)) -> ain a1 (asm a4 (apow (asing a2))) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> ain a0 (aun (asing (asing a2)) a4) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a0 (aun a4 (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq a4 (aun (asing (asing a1)) a4) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a3)) -> ain X24 a2) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> (asm (asm a4 a2) (asing a2) = asing a3) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal2 a1) -> (~ aal2 (asing a1)) -> (~ aal2 (asing a2)) -> (~ aal4 (asm a4 (asing a2))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aex2 (asm a4 a2) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aun a3 (asing (apow a2))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1)) (aun (apow (asing a2)) (asing a3)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMXhYqYQ5GcJ5cjdGyAxx82VGmeczpck5Wp: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> ain a1 a3 -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (~ ain a0 a0) -> (~ ain a1 (asing a2)) -> ain a1 (asm (apow a2) (asing a2)) -> asubq a1 (apow (asing a1)) -> ain a2 (asm (apow a2) (asing a1)) -> (~ (asing a1 = asm a3 (asing a1))) -> (~ ain (apow a2) (asing (asing a1))) -> asubq (asing (asing a1)) (apow (asing a1)) -> (~ ain (asing a1) a3) -> (~ asubq (apow a2) (asing (asing a1))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ ain a3 (apow a2)) -> (~ (a2 = asing a2)) -> (~ ain (asing (asing a1)) a3) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (~ (asing a2 = a3)) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (asing (asing a2)) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> (~ ain (asing a1) a4) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain a0 (apow (asm a3 (asing a1))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> (~ ain a0 (asing a3)) -> (~ ain a2 (asing a3)) -> (~ ain (asm a3 (asing a1)) a4) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (asm a2 (asing a0)) (asing a1) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (~ aal2 (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aex2 (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex2 (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex5 (aun (apow a2) (asing (apow a2))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))).
admit.
Qed.

Theorem conj_AbstrHF_TMWBCpmt2MB51BBEwwJK9QeiptUguXLkUbc: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> ain a0 a2 -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (~ asubq a3 a2) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain a0 (asm (apow a2) (asing a2)) -> (~ (a0 = apow (asing a1))) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a2) a2) -> (~ asubq a2 (asm a3 (asing a1))) -> (~ (asing a1 = asm a3 (asing a1))) -> (~ (asing a1 = a3)) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (~ ain a3 (apow a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ ain (apow (asing a1)) a3) -> (~ (asm a3 (asing a1) = a3)) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain a0 (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> ain a2 (asm a4 (asing a1)) -> ain a0 (aun (asing a2) (apow (asing a2))) -> ain a0 (aun a3 (asing (asing a2))) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain a2 (asm a4 a2) -> ain a2 (asm a4 (apow (asing a2))) -> ain a0 (aun (asing (asing a2)) a4) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> asubq (asm a2 (asing a0)) (asing a1) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> asubq (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a0)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal5 (apow a2)) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex3 a3 -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex5 (aun (asing (asing a2)) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> aex5 (aun a4 (asing (apow a2))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> ain a2 (asm (apow a2) (asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMa92XVesNQeVutWY78vY9c44SGXcmb84xX: (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> ain a2 a4 -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (~ (a1 = a3)) -> (~ (a2 = a3)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> ain a0 (asm a3 (asing a1)) -> ain a1 (apow a2) -> ain a0 (asm (apow a2) (asing a1)) -> (~ ain a1 (asing a2)) -> (~ (a0 = asing a2)) -> (~ (a0 = asm (apow a2) a2)) -> (~ asubq a2 (asing a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ (asing a1 = asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ ain (apow a2) (apow a2)) -> (~ ain (asm (apow a2) a2) a3) -> asubq a3 (apow a2) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain a0 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asing a1) a4) -> ain a0 (apow (asm a3 (asing a1))) -> ain a0 (asm a4 (asing a2)) -> ain a1 (asm a4 (asing a2)) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a3 (aun (asing (asing a2)) a4) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a2 (aun a4 (asing (apow a2))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (asm a3 (asing a2) = a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> asubq (asing (asing a1)) (asm (asm (apow a2) a2) (asing a2)) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq a2 (apow (asm a3 (asing a1))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal2 (asing (apow a2))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (~ aal3 (aun a1 (asing a3))) -> (~ aal4 (asm (apow a2) (asing a2))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> aal3 a3 -> aal4 (aun a3 (asing (apow a2))) -> aal5 (aun (asing (asing a2)) a4) -> aal5 (aun a4 (asing (apow a2))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aex3 (asm a4 (asing a1)) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMV1rzxq7EwipNEd3c5gYE82jhA4TWcYWTU: (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (~ asubq a2 a1) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> ain (asing a1) (asing (asing a1)) -> (~ (a0 = asing a1)) -> (~ (a1 = asing a1)) -> (~ (a0 = asing (asing a1))) -> (~ ain a1 (asing a2)) -> (~ (a0 = asm (apow a2) a2)) -> (~ ain a0 (asm (apow a2) a2)) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ (asing (asing a1) = a3)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> ain a0 (aun a1 (asing a3)) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> ain a1 (aun (asing a1) (asing a3)) -> ain a0 (asm a4 (asing a2)) -> ain a1 (asm a4 (apow (asing a2))) -> ain a3 (aun (asing (asing a2)) a4) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain a1 (aun a2 (asing (apow a2))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq a1 (asm a2 (asing a1)) -> asubq (asm a3 (asing a2)) a2 -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (apow (asing a2)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (~ aal3 (asm (asm a4 (asing a2)) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> aal2 a2 -> aal3 (aun a2 (asing (apow a2))) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain a1 (asm a3 (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMMoUpBkpuN3fBBYVdMRbKbEcTffJbqeRLJ: ain a1 a3 -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (~ asubq a4 a3) -> (~ asubq a1 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ ain (asing a1) a2) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a3 (asing a1)) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ (asing a1 = asing a2)) -> asubq (asing (asing a1)) (apow (asing a1)) -> (~ ain (asing a1) a3) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> (~ ain (asing (asing a1)) a4) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> (~ ain (asing a1) (asm a4 a2)) -> ain a2 (asm a4 a2) -> ain a3 (asm a4 (asing a1)) -> ain a0 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq a1 (asm a2 (asing a1)) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (~ aal2 (asing a1)) -> (~ aal3 a2) -> (~ aal3 (apow (asing (asing a1)))) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal5 (apow a2)) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> aal3 a3 -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (apow a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMUsuHRdKvH25D8fRMBcjrx9jAUoe7hmo2U: (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (~ ain a1 a0) -> (~ (a1 = a2)) -> ain a0 (asm (apow a2) (asing a2)) -> ain a2 (asing a2) -> ain (asing a1) (apow a2) -> ain (asing a1) (apow (asing a1)) -> (~ ain a2 (apow (asing a2))) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (~ (asing (asing a1) = aun (asing a1) (asing (asing a1)))) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (~ (a1 = asm (apow a2) a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> ain a2 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain a3 (asing (asing a2))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> ain a1 (aun a3 (asing (asing a2))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> (~ ain (asing a1) (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain (asing a1) X24 -> ain a1 X24 -> asubq (aun (asing a1) (asing (asing a1))) X24) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> asubq (asm (apow a2) a2) (asm (asm (apow a2) (apow (asing a2))) (asing a1)) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> asubq (asm a3 (asing a1)) (aun (asing (asing a1)) a4) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal3 (aun a1 (asing a3))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> aal2 (apow (asing (asing a1))) -> aal3 (aun a2 (asing (apow a2))) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex3 (asm a4 (asing a0)) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex5 (aun (asing (apow (asing a1))) a4) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMFQnxxWTBS57bS1KSzC83hEG96eNePwQ1x: (forall X24:set, asubq X24 X24) -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, asubq (asm X24 X25) X24) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> ain (asing a1) (asm (apow a2) a2) -> ain (asing a1) (asm (apow a2) (asing a2)) -> ain a2 (asm (apow a2) a2) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ asubq (asing a1) (asing a2)) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (~ (asing (asing a1) = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (a1 = apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> (~ ain a0 (asing (apow (asing a1)))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> (~ ain a0 (asm a4 a2)) -> ain a1 (aun (asing (asing a2)) a4) -> ain (asing a2) (aun (asing (asing a2)) a4) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain a2 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (apow a2))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> asubq a4 (aun (asing (apow (asing a1))) a4) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a2 (apow (asm a3 (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> (~ aal2 (asing a2)) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal4 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1)))))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal3 (asm a4 (asing a2)) -> aal4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex2 (apow (asing a1)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex4 (aun a3 (asing (asing a2))) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a2)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)).
admit.
Qed.

Theorem conj_AbstrHF_TMJrmQBj31PzT7Z3srCKHMRtmaqR2avNXLU: ain a2 a3 -> ain a1 a4 -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ (a0 = a3)) -> (~ (a1 = a3)) -> (~ ain (asing a1) a1) -> (~ ain (asing a2) a1) -> (~ ain a0 (asm (apow a2) a2)) -> (~ ain (asing (asing a1)) a2) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> (~ ain (apow (asing a1)) a3) -> (~ (a3 = asm (apow a2) a2)) -> (~ (asm a3 (asing a1) = apow a2)) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> (~ ain a2 (asing a3)) -> ain a0 (asm a4 (asing a2)) -> ain a1 (asm a4 (asing a2)) -> (~ ain (asing (asing a1)) a4) -> ain a2 (aun (asing (asing a2)) a4) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> ain a0 (aun a4 (asing (apow a2))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1)) = aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm a4 (asing a3)) a3 -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal4 (asm a4 (asing a2))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> aal4 (apow a2) -> aal5 (aun (asing (asing a1)) a4) -> aex2 (apow (asing a1)) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex3 (asm a4 (asing a1)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> aex5 (aun (apow a2) (asing (asing a2))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ ain a3 (asing (apow a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMLdQWqTRQCVVbt3NWKBNQBs1hAPwtZ45Wg: (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X24 -> asubq X26 X25 -> asubq X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aal2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal3 X24 -> aal3 X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> asubq a3 a4 -> ain a1 (asing a1) -> ain a1 (aun (asing a1) (asing (asing a1))) -> (~ ain a0 (asing a1)) -> (~ asubq a1 (asing a1)) -> (~ ain a1 (apow (asing a1))) -> (~ ain a1 (asing a2)) -> (~ ain a2 (asing a1)) -> asubq a1 (asm a3 (asing a1)) -> ain a2 (asm (apow a2) (apow (asing a1))) -> (~ asubq a2 (asing a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (a2 = apow a2)) -> (~ (a3 = asm (apow a2) a2)) -> (~ (a3 = apow a2)) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> (~ ain (apow a2) (apow (asing a2))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain a0 (asing a3)) -> (~ ain (asing (asing a1)) a4) -> ain a3 (aun (asing (asing a2)) a4) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing a1) (apow (asing a2))) a2) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> asubq a4 (aun (asing (asing a1)) a4) -> asubq a4 (aun a4 (asing (asm (apow a2) a2))) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> asubq (asm (asm a4 (asing a1)) (asing a0)) (asm a4 a2) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> (asm a4 (asing a3) = a3) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal2 a1) -> (~ aal2 (asing a1)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aex2 (asm a3 (asing a1)) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex4 (aun (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex5 (aun (asing (asing a2)) a4) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMNugAbVuTyqd9YP1JGLtcJFCebCvqqEJr3: (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> asubq a2 a3 -> (~ asubq a2 a0) -> ain a1 (asing a1) -> ain a0 (apow a2) -> (~ asubq a1 (asing a2)) -> (~ ain a2 (apow (asing a1))) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ asubq (asing a1) (asing a2)) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ ain a1 (asm (apow a2) a2)) -> (~ ain a2 (asing (asing a1))) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ ain (asing (asing a1)) a3) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asing a1) a4) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> ain a1 (apow (asm a3 (asing a1))) -> ain a2 (asm a4 a2) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain (apow a2) (asing (apow a2)) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a3 (aun a4 (asing (apow a2))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (apow (asing a1))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> (asm (asm (apow a2) (apow (asing a1))) (asing a1) = asing a2) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> (asm (asm a4 (asing a2)) (asing a1) = aun a1 (asing a3)) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> asubq a3 (asm a4 (asing a3)) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 (asm a3 (asing a1))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> aal5 (aun (apow a2) (asing (apow a2))) -> aex2 (aun a1 (asing a3)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex4 (apow a2) -> aex3 (asm (aun a3 (asing (asing a2))) (asing a2)) -> aex4 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2)))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMYemeqJYLZjTsDfaS7aGLnbU5VGNELjNFs: (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> ain a1 a2 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, ain a0 (apow X24)) -> (forall X24:set, forall X25:set, (~ (X25 = X24)) -> (~ ain X25 (asing X24))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, (~ (X24 = X25)) -> aex2 (aun (asing X24) (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (~ ain a1 a1) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> ain a0 (asm (apow a2) (asing a2)) -> (~ ain a1 (apow (asing a1))) -> (forall X24:set, ain X24 (asing a1) -> (X24 = a1)) -> asubq a1 (asm a3 (asing a1)) -> (~ ain a2 (apow (asing a2))) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ ain a1 (asm a3 (asing a1))) -> (~ ain (asing a2) a2) -> (~ ain (apow a2) a2) -> (~ (asing a1 = a3)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (asing a2 = asm a3 (asing a1))) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> (~ ain (apow a2) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> ain a0 (apow (asm a3 (asing a1))) -> ain a1 (apow (asm a3 (asing a1))) -> (~ ain (asing a2) (asing a3)) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> (~ ain a0 (asing (apow a2))) -> (~ ain (asing a2) (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (asm a2 (asing a0) = asing a1) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> (asm (asm (apow a2) (apow (asing a1))) (asing a2) = asing a1) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> asubq (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (asm (asm a4 a2) (asing a3) = asing a2) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal7 (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aal4 (apow a2) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aex2 (aun (asing (asing a1)) (asing a3)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a0) (asing (asm a3 (asing a1))))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex3 (asm (apow a2) (asing a0)) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex5 (aun (asing (asing a2)) a4) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> ain a2 (apow a2).
admit.
Qed.

Theorem conj_AbstrHF_TMWJvB1a5q6DSVScqg9HV3iTebiL4xe4fEQ: (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> ain a1 a3 -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (~ asubq a4 a3) -> (~ asubq a1 a0) -> ain (asing a1) (apow (asing a1)) -> asubq a1 (asm a3 (asing a1)) -> (~ ain a2 (apow (asing a1))) -> (~ ain (apow a2) a2) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (~ (asing (asing a1) = apow (asing a1))) -> (~ ain (asing a2) (apow a2)) -> (~ ain (asm a3 (asing a1)) (asing a2)) -> (~ ain (apow a2) (asing a2)) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> (~ ain a0 (asm a4 a2)) -> ain a3 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain a0 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a1 (aun (asing a3) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> aal2 a2 -> aal3 (asm (apow a2) (apow (asing a2))) -> aal4 (aun a3 (asing (apow a2))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (apow (asing a2)) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex4 (apow a2) -> aex5 (aun (apow a2) (asing (asing a2))) -> aex5 (aun a4 (asing (apow a2))) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2))) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)).
admit.
Qed.

Theorem conj_AbstrHF_TMcgi6nwbbcFD9eDmACgcKFeywWqVLS5YLd: (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> ain a3 a4 -> (forall X24:set, ain X24 a4 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, forall X25:set, asubq (aun X24 X25) (aun X25 X24)) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (~ ain a1 a1) -> (~ ain a3 a3) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> ain a1 (asing a1) -> (~ (a0 = apow (asing a1))) -> (~ (a0 = asm a3 (asing a1))) -> (~ ain (asing a1) (asing a2)) -> (~ (a1 = asm a3 (asing a1))) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ ain a1 (asm a3 (asing a1))) -> (~ (asing a1 = asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> (~ ain (asing a2) (asm (apow a2) a2)) -> (~ (asm a3 (asing a1) = apow a2)) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a0 (asm a4 (asing a2)) -> (~ ain a2 (aun (apow (asing a2)) (asing a3))) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a4 (aun (asing (asing a2)) a4) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> (~ asubq (aun (apow a2) (asing (asing a2))) (apow a2)) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (~ aal2 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex5 (aun (asing (asing (asing a1))) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a3)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (asing a1) (apow (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2)))) -> (~ ain a1 (asing (apow (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMcE4YD1LuAZXeVbtRz2dfJ82VS8Fnzbm2b: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (~ asubq a1 a0) -> ain a1 (asm (apow a2) (apow (asing a1))) -> ain (asing a1) (asm (apow a2) a2) -> (~ (a0 = asing (asing a1))) -> ain a1 (asm (apow a2) (asing a2)) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain (apow a2) a2) -> (~ ain (apow a2) (asing (asing a1))) -> (~ (a2 = asm (apow a2) a2)) -> (~ ain a3 (asm a3 (asing a1))) -> asubq a3 (apow a2) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (apow (asm a3 (asing a1))) -> ain a3 (asm a4 (asing a2)) -> ain a2 (asm a4 a2) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain a2 (aun (asing (asing a2)) a4) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq a4 (aun a4 (asing (apow a2))) -> asubq a3 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing a3))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (~ (X24 = a1)) -> ain X24 (aun a1 (asing a3))) -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (aun (asing a1) (apow (asing a2))) (aun (aun (asing a1) (asing (asing a1))) (apow (asing a2))) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (apow a2)) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> aal2 (apow (asing (asing a1))) -> aal3 (aun a2 (asing (apow a2))) -> aal4 a4 -> aal5 (aun (asing (asing (asing a1))) a4) -> aal5 (aun a4 (asing (apow a2))) -> aex2 (asm (apow a2) a2) -> aex5 (aun (asing (asing a1)) a4) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMErG5qpL9DGgRH7Bjio8h1Df7moS2RjJRK: (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> ain a0 a4 -> (forall X24:set, forall X25:set, ain X25 (asing X24) -> (X25 = X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, asubq (aun (asm X24 X25) (aint X24 X25)) X24) -> (forall X24:set, aex2 (apow (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal6 X24 -> aal5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (~ ain a1 a0) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (~ ain a1 (apow (asing a1))) -> asubq (asing a1) a2 -> (~ (a0 = apow (asing a1))) -> (~ ain a1 (asing a2)) -> (~ (a1 = asing a2)) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ (asing a1 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ asubq (apow a2) (asing a2)) -> (~ (a1 = asm (apow a2) a2)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> ain a2 (asm a4 (apow (asing a2))) -> ain a2 (aun a3 (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain a0 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) a2)) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> asubq (asm (apow a2) (asing (asing a1))) a3 -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> asubq (aun (asm (apow a2) a2) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq (aun a3 (asing (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (apow (asing a2)) (aun a3 (asing (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal3 (aun (asing a1) (asing a3))) -> (~ aal4 (asm a4 (asing a2))) -> (~ aal4 (asm a4 (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> aal3 (asm (apow a2) (apow (asing a2))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (apow (asing a1)) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2)))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a2)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a3)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a3)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMcKFV4385dqJBxbgPVZGCe3xA6vF9uT7UP: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> ain a1 a3 -> ain a2 a3 -> ain a2 a4 -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> ain a0 (asm a3 (asing a1)) -> asubq (asing a1) a2 -> (~ ain (asing a1) a2) -> ain a2 (asm (apow a2) (asing a1)) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ ain (asing a1) (asing a1)) -> (~ asubq (asm a3 (asing a1)) a2) -> (~ asubq (asm (apow a2) a2) a2) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ ain a3 (asing a2)) -> asubq (asing a2) (asm (apow a2) (apow (asing a2))) -> (~ (a1 = asm (apow a2) a2)) -> (~ (a1 = apow a2)) -> (~ ain (apow a2) a3) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> ain a1 (aun (asing a1) (asing a3)) -> ain a3 (aun (asing a1) (asing a3)) -> (~ ain (asm (apow a2) a2) a4) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> ain a2 (asm a4 a2) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> ain a0 (aun a2 (asing (apow a2))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> ain a0 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq a3 (aun a3 (asing (asing a2))) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = a4) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal3 (apow (asing a2))) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (~ aal4 (aun a2 (asing (apow a2)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> aal2 (asm (apow a2) a2) -> aal2 (apow (asing (asing a1))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMdsnmrj9nmTqESUmyJsN4mNZLFkyor9FhB: (forall X24:set, (aal3 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal2 X25))))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, adisjoint (asm X24 X25) (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> asubq a1 a2 -> (~ asubq a2 a1) -> (~ (a1 = a3)) -> (~ asubq a1 a0) -> (~ ain a1 (apow (asing a2))) -> (~ ain a0 (asing (asing a1))) -> (~ ain a2 (asing a1)) -> (~ ain a0 (asm (apow a2) a2)) -> ain a0 (apow (asing a2)) -> (~ (asing a1 = apow a2)) -> (~ (a2 = asing (asing a1))) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ (apow (asing a1) = a3)) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> ain a0 (apow (apow (asing a1))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain a3 (asing (asing a2))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> (~ ain (asing a2) (asing a3)) -> ain a3 (asm a4 (asing a1)) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal2 (asing a1)) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> aal2 (asm (apow a2) a2) -> aal3 (asm a4 (asing a2)) -> aal5 (aun a4 (asing (apow a2))) -> aex3 (asm (apow a2) (asing a2)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex3 (asm a4 (asing a0)) -> aex3 (asm a4 (asing a3)) -> aex4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ aal5 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMNZUe8KdPmx9NU4K7zy5tRpsKybM37SML9: (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun X24 (aun X25 X26)) (aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> ain a0 (asm a3 (asing a1)) -> ain a1 (asm (apow a2) (asing a2)) -> (~ ain a0 (asing (asing a1))) -> ain a2 (asm (apow a2) (apow (asing a1))) -> (~ ain (asing (asing a1)) a2) -> (~ ain (asing a2) a2) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (~ asubq (apow a2) (asing (asing a1))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ (a2 = asing a2)) -> (~ (a1 = apow a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ (asing a2 = apow a2)) -> (~ (asm (apow a2) a2 = apow a2)) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain a1 (apow (apow (asing a1))) -> (~ ain a1 (asing (apow (asing a1)))) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> (~ ain (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2)))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> ain a0 (aun a3 (asing (asing a2))) -> (~ ain (asing a2) (asing a3)) -> ain a0 (aun a1 (asing a3)) -> ain (asing a2) (aun (asing (asing a2)) a4) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain a2 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a4 (aun (asing (asing a2)) a4) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))) -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> asubq (asm a3 (asing a1)) (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> (~ aal2 (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (~ aal4 (asm a4 (apow (asing a2)))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> aal3 (aun (asing a1) (apow (asing a2))) -> aal4 a4 -> aal4 (aun a3 (asing (apow a2))) -> aal5 (aun (asing (asing (asing a1))) a4) -> aal5 (aun (asing (asing a2)) a4) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex3 (asm (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMMDGNwe93rtybyjX4iT1QmJp6ABbWGvtQr: (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, (~ ain X24 a0)) -> ain a3 a4 -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> aal2 (aint X24 X25) -> (~ aal4 (asm X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (~ asubq X26 X24) -> (~ asubq X26 X25) -> (~ asubq (aun X24 X25) X26) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> (forall X24:set, forall X25:set, asubq X25 (asing X24) -> ((X25 = a0) \/ (X25 = asing X24))) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> ain a1 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) a2) -> ain a0 (asm (apow a2) (asing a1)) -> (~ ain a1 (asing (asing a1))) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a1 (asm (apow a2) a2)) -> asubq (asing (asing a1)) (asm (apow a2) (asing a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (apow a2)) -> (~ ain (apow a2) (apow a2)) -> (~ ain (apow a2) a3) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (asing (asing a2))) -> ain a2 (asm a4 (asing a1)) -> ain (asing a2) (aun a3 (asing (asing a2))) -> (~ ain (apow (asing a1)) a4) -> (~ ain (asm a3 (asing a1)) a4) -> ain a1 (asm a4 (apow (asing a2))) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> ain a2 (aun (asing (asing a2)) a4) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> ain a1 (aun a4 (asing (apow a2))) -> (forall X24:set, ain X24 (asm a4 (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> asubq a2 (asm a3 (asing a2)) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asm (asm a4 a2) (asing a3)) (asing a2) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a3)) -> ain X24 a3) -> asubq (asm a4 (asing a3)) a3 -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal4 (asm a4 (asing a2))) -> (~ aal4 (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a2))) -> (~ aal6 (aun a4 (asing (asm (apow a2) a2)))) -> aal4 (aun a3 (asing (apow a2))) -> aal5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex2 (asm a4 a2) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 (asm a4 (asing a0)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24).
admit.
Qed.

Theorem conj_AbstrHF_TMVApqodp2oY6kVih72QbrsLxYoa39cpj5W: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, (~ ain X24 X24)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, (~ aal3 (apow (asing X24)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (~ ain a3 a2) -> (forall X24:set, asubq X24 (asing (asing a1)) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> ain a1 (apow a2) -> (~ ain a0 (asing (asing a1))) -> (~ (asing a1 = a2)) -> ain (asing a1) (asm (apow a2) (asing a2)) -> (~ asubq (asing a2) a2) -> (~ (asing a1 = asm (apow a2) a2)) -> (~ ain (apow a2) (asing (asing a1))) -> (~ ain (asing a1) a3) -> (~ ain (asing a2) (apow a2)) -> (~ asubq a3 (asing a2)) -> (~ ain (apow (asing a1)) a3) -> ain a0 (apow (apow (asing a1))) -> (~ ain a0 (asing (apow (asing a1)))) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing (asing a1)) (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing a2) (aun (apow a2) (asing (asing a2))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> (~ ain (apow (asing a1)) a4) -> (~ ain (asm a3 (asing a1)) a4) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> ain a2 (asm a4 a2) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (~ asubq (aun (asing (asing (asing a1))) a4) a4) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) (apow (asing (asing a1))) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a3)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal2 (asing a1)) -> (~ aal3 (apow (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (~ aal5 a4) -> (~ aal5 (aun a3 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal6 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1))))) -> aal3 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> aal3 (asm a4 (asing a1)) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 (aun a2 (asing (apow a2))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex4 a4 -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a2)) a4)).
admit.
Qed.

Theorem conj_AbstrHF_TMZU9J167NhsPFwFzrr7vtDFPRcLVYqjvxj: (forall X24:set, (aal2 X24 <-> (exists X25:set, (ain X25 X24 /\ (~ asubq X24 (apow X25)))))) -> (forall X24:set, ain X24 a2 -> ((X24 = a0) \/ (X24 = a1))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (~ ain a2 a0) -> asubq a3 a4 -> (~ asubq a4 a3) -> ain a1 (asing a1) -> ain a0 (asm (apow a2) (asing a2)) -> ain (asing a1) (asm (apow a2) a2) -> ain a1 (asm (apow a2) (asing a2)) -> (~ ain (asing a2) a1) -> ain (asing a1) (asm (apow a2) (asing a2)) -> ain a2 (asm (apow a2) (apow (asing a1))) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ (a1 = apow (asing a1))) -> (~ (a2 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ ain (asing a2) (apow a2)) -> (~ (a2 = asing a2)) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain (apow a2) (asing (asing a2))) -> ain a1 (aun (asing a1) (apow (asing a2))) -> ain a2 (asm a4 (asing a1)) -> (~ ain a0 (asing a3)) -> ain a3 (aun a1 (asing a3)) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun a4 (asing (apow a2))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> asubq a3 (aun a3 (asing (asing a2))) -> asubq a3 (aun a3 (asing (apow a2))) -> asubq a4 (aun (asing (asing a2)) a4) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> asubq (aun (asing (asing a1)) (asing (asing (asing a1)))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a2)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun a4 (asing (asm (apow a2) a2))) = a4) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal2 a1) -> (~ aal2 (asing a3)) -> (~ aal4 (asm a4 (asing a1))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex5 (aun (asing (asing a1)) a4) -> aex5 (aun (asing (apow (asing a1))) a4) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))).
admit.
Qed.

Theorem conj_AbstrHF_TMcQaedzSmGabvWFg8Rc9W7FsJyhE6x1123: (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> ain a1 a4 -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> (~ ain X27 X25) -> ain X27 X26) -> asubq (asm X24 X25) X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal2 X25 -> aal4 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (~ ain a0 a0) -> (~ ain a1 a1) -> (forall X24:set, asubq X24 (asing a1) -> ((X24 = a0) \/ (X24 = asing a1))) -> ain (asing a1) (asing (asing a1)) -> (~ ain a1 (apow (asing a2))) -> ain a1 (asm (apow a2) (asing a2)) -> (~ ain a0 (asing (asing a1))) -> (~ asubq (asing a1) (asing a2)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ ain (asing a2) (apow a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (apow a2)) -> (~ ain a3 (asm a3 (asing a1))) -> (~ (apow (asing a1) = a3)) -> (~ ain (asm a3 (asing a1)) (asm (apow a2) (apow (asing a2)))) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain (asing a2) (aun (asing a1) (apow (asing a2))) -> ain a0 (apow (asm a3 (asing a1))) -> (~ ain a1 (asing a3)) -> (~ ain (asing (asing a1)) a4) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> ain a0 (aun (asing (asing a2)) a4) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a2 (aun a2 (asing (apow a2))) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq a4 (aun (asing (asing a2)) a4) -> (asm (apow a2) (asing (asing a1)) = a3) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (forall X24:set, ain X24 a3 -> (~ aal3 (asm a3 (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ aal4 (asm a4 (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)))) -> aal2 (apow (asing (asing a1))) -> aal5 (aun a4 (asing (apow a2))) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex3 (aun a2 (asing (apow a2))) -> aex3 (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a0)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a1)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))).
admit.
Qed.

Theorem conj_AbstrHF_TMVqjTCJYqsmXjsSYeToDDDR3iHvReFwEfs: (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> ain a0 a1 -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> ain a3 a4 -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ (X25 = X26)) -> aal2 X24) -> (forall X24:set, forall X25:set, (~ aal3 X24) -> (~ aal4 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ (a0 = asing a1)) -> ain a1 (asm (apow a2) (apow (asing a2))) -> (~ (a0 = asing (asing a1))) -> (~ (a0 = apow (asing a1))) -> (~ (a2 = asing (asing a1))) -> (~ (a3 = asm (apow a2) a2)) -> (~ ain a0 (asing (apow (asing a1)))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain (asing (asing a1)) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> ain a1 (apow (asm a3 (asing a1))) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> (~ ain a0 (asm a4 a2)) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ ain a0 (asing (apow a2))) -> (~ ain a1 (asing (apow a2))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> ain a0 (aun a4 (asing (apow a2))) -> ain a1 (aun a4 (asing (apow a2))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain a1 X24) -> asubq X24 (asing (asing a1))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq (asm a2 (asing a1)) a1 -> asubq (asm (asm (apow a2) (asing a2)) (asing a1)) (apow (asing a1)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing (asing a1)) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a1)) (asm (apow a2) a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> asubq (asm a4 a2) (asm (asm a4 (asing a1)) (asing a0)) -> (asm (asm a4 (apow (asing a2))) (asing a2) = aun (asing a1) (asing a3)) -> asubq a2 (aun a3 (asing (asm a3 (asing a1)))) -> asubq (asm a3 (asing a1)) a4 -> (forall X24:set, ain X24 a4 -> (ain X24 a3 \/ (X24 = a3))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> (~ aal2 (asm (asm (apow a2) a2) (asing X24)))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1))))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (asm a4 a2) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 (asm a4 (asing a2)) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMGW8H6KZSGD9fUdhJi5iibimPm4WRtvWBy: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> ain a0 a3 -> ain a1 a3 -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> asubq X25 X26 -> asubq X24 X26) -> (forall X24:set, asubq a0 X24) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, (forall X26:set, ain X26 X24 -> (~ ain X26 X25)) -> adisjoint X24 X25) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal5 X24 -> aal5 X25) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal4 (aun X24 X25) -> (aal2 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (~ ain a0 a0) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> ain (asing a1) (asing (asing a1)) -> ain a0 (apow (asing a1)) -> ain a0 (asm (apow a2) (asing a2)) -> ain a1 (apow a2) -> (~ (a0 = asm a3 (asing a1))) -> (~ (a0 = asm (apow a2) a2)) -> ain (asing a1) (apow (asing a1)) -> (~ (asing a1 = a2)) -> (~ ain (apow a2) a2) -> (~ (asing a1 = asm a3 (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ asubq (apow a2) (asing a2)) -> (~ (asm a3 (asing a1) = a3)) -> (~ ain (asing a2) (asm (apow a2) (asing a1))) -> asubq (asm (apow a2) (apow (asing a2))) (apow a2) -> (~ ain a1 (asing (apow (asing a1)))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asm a3 (asing a1)) (apow (asing a2))) -> ain a3 (asing a3) -> adisjoint (aun (asing a2) (asing (asing a2))) (aun a1 (asing a3)) -> (~ ain (asm (apow a2) a2) a4) -> (~ ain (asing a1) (asm a4 a2)) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> (~ ain a1 (asing (apow a2))) -> (~ ain (asing a2) (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = a0)) -> ain X24 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> asubq (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a2)) -> ain X24 (aun a1 (asing a3))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> (~ aal3 (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> (~ aal2 (asm (asm (apow a2) (apow (asing a1))) (asing X24)))) -> (~ aal4 (aun (asing a1) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal5 (apow a2)) -> aal4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex2 (aun a1 (asing a3)) -> aex2 (aun a1 (asing (apow a2))) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1))))) -> aex2 (asm (asm a4 (asing a2)) (asing a3)) -> aex3 (asm a4 (asing a1)) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> ain (asing a1) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMLKrQvm6XiSWeaNck2PMzpbhTwLibfncfQ: (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> asubq a1 (asing a0) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex6 X24 -> aex5 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (~ ain a0 (asing a2)) -> (~ (a0 = asm a3 (asing a1))) -> (~ ain a2 (apow (asing a2))) -> (~ ain a0 (asm (apow a2) (apow (asing a2)))) -> (~ ain a1 (asing (asing a1))) -> (~ (asing a1 = asing (asing a1))) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (~ ain a3 (apow a2)) -> ain (asing (asing a1)) (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (~ ain a3 (apow (asing a2))) -> (~ ain (apow a2) (apow (asing a2))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> (~ ain (asm (apow a2) a2) a4) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> ain a3 (asm a4 (apow (asing a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> ain (apow a2) (asing (apow a2)) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a0 (aun a4 (asing (apow a2))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (asing (asing a1))) -> ((X24 = a0) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (asing a2))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> (~ asubq (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asm (apow (apow (asing a1))) (asing (apow (asing a1))))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> (asm (asm (apow a2) (asing a1)) (asing a0) = asm (apow a2) a2) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> asubq (asm a4 a2) (asm (asm a4 (apow (asing a2))) (asing a1)) -> (asm (asm a4 (apow (asing a2))) (asing a1) = asm a4 a2) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm a4 (asing a3)) a3 -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> aal3 (asm a4 (asing a2)) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asing (asing (asing a1))) a4) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a1)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMLrCVnxb3oWZjpEckj119kjcrSo7guyyvn: (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, (ain X24 a1 <-> (X24 = a0))) -> (forall X24:set, (ain X24 a4 <-> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = a3)))) -> (forall X24:set, ain X24 a3 -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2))) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal4 X24 -> aal4 X25) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex5 X24 -> aex4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal7 (aun X24 X25) -> (aal6 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (~ asubq a2 a0) -> (~ ain (asing a1) a2) -> (~ ain (asm a3 (asing a1)) a2) -> (~ asubq (asing a2) a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (~ ain (asing a2) (asm (apow a2) a2)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> ain a0 (apow (apow (asing a1))) -> ain a1 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asm (apow a2) a2) (asing (asm (apow a2) a2)) -> (~ ain (asing a2) (asing a3)) -> ain a0 (aun a1 (asing a3)) -> ain a0 (asm a4 (asing a2)) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain a2 (aun (asing (asing a2)) a4) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (apow a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain a0 (aun a1 (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun a4 (asing (apow a2))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> (asm (asm (apow a2) a2) (asing (asing a1)) = asing a2) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing a1)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> asubq (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal3 (aun (asing a1) (asing (asing a1)))) -> (~ aal3 (asm (apow a2) a2)) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing a3)) -> (~ aal3 (asm (aun (apow (asing a2)) (asing a3)) (asing X24)))) -> (forall X24:set, ain X24 (apow a2) -> (~ aal4 (asm (apow a2) (asing X24)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> (~ aal7 (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aal2 (asm a3 (asing a1)) -> aal3 (asm (apow a2) (asing a1)) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aal4 a4 -> aex2 (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))) -> aex5 (aun (asing (apow (asing a1))) a4) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a3)) -> (~ ain (asing a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))).
admit.
Qed.

Theorem conj_AbstrHF_TMVdzLQLHGs23Wxp1bbaUgwGsQLqYu56G7z: (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X25 -> (~ ain X26 X25) -> (~ ain X26 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal6 X24) -> (~ aal5 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, (~ ain X27 X26) -> asubq X26 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (~ asubq a4 a3) -> (forall X24:set, asubq X24 a2 -> (~ ain a1 X24) -> asubq X24 a1) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> ain a0 (apow (asing a1)) -> (~ asubq a1 (asing a1)) -> (~ ain a1 (asing a2)) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ asubq (asing a1) (asing (asing a1))) -> (~ ain (asm a3 (asing a1)) a2) -> (~ asubq (asm (apow a2) (apow (asing a2))) a2) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (a2 = asing a2)) -> (~ ain (asing (asing a1)) a3) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> (~ ain a1 (asing (apow (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a3 (aun (asing a1) (apow (asing a2)))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> (~ ain a0 (asing a3)) -> (~ ain (asing (asing a1)) a4) -> ain a3 (asm a4 a2) -> ain a3 (asm a4 (asing a1)) -> ain (asing a2) (aun (apow (asing a2)) (asing a3)) -> ain a0 (aun a2 (asing (apow a2))) -> ain a1 (aun a2 (asing (apow a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> ain a1 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> asubq (asm a2 (asing a0)) (asing a1) -> (asm a2 (asing a0) = asing a1) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> asubq (asm a4 (apow (asing a2))) (asm a4 (asing a0)) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (~ aal4 (asm (apow a2) (asing a2))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))).
admit.
Qed.

Theorem conj_AbstrHF_TMP2UUB5bvRhUyb66TSapVbYKcszKhnkww6: (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> ain a0 a1 -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> (~ ain X26 X25) -> ain X26 (asm X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (a1 = asing a0) -> (forall X24:set, aal4 X24 -> aal3 X24) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal5 X24 -> aal4 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (~ ain a2 a0) -> (~ ain a2 a2) -> asubq a3 a4 -> (~ (a0 = a3)) -> (~ (a2 = a3)) -> asubq a1 (asm a3 (asing a1)) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ asubq (apow a2) (asm (apow a2) (apow (asing a2)))) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain (asing a1) (apow (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> ain a1 (aun a3 (asing (asing a2))) -> (~ ain (apow a2) (aun a3 (asing (asing a2)))) -> (~ ain a0 (asing a3)) -> (~ ain (asm a3 (asing a1)) a4) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> ain a1 (asm a4 (apow (asing a2))) -> ain (asing a2) (aun (asing (asing a2)) a4) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (asm a3 (asing a1)) (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain (apow a2) (aun a2 (asing (apow a2))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq a4 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (apow (asing a1)) (asm (asm (apow a2) (asing a2)) (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing a1)) -> ain X24 (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> asubq (aun (asing a2) (apow (asing a2))) (aun (apow a2) (asing (asing a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) = aun a3 (asing (asing a2))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> asubq (asm a3 (asing a1)) (aint (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing a1))) -> aal2 (asm (apow a2) a2) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a0)) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (~ (a1 = apow (asing a1))).
admit.
Qed.

Theorem conj_AbstrHF_TMNn3tXG3qKAkkjdJpDkYZR28DimhS9g72K: (forall X24:set, (aal6 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal5 X25))))) -> (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, (ain X24 a3 <-> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)))) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, (~ aal6 X24) -> (~ aal7 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a0 a0) -> (~ ain a2 a2) -> (~ asubq a2 a0) -> (~ (a0 = asing a1)) -> (~ ain (asing (asing a1)) a2) -> (~ ain (asm a3 (asing a1)) a2) -> (~ (a2 = apow (asing a1))) -> (~ (asing (asing a1) = apow (asing a1))) -> asubq (aun (asing a1) (asing (asing a1))) (asm (apow a2) (asing a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> (~ (a2 = asing a2)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain a0 (apow (asing (asing a1))) -> ain a0 (apow (apow (asing a1))) -> (~ ain (asing (asing a1)) (asing (apow (asing a1)))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain a0 (apow (aun (asing a1) (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ain a2 (asm a4 (asing a1)) -> (~ ain a1 (asing a3)) -> (~ ain (asm (apow a2) a2) a4) -> (~ ain a1 (aun (asing (asing a1)) (asing a3))) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain a2 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> (~ ain (asm a3 (asing a1)) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a2 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, ain X24 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (apow a2) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (~ asubq (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing (asing a2)) a4)) -> asubq a1 (asm a2 (asing a1)) -> asubq a2 (asm a3 (asing a2)) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> (asm (asm (apow a2) (apow (asing a2))) (asing a2) = aun (asing a1) (asing (asing a1))) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> (asm (asm a4 (asing a1)) (asing a3) = asm a3 (asing a1)) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (~ aal2 (asing a3)) -> (forall X24:set, ain X24 a2 -> (~ aal2 (asm a2 (asing X24)))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal3 (asm (aun (apow (asing a2)) (asing (apow a2))) (asing X24)))) -> aal2 (asm a4 a2) -> aal3 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> aal3 (asm a4 (asing a2)) -> aal3 (aun a2 (asing (apow a2))) -> aal4 (apow a2) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aal5 (aun (apow a2) (asing (asing a2))) -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (asm a3 (asing a1)) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex3 (aun a2 (asing (apow a2))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing X24)))) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1))))) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex5 (aun a4 (asing (apow a2))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))).
admit.
Qed.

Theorem conj_AbstrHF_TMYybWCv1uPCo2fEkjPUQGXbYK7tFrTE6Se: (forall X24:set, forall X25:set, (asubq X24 X25 <-> (forall X26:set, ain X26 X24 -> ain X26 X25))) -> (forall X24:set, (aal7 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal6 X25))))) -> (forall X24:set, (aex5 X24 <-> (aal5 X24 /\ (~ aal6 X24)))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> ain a2 a3 -> (forall X24:set, forall X25:set, asubq X25 X24 -> ain X25 (apow X24)) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq X26 X24 -> asubq X26 X25 -> (aint X24 X25 = X26)) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> (forall X24:set, forall X25:set, (~ ain X25 X24) -> aal2 X24 -> aal3 (aun X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 X24 -> aal3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, aal6 (aun X24 X25) -> (aal5 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> (aal6 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> ain a1 X24 -> (X24 = a2)) -> ain a1 (asm (apow a2) (asing a2)) -> (~ (a1 = asing a2)) -> (~ ain a1 (asm (apow a2) a2)) -> (~ (a2 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> (~ ain a0 X24) -> (X24 = a0)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a2))) -> ain (asing (asing a1)) (apow (apow (asing a1))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> ain a0 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain a1 (aun a3 (asing (asing a2))) -> ain (asing a2) (aun a3 (asing (asing a2))) -> (~ ain a2 (apow (asm a3 (asing a1)))) -> ain a3 (asing a3) -> (~ ain (asing (asing a1)) a4) -> (~ ain (asing a2) (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain a0 (aun a1 (asing (apow a2))) -> ain a1 (aun a2 (asing (apow a2))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq a2 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> asubq a2 (aun (asing a1) (apow (asing a2))) -> (~ asubq (asm a4 (asing a2)) a2) -> (~ asubq (aun a3 (asing (asm (apow a2) a2))) a3) -> asubq a4 (aun (asing (asing a1)) a4) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq a2 (asm a3 (asing a2)) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq a1 (asm (asm a3 (asing a1)) (asing a2)) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> asubq (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) (apow (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) (apow a2) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> asubq a2 (asm (asm a4 (asing a2)) (asing a3)) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> asubq (asm a4 (asing a3)) a3 -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2))) = asm (apow a2) (apow (asing a1))) -> (~ aal3 (aun (asing (asing a1)) (asing (asing (asing a1))))) -> (~ aal5 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal4 (asm (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) (asing X24)))) -> aal2 (asm (apow a2) (apow (asing a1))) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex2 (asm (asm a4 (asing a1)) (asing a0)) -> (~ aal3 (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex3 (asm (aun a3 (asing (apow a2))) (asing a1)) -> aex4 (asm (aun (asing (asing a2)) a4) (asing a2)) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3)) (aun (asing a1) (apow (asing a2))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> aex5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex3 (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))).
admit.
Qed.

Theorem conj_AbstrHF_TMSAv3dfqRFxMNmo62bfNSkvbh69XP5aafk: ain a2 a3 -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> adisjoint X25 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal7 X24) -> (~ aal6 (asm X24 (asing X25)))) -> asubq (asing a0) a1 -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (~ ain a0 a0) -> (~ ain a2 a1) -> asubq a3 a4 -> (~ (a1 = a2)) -> (forall X24:set, asubq X24 a2 -> ain a0 X24 -> (~ ain a1 X24) -> (X24 = a1)) -> ain a2 (asing a2) -> (~ asubq a1 (asing a1)) -> ain a0 (asm (apow a2) (asing a1)) -> (~ ain (asing a2) a1) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> (~ ain a2 (apow (asing a1))) -> asubq (asing a1) (asm (apow a2) (asing a2)) -> (~ (a2 = asing (asing a1))) -> (~ (asing (asing a1) = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain a0 X24) -> asubq X24 (asing (asing a1))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ ain (apow (asing a1)) a3) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain a0 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a2 (aun a1 (asing a3))) -> (~ ain (apow (asing a1)) a4) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain a2 (asm a4 a2) -> ain a1 (asm a4 (apow (asing a2))) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain a0 (aun (asing (asing a2)) a4) -> ain a2 (aun (asing (asing a2)) a4) -> (~ ain a3 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (apow a2) (aun a4 (asing (apow a2))) -> (~ ain (asing a1) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> asubq a3 (aun a3 (asing (asm (apow a2) a2))) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> (~ asubq (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a2))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (asm a2 (asing a0) = asing a1) -> (asm a3 (asing a0) = asm (apow a2) (apow (asing a1))) -> asubq (asing a2) (asm (asm a3 (asing a1)) (asing a0)) -> (asm (asm a3 (asing a1)) (asing a0) = asing a2) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a1)) (asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1)) = asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> asubq (asm (asm a4 a2) (asing a2)) (asing a3) -> (asm (asm a4 (asing a1)) (asing a2) = aun a1 (asing a3)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq a2 (apow (asm a3 (asing a1))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing (asm a3 (asing a1)))) a2 -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal3 a2) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> (~ aal2 (asm (asm a3 (asing a1)) (asing X24)))) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (~ aal4 (aun (apow (asing a2)) (asing (apow a2)))) -> (~ aal5 a4) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a0))) -> aal3 (asm (apow a2) (apow (asing a2))) -> aal4 (aun a3 (asing (apow (asing a1)))) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> (~ aal4 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1))))) -> aex4 (aun a3 (asing (asing a2))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a3))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a2)) -> ain X24 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (asing a2)))) -> (forall X24:set, ain a0 (apow X24)).
admit.
Qed.

Theorem conj_AbstrHF_TMcmJnXFK7CHCLbTZg2gyjmpePdyqcnapqU: (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aun X24 X25) <-> (ain X26 X24 \/ ain X26 X25))) -> ain a0 a4 -> (forall X24:set, asubq X24 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq (aun X24 X25) (aun X24 X26) -> asubq X25 X26) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal5 X24) -> (~ aal4 (asm X24 (asing X25)))) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> (forall X26:set, ain X26 X25 -> aal3 (aun X24 (asing X26)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> aal4 (aun (asm X24 (asing X27)) X25))) -> ain a0 (asm a3 (asing a1)) -> (~ ain a0 (aun (asing a1) (asing (asing a1)))) -> (~ ain a0 (asm (apow a2) a2)) -> ain a2 (asm (apow a2) (asing a1)) -> (~ (a1 = asing a2)) -> (~ (a1 = apow (asing a1))) -> (~ asubq (asing a2) a2) -> (~ ain (asing a2) (asing (asing a1))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (~ ain (apow (asing a1)) a3) -> (~ ain a3 (asm a3 (asing a1))) -> asubq (asm a3 (asing a1)) (apow a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a1))) -> ((X24 = a1) \/ (X24 = a2))) -> (~ (asm a3 (asing a1) = a3)) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> (~ ain (apow a2) (apow (asing (asing a1)))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain (apow a2) (aun (asing a2) (apow (asing a2)))) -> ain a0 (aun a1 (asing a3)) -> (~ ain (asm (apow a2) a2) a4) -> ain a3 (asm a4 a2) -> (~ ain (apow a2) (aun (asing (asing a2)) a4)) -> ain (apow a2) (asing (apow a2)) -> ain a1 (aun a2 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> (~ ain (asing a1) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq a2 (aun a2 (asing (apow a2))) -> (~ asubq (aun a3 (asing (apow (asing a1)))) a3) -> asubq a3 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (apow a2) (aun (apow a2) (asing (apow a2))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> asubq (asm a3 (asing a0)) (asm (apow a2) (apow (asing a1))) -> asubq (asing a2) (asm (asm (apow a2) (apow (asing a1))) (asing a1)) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0) = aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a0)) -> ain X24 (asm a4 (apow (asing a2)))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> (~ aal3 (apow (asing a2))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> aal2 a2 -> aal2 (asm a3 (asing a1)) -> aal5 (aun (asing (apow (asing a1))) a4) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex3 (aun (asing a2) (apow (asing a2))) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aal4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a1))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a1))) -> (~ aal4 a3).
admit.
Qed.

Theorem conj_AbstrHF_TMXUdrjKZ3B2JLzih2HYxJq4QEiHYxnVDPB: (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, ain X24 X25 -> aal2 (apow X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal3 X26 -> aal3 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal4 X24 \/ aal2 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal6 X26 -> aal6 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (forall X24:set, asubq X24 a2 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing a1)) \/ (X24 = a2))) -> ain a2 (asing a2) -> (~ asubq a2 (asing a1)) -> (~ asubq (asm a3 (asing a1)) a2) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> asubq (asm (apow a2) a2) (asm (apow a2) (apow (asing a2))) -> (~ (asm a3 (asing a1) = apow a2)) -> ain (asing (asing a1)) (asing (asing (asing a1))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (apow (asing a1)) (aun a3 (asing (apow (asing a1)))) -> (~ ain (asm (apow a2) a2) (asing (asing a2))) -> ain a1 (asm a4 (asing a2)) -> adisjoint a2 (aun (asing (asing a1)) (asing a3)) -> ain (asing a1) (aun (asing (asing a1)) a4) -> ain a3 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (asing a1) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain a0 (aun (apow (asing a2)) (asing (apow a2))) -> (~ ain (asm (apow a2) a2) (aun a4 (asing (apow a2)))) -> ain a3 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> (~ asubq (aun a2 (asing (apow a2))) a2) -> asubq a4 (aun (asing (asing (asing a1))) a4) -> (~ asubq (aun (asing (apow (asing a1))) a4) a4) -> asubq (aun (asing (asing a2)) a4) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq (asm (asm (apow a2) (asing a1)) (asing (asing a1))) (asm a3 (asing a1)) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2)) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing a3))) -> asubq (asm (asm a4 (apow (asing a2))) (asing a3)) (asm (apow a2) (apow (asing a1))) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asing (asing a2)) a4) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2))) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal6 (aun (asing (asing a2)) a4)) -> aal5 (aun a4 (asing (asm (apow a2) a2))) -> aex2 (asm a3 (asing a1)) -> aex2 (asm (apow a2) a2) -> aex2 (aun (asing a2) (asing (asing a2))) -> aex3 (asm a4 (asing a1)) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex4 (aun a3 (asing (apow (asing a1)))) -> aex3 (asm a4 (asing a0)) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> ain (asing a1) (apow a2).
admit.
Qed.

Theorem conj_AbstrHF_TMK1DH6w1JeN2wUWngA2rVMscgbCkyBcDZp: ain a2 a3 -> (forall X24:set, asubq a0 X24) -> (forall X24:set, ain X24 (apow X24)) -> (forall X24:set, forall X25:set, forall X26:set, (aun X24 (aun X25 X26) = aun (aun X24 X25) X26)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> asubq (asing X25) X24) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (~ ain a2 a2) -> asubq a2 a3 -> (~ asubq a2 a0) -> ain a1 (aun (asing a1) (asing (asing a1))) -> (~ asubq a1 (asing a1)) -> (~ ain a1 (apow (asing a1))) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ ain (apow a2) a2) -> (~ asubq (asing a2) a2) -> (~ ain a2 (asing (asing a1))) -> (forall X24:set, ain (asing a1) X24 -> ain a0 X24 -> asubq (apow (asing a1)) X24) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (~ asubq (apow a2) (apow (asing a1))) -> (~ ain (asing (asing a1)) a3) -> (~ (asing (asing a1) = a3)) -> (forall X24:set, ain X24 (asm (apow a2) a2) -> ((X24 = asing a1) \/ (X24 = a2))) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (~ ain (asing a1) (asing (asing a2))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> (~ ain (asing (asing a1)) a4) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain a1 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a2 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain (apow a2) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (apow (aun (asing a1) (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> asubq a3 (aun a3 (asing (asing a2))) -> (~ asubq (aun (asing (asing a1)) a4) a4) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq a4 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (asm a4 (asing a1)) -> (~ asubq (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (apow (asing (asing a1)))) -> (~ asubq (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, ain X24 a3 -> (~ (X24 = a2)) -> ain X24 a2) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> (asm (apow a2) (asing (asing a1)) = a3) -> asubq (apow (asing a1)) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1)))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a3)) -> ain X24 (asm a3 (asing a1))) -> (asm a4 (asing a3) = a3) -> asubq (aun (asing a2) (apow (asing a2))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aun (asing (asing a2)) a4) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> (forall X24:set, ain X24 (aun (apow a2) (asing (asing a2))) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (~ aal5 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2))))) -> (~ aal6 (aun (asing (asing a1)) a4)) -> aal5 (aun (asing (apow (asing a1))) a4) -> aal6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> aex2 a2 -> aex2 (aun (asing a1) (asing (asing a1))) -> aex2 (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) -> aex3 (asm (apow a2) (asing a2)) -> aex2 (asm a3 (asing a2)) -> aex4 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> aex4 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a0)) -> aex5 (aun (asing (asing a1)) a4) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> (~ asubq (asing a1) (asing a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMTaczw4hdtCHMWzuULTdXzF3KJWEGwtx1x: (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (asm X24 X25) <-> (ain X26 X24 /\ (~ ain X26 X25)))) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> (ain X26 X24 \/ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, forall X26:set, asubq X24 X26 -> asubq X25 X26 -> asubq (aun X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X25 -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal4 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal4 X24 -> aal2 X25 -> aal6 (aun X24 X25)) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X25 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (~ asubq a2 a1) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> ain a0 (apow a2) -> (~ ain a1 (apow (asing a1))) -> (~ ain (asing a1) (asing a2)) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) (asm (apow a2) (apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ain a0 X24 -> (X24 = apow (asing a1))) -> (~ (apow (asing a1) = a3)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> (~ (asm (apow a2) a2 = apow a2)) -> ain (asing a1) (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ ain (asing a1) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> ain a0 (asm a4 (asing a1)) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> ain (asing a2) (aun (asing a2) (apow (asing a2))) -> ain a0 (aun a1 (asing a3)) -> (~ ain (asm (apow a2) a2) a4) -> (~ ain a0 (aun (asing (asing a1)) (asing a3))) -> ain a2 (asm a4 (apow (asing a2))) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain (asing a2) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> ain a3 (aun (asing (asing a2)) a4) -> ain a2 (aun (asing (asing a2)) a4) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) a3) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> asubq a3 (aun a3 (asing (apow a2))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> asubq (asm (asm (apow a2) a2) (asing (asing a1))) (asing a2) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing a2)) (aun (asing a1) (asing (asing a1))) -> (asm (apow a2) (asing (asing a1)) = a3) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a2) = aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> (asm (asm a4 (apow (asing a2))) (asing a3) = asm (apow a2) (apow (asing a1))) -> (asm a4 (asing a0) = asm a4 (apow (asing a2))) -> asubq (asm a3 (asing a1)) (aun a4 (asing (apow a2))) -> asubq (asm (apow a2) (apow (asing a1))) a4 -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> asubq (asm a3 (asing a1)) (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (~ aal3 (aun a1 (asing a3))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ aal3 (asm (asm (apow a2) (asing a2)) (asing X24)))) -> (~ aal4 (asm (apow a2) (apow (asing a2)))) -> (~ aal5 (apow a2)) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = a1))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aex3 (aun a2 (asing (apow a2))) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex4 (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asing (apow (asing a1))) a4) -> aex5 (aun a4 (asing (asm (apow a2) a2))) -> aex4 (asm (aun a4 (asing (apow a2))) (asing a3)) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a1)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (aun (apow (asing a2)) (asing a3))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ ain X24 (asing (asing a2))) -> ain X24 (aun a3 (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (asing a2))) (aun a3 (asing (apow a2))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMLmxKhbBbYvVk3TAb2uYzKQ2z4VJ1PUDkP: (forall X24:set, (aex3 X24 <-> (aal3 X24 /\ (~ aal4 X24)))) -> (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> (forall X24:set, forall X25:set, (ain X25 (asing X24) <-> (X25 = X24))) -> (forall X24:set, ain X24 a1 -> (X24 = a0)) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 (asm X24 X25))) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X24 -> aal3 X25 -> aal5 (aun X24 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 X24 -> aal2 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex4 X24 -> aex3 (asm X24 (asing X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal3 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, aex5 X24 -> aex2 (aint X24 X25) -> aex3 (asm X24 X25)) -> (~ ain a2 a2) -> asubq a2 a3 -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> asubq X24 (asing a1)) -> (~ ain a1 (apow (asing a2))) -> (~ (a0 = asing a2)) -> (~ (a0 = asm (apow a2) a2)) -> ain a2 (apow a2) -> ain (asing a1) (asm (apow a2) (asing a1)) -> ain (asing a1) (asm (apow a2) (apow (asing a2))) -> (~ ain a1 (asm a3 (asing a1))) -> (~ ain (asing (asing a1)) a2) -> (~ ain (asing a2) a2) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ain a0 X24 -> (X24 = a1)) -> (forall X24:set, ain X24 (asm a3 (asing a1)) -> ((X24 = a0) \/ (X24 = a2))) -> (~ (asing a2 = asm (apow a2) a2)) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ (a3 = apow a2)) -> (~ ain (apow a2) (apow (apow (asing a1)))) -> (~ ain (asing a1) (asing (aun (asing a1) (asing (asing a1))))) -> ain a1 (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> (~ ain (apow a2) (aun (apow a2) (asing (asing a2)))) -> ain (asm a3 (asing a1)) (asing (asm a3 (asing a1))) -> (~ ain (asing a2) (aun a1 (asing a3))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain a1 (aun a2 (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (asing a2) (aun (asing (asing a2)) (asing (apow a2))) -> ain a2 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (asing (asing (asing a1)))) -> ((X24 = asing a1) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (~ asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) a2) -> asubq a4 (aun a4 (asing (apow a2))) -> (~ asubq (asm a4 (asing a1)) (asm a3 (asing a1))) -> (~ asubq (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1))))) -> asubq (asm (apow a2) (apow (asing a1))) (asm a3 (asing a0)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (asing a2)) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a1)) -> ain X24 (apow (asing a1))) -> asubq (asm (asm (apow a2) (asing a2)) (asing (asing a1))) a2 -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = asing a1)) -> ain X24 (asm a3 (asing a1))) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a2)) (asing a1)) -> (asm (asm a4 (asing a1)) (asing a0) = asm a4 a2) -> asubq (asm a3 (asing a1)) (aun (apow a2) (asing (apow a2))) -> (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1)) = asm a3 (asing a1)) -> asubq (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (~ aal3 (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (apow (asing a2))) -> (~ aal3 (asm (asm a4 (apow (asing a2))) (asing X24)))) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (forall X24:set, aal5 (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing X24)) -> (~ (X24 = asing (asing a1)))) -> (~ aal6 (aun (asing (asing (asing a1))) a4)) -> aal2 (aun (asing a1) (asing (asing a1))) -> aal3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aal4 (apow a2) -> aex2 (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex2 (aun (asing a3) (asing (apow a2))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a0)) (aun (asing a1) (asing (asm a3 (asing a1)))) -> aex4 (apow a2) -> aex4 (aun (apow (asing a1)) (asm a4 a2)) -> aex4 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> aex3 (asm (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) (asing a0)) -> aex6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> aex5 (asm (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (asing a2)) -> (~ ain a1 a1).
admit.
Qed.

Theorem conj_AbstrHF_TMEvfuiirtP6gCmM2A6iRG1c6onooSCxoEr: (forall X24:set, (aex4 X24 <-> (aal4 X24 /\ (~ aal5 X24)))) -> ain a1 a3 -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (asm X24 X25) -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, asubq (aint X24 X25) X25) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 X25 -> asubq (asm X24 X25) (asm X24 X26)) -> (forall X24:set, forall X25:set, (~ ain X25 (asing X24)) -> (~ (X25 = X24))) -> (a1 = asing a0) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 (aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> aal5 (aun (asm X24 (asing X27)) X25))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal5 X26 -> (aal5 X24 \/ aal2 X25))) -> asubq a2 a3 -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> ain a1 X24 -> (X24 = asing a1)) -> (~ (a1 = asing a2)) -> (~ ain (asing a2) a2) -> (~ asubq (asm (apow a2) a2) a2) -> (~ ain (asing a2) (asing (asing a1))) -> (~ (asing a1 = a3)) -> (~ (a2 = asing (asing a1))) -> (~ ain (asing a1) a3) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> asubq X24 a1) -> (~ asubq (asm a3 (asing a1)) (asing a2)) -> (~ asubq (apow a2) (asing a2)) -> (~ (asing a2 = asm a3 (asing a1))) -> ain (apow (asing a1)) (asing (apow (asing a1))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a2) a4) -> (~ ain (asm (apow a2) a2) (aun (apow a2) (asing (asing a2)))) -> (~ ain (asing a1) (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> ((X24 = a2) \/ (X24 = a3))) -> (forall X24:set, ain X24 (asm a4 a2) -> ((X24 = a2) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (apow a2))) -> (~ asubq (aun (asing (asing a2)) a4) a4) -> asubq (asm a2 (asing a0)) (asing a1) -> asubq (asm a2 (asing a1)) a1 -> (asm a3 (asing a2) = a2) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> (asm (asm (apow a2) a2) (asing a2) = asing (asing a1)) -> (asm (asm (apow a2) (asing a1)) (asing a2) = apow (asing a1)) -> asubq (aun (asing a1) (asing (asing a1))) (asm (asm (apow a2) (apow (asing a2))) (asing a2)) -> asubq (apow (asing (asing a1))) (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing a1))) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing (asing (asing a1))) = apow (asing a1)) -> asubq (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing a1))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a3)) -> ain X24 (asing a2)) -> asubq (asm (asm a4 (asing a1)) (asing a2)) (aun a1 (asing a3)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a1)) (asm a4 a2) -> asubq (aun (asing a2) (apow (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (aint (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (aint (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)) = asm a3 (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ aal3 (asm (asm (apow a2) (apow (asing a2))) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> (~ aal3 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing X24)))) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> aal2 (asm (apow a2) a2) -> aal2 (asm a4 a2) -> aal3 (asm a4 (asing a1)) -> aal4 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> aex2 (apow (asing a1)) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> (~ ain X24 (asing a0)) -> ain X24 (aun (asing a1) (asing (asm a3 (asing a1))))) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex5 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> aex5 (aun a4 (asing (apow a2))) -> aex3 (asm (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) -> aex3 (asm (aun a4 (asing (apow a2))) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a2)) -> aex5 (asm (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (asing a0)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (~ aal6 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))))) -> asubq (asm (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) (asing a1)) (aun (asing a0) (asing (asm a3 (asing a1)))).
admit.
Qed.

Theorem conj_AbstrHF_TMcA13wK8EtQboRn8q9f9yk3H17GgQJkNHZ: (forall X24:set, forall X25:set, ain X24 X25 -> (~ ain X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aint X24 X25) -> ain X26 X24) -> (forall X24:set, forall X25:set, (X24 = aun (asm X24 X25) (aint X24 X25))) -> (forall X24:set, forall X25:set, aal3 (aun X24 X25) -> (aal2 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal4 (asm X24 (asing X25)) -> aal5 X24) -> asubq a2 a3 -> (forall X24:set, asubq X24 a2 -> (~ ain a0 X24) -> (~ ain a1 X24) -> (X24 = a0)) -> (~ (a0 = asing a1)) -> (~ (a0 = asing a2)) -> ain (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a0 (asm (apow a2) a2)) -> (~ ain a3 (asing a1)) -> (~ ain (asing a1) (apow (asing a2))) -> (~ ain a1 (asm a3 (asing a1))) -> (forall X24:set, ain X24 (asing (asing a1)) -> (X24 = asing a1)) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> (X24 = asing (asing a1))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> (~ ain a0 X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> ain (asing a1) X24 -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (forall X24:set, asubq X24 (apow (asing a1)) -> (~ ain (asing a1) X24) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1))) \/ (X24 = apow (asing a1)))) -> (~ (a2 = asm a3 (asing a1))) -> (~ (a1 = apow a2)) -> (~ (a3 = apow a2)) -> (~ (asm (apow a2) (apow (asing a2)) = apow a2)) -> ain (asing (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> ain (asing (asing a1)) (aun (asing (asing (asing a1))) a4) -> ain (apow (asing a1)) (aun (asing (apow (asing a1))) a4) -> ain a3 (aun (apow (asing a2)) (asing a3)) -> (~ ain a2 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3)))) -> (~ ain (asm a3 (asing a1)) (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> ain (apow a2) (aun (apow a2) (asing (apow a2))) -> ain (apow a2) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> ain (asing a2) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> ain (asing a1) X24 -> ain a1 X24 -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a2)) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = a3))) -> asubq a3 (aun a3 (asing (apow (asing a1)))) -> (~ asubq (aun a4 (asing (asm (apow a2) a2))) a4) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> asubq (asm (apow a2) (apow (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> asubq (asm (asm (apow a2) a2) (asing a2)) (asing (asing a1)) -> asubq (asm (asm a4 (asing a2)) (asing a3)) a2 -> (forall X24:set, ain X24 (apow a2) -> (ain X24 a3 \/ (X24 = asing a1))) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal2 (asing a3)) -> (~ aal3 (aun (asing a1) (asing a3))) -> (~ aal3 (asm a4 a2)) -> (~ aal5 (aun a3 (asing (asm (apow a2) a2)))) -> (~ aal5 (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> (~ aal6 (aun (asing (apow (asing a1))) a4)) -> aal2 (apow (asing (asing a1))) -> aal3 a3 -> aal4 (aun a3 (asing (apow (asing a1)))) -> aal5 (aun (asing (asing a1)) a4) -> aex3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex4 (aun a2 (aun (asing (asing a1)) (asing a3))) -> aex4 (aun a2 (aun (asing a3) (asing (apow a2)))) -> aex4 (aun a3 (asing (asm (apow a2) a2))) -> aex4 (aint (aun a4 (asing (asm (apow a2) a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2))))) -> aex5 (aun (asing (apow (asing a1))) a4) -> aex6 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a2)) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ (a2 = asing a2)).
admit.
Qed.

Theorem conj_AbstrHF_TMFDr1VXHBfxpZz2Fabw9RAtFoYtXJbukWY: (forall X24:set, (aal4 X24 <-> (exists X25:set, (asubq X25 X24 /\ ((~ asubq X24 X25) /\ aal3 X25))))) -> (forall X24:set, (aex6 X24 <-> (aal6 X24 /\ (~ aal7 X24)))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, asubq (aun (aun X24 X25) X26) (aun X24 (aun X25 X26))) -> (forall X24:set, forall X25:set, asubq X25 X24 -> (~ asubq X24 X25) -> (exists X26:set, (ain X26 X24 /\ asubq X25 (asm X24 (asing X26))))) -> (forall X24:set, forall X25:set, asubq X24 (apow (asing X25)) -> aal2 X24 -> asubq (apow (asing X25)) X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (aint X24 (asing X25) = asing X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aex3 X24 -> aex2 (asm X24 (asing X25))) -> (~ (a1 = a3)) -> ain a0 (apow a2) -> (~ (a0 = asing a1)) -> (~ (a0 = asm a3 (asing a1))) -> (~ (a1 = asm a3 (asing a1))) -> ain (asing a1) (asm (apow a2) (asing a1)) -> (~ ain (asing a1) (apow (asing a2))) -> asubq (asing a1) (aun (asing a1) (asing (asing a1))) -> (~ ain a1 (asm a3 (asing a1))) -> (~ (a0 = aun (asing a1) (asing (asing a1)))) -> (~ asubq (asing a2) a2) -> (~ ain (asm (apow a2) a2) (asing (asing a1))) -> (~ ain (asing a1) (asm a3 (asing a1))) -> (~ ain a2 (aun (asing a1) (asing (asing a1)))) -> (~ asubq (asm (apow a2) (asing a2)) (aun (asing a1) (asing (asing a1)))) -> (~ (a2 = asm a3 (asing a1))) -> (~ asubq (apow a2) (asing a2)) -> (~ ain (asing a2) (asm (apow a2) a2)) -> (~ ain a3 (asm (apow a2) (asing a1))) -> ain a0 (apow (apow (asing a1))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a0 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ain (asing a1) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> (~ ain (apow a2) (apow (asing a2))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> (~ ain a0 (asing a3)) -> adisjoint (apow (asing a1)) (asm a4 a2) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain (apow a2) (aun a1 (asing (apow a2))) -> ain a1 (aun a2 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> ain (apow a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asing a1) (asing (asing a1))) -> ((X24 = a1) \/ (X24 = asing a1))) -> (forall X24:set, ain X24 (asing (asing (asing a1))) -> (X24 = asing (asing a1))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> ((((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (apow a2) (aun (apow a2) (asing (asing a2))) -> asubq (apow (asing (asing a1))) (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> asubq (asing a1) (asm a2 (asing a0)) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> (asm (asm (apow a2) (asing a2)) (asing a1) = apow (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = asing a1)) -> ain X24 a2) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = a0)) -> ain X24 (asm (apow a2) (apow (asing a2)))) -> asubq a3 (asm (apow a2) (asing (asing a1))) -> (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1))) = apow a2) -> asubq (asm (asm a4 (asing a2)) (asing a0)) (aun (asing a1) (asing a3)) -> asubq (aun (asing a1) (asing a3)) (asm (asm a4 (asing a2)) (asing a0)) -> (asm (asm a4 (asing a2)) (asing a0) = aun (asing a1) (asing a3)) -> (asm (asm a4 (asing a2)) (asing a3) = a2) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> asubq (asm a3 (asing a1)) (asm (asm a4 (asing a1)) (asing a3)) -> asubq a3 (aun a4 (asing (asm (apow a2) a2))) -> (forall X24:set, ain X24 a3 -> ain X24 (apow (asm a3 (asing a1))) -> ain X24 a2) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain X24 (asing (apow a2)))) -> (~ aal4 (asm (apow a2) (asing a1))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (~ aal3 (asm (asm a4 (asing a1)) (asing X24)))) -> (~ aal5 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> (~ aal5 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal5 (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2))))) -> aal2 a2 -> aal3 (aun (asing a2) (apow (asing a2))) -> aal4 (aun a3 (asing (apow a2))) -> aal3 (aint (aun a3 (asing (asm a3 (asing a1)))) (apow (asm a3 (asing a1)))) -> aex2 (asm a3 (asing a1)) -> aex2 (asm (apow a2) (apow (asing a1))) -> aex2 (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> aex2 (asm (asm a4 (asing a1)) (asing a2)) -> aex5 (aun a4 (asing (apow a2))) -> aex6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 a4 -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing X24)))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing a0)) (aun (asm (apow a2) (apow (asing a1))) (aun (asing (asing a2)) (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> ain X24 (aun a3 (asing (apow a2)))) -> ain a2 (aun (asing a2) (apow (asing a2))).
admit.
Qed.

Theorem conj_AbstrHF_TMNbaJdBt5CyS34rjfZVJxFckmNQpGpkBQZ: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, (~ ain X24 a0)) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, ain X24 (asing X24)) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ asubq X24 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, (~ ain X26 X24) -> (~ ain X26 X25) -> (~ ain X26 (aun X24 X25))) -> asubq a1 (asing a0) -> (forall X24:set, (~ aal2 (asing X24))) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal4 X24 \/ aal2 X25)) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, ain X25 X24 -> aal3 (asm X24 (asing X25)) -> aal4 X24) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aex2 X24 -> aex2 X25 -> aex4 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal3 X24 \/ aal3 X25)) -> (~ ain a0 (asing a1)) -> (~ ain a1 (apow (asing a1))) -> (~ asubq (asing a1) (asing a2)) -> (~ asubq (asm (apow a2) a2) a2) -> (~ ain (asing a2) (asing (asing a1))) -> (~ (asing a1 = a3)) -> asubq (asing (asing a1)) (apow (asing a1)) -> asubq (asing (asing a1)) (aun (asing a1) (asing (asing a1))) -> (~ ain (apow a2) (asing a2)) -> (~ asubq a3 (asing a2)) -> asubq (asm a3 (asing a1)) (apow a2) -> (~ asubq (asm (apow a2) (asing a1)) (asm (apow a2) a2)) -> (~ (asm a3 (asing a1) = apow a2)) -> (~ ain (asing a1) (apow (asing (asing a1)))) -> ain (asing (asing a1)) (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a2))) (asing (asing (asing a1)))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> (~ ain a3 (aun (asing a2) (apow (asing a2)))) -> ain a0 (aun a3 (asing (asing a2))) -> (~ ain (asing a1) (asm a4 a2)) -> (~ ain (asm (apow a2) a2) (asing (apow a2))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ ain a0 (aun (asing a3) (asing (apow a2)))) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> asubq X24 (asing a1)) -> (forall X24:set, asubq X24 (aun (asing a1) (asing (asing a1))) -> (~ ain (asing a1) X24) -> (~ ain a1 X24) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = asing (asing a1))) \/ (X24 = aun (asing a1) (asing (asing a1))))) -> (forall X24:set, ain X24 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> (((X24 = a0) \/ (X24 = a1)) \/ (X24 = asing (asing a1)))) -> (forall X24:set, ain X24 a4 -> (~ (X24 = a1)) -> (((X24 = a0) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a4 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> (~ asubq (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) (apow (asing (asing a1)))) -> asubq (asm (apow a2) (asing a1)) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (asm (asm a3 (asing a1)) (asing a2)) a1 -> asubq (asing a2) (asm (asm (apow a2) a2) (asing (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ (X24 = a2)) -> ain X24 (apow (asing a1))) -> (asm (asm (apow a2) (apow (asing a2))) (asing a1) = asm (apow a2) a2) -> (forall X24:set, ain X24 (apow a2) -> (~ (X24 = asing a1)) -> ain X24 a3) -> (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0) = aun (asing (asing a1)) (asing (asing (asing a1)))) -> (forall X24:set, ain X24 (asm a4 a2) -> (~ (X24 = a2)) -> ain X24 (asing a3)) -> asubq (aun a1 (asing a3)) (asm (asm a4 (asing a1)) (asing a2)) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm a4 a2)) -> asubq (asm (apow a2) (apow (asing a1))) (aun a4 (asing (apow a2))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) = apow a2) -> asubq (aint (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) (asm a3 (asing a1)) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal4 (aun (asing a2) (apow (asing a2)))) -> (~ aal5 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2)))))) -> (~ aal5 (aun a3 (asing (apow a2)))) -> (~ aal5 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> aal3 (aun (asing a2) (apow (asing a2))) -> aal4 (aun a3 (asing (asm (apow a2) a2))) -> aal4 (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> aal6 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> aal5 (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) -> aex2 (aint (aun a4 (asing (apow a2))) (asm (apow a2) (apow (asing a2)))) -> aex2 (asm (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) (asing a0)) -> aex3 (asm a4 (asing a1)) -> aex3 (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> aex3 (asm (aun (asing (asing a1)) a4) (aun (asing a2) (apow (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (~ aal4 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, ain X24 (apow (asing a2)) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> aal6 X24 -> aal6 X25).
admit.
Qed.

Theorem conj_AbstrHF_TMbuKvCwqRoTZ9mr2usyFBFJnjtnbvgeoJV: (forall X24:set, (aex2 X24 <-> (aal2 X24 /\ (~ aal3 X24)))) -> (forall X24:set, forall X25:set, asubq X24 X25 -> asubq X25 X24 -> (X24 = X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 X24 -> ain X26 X25 -> ain X26 (aint X24 X25)) -> (forall X24:set, asubq X24 a0 -> (X24 = a0)) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> ain X26 X24 -> (~ ain X26 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> asubq a1 (asing a0) -> (forall X24:set, forall X25:set, aal5 (aun X24 X25) -> (aal3 X24 \/ aal3 X25)) -> (forall X24:set, forall X25:set, forall X26:set, ain X26 (aun X24 X25) -> aal4 (asm (aun X24 X25) (asing X26)) -> (aal2 X24 \/ aal4 X25)) -> (forall X24:set, forall X25:set, aal5 X24 -> (~ aal3 (aint X24 X25)) -> aal3 (asm X24 X25)) -> (~ (a0 = a2)) -> ain a1 (asm (apow a2) (asing a2)) -> (~ asubq a2 (asing a1)) -> (~ ain (asm a3 (asing a1)) (asing (asing a1))) -> (~ ain (asm a3 (asing a1)) (apow a2)) -> (forall X24:set, ain X24 (asing a2) -> (X24 = a2)) -> (~ ain (apow a2) a3) -> adisjoint (asm (apow a2) a2) (apow (asing a2)) -> asubq (asm (apow a2) a2) (asm (apow a2) (asing a1)) -> (~ ain (asm (apow a2) (apow (asing a2))) (asm (apow a2) (asing a1))) -> ain (asing (asing a1)) (apow (asing (asing a1))) -> ain a0 (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) -> ain (asing a1) (aun (aun (asing a1) (asing (asing a1))) (apow (asing (asing a1)))) -> ain a1 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> ain (asing a2) (apow (asing a2)) -> ain a1 (aun (asing a1) (apow (asing a2))) -> (~ ain a3 (aun (apow a2) (asing (asing a2)))) -> ain a0 (apow (asm a3 (asing a1))) -> (~ ain (asing (asing a1)) a4) -> ain a3 (asm a4 a2) -> ain a0 (aun (apow (asing a2)) (asing a3)) -> (~ ain (asing a1) (aun (asing (asing a2)) a4)) -> ain a3 (aun (asing (asing a2)) a4) -> ain (asm (apow a2) a2) (aun a3 (asing (asm (apow a2) a2))) -> ain a0 (aun a2 (asing (apow a2))) -> ain a0 (aun a3 (asing (apow a2))) -> ain (apow a2) (aun a3 (asing (apow a2))) -> ain a0 (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> ain (apow a2) (aun (apow (asing a2)) (asing (apow a2))) -> (~ ain (asm a3 (asing a1)) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> adisjoint a2 (aun (asing a3) (asing (apow a2))) -> (~ ain (asing a2) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> ((((X24 = a0) \/ (X24 = asing a1)) \/ (X24 = a2)) \/ (X24 = asing (asing a1)))) -> asubq (aun a3 (asing (asing a2))) (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> asubq (apow (asing (asing a1))) (aun (asing (asing (asing a1))) (aun a1 (asing (apow a2)))) -> asubq (asm (apow (apow (asing a1))) (asing (apow (asing a1)))) (aun (asing (asing (asing a1))) (aun a2 (asing (apow a2)))) -> asubq (asm (apow a2) (asing a2)) (aun (asm (apow a2) (asing a2)) (asing (asm (apow a2) (apow (asing a2))))) -> (~ asubq (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) (aun a4 (asing (apow a2)))) -> (asm a2 (asing a0) = asing a1) -> (asm a2 (asing a1) = a1) -> asubq (asm (asm (apow a2) (asing a2)) (asing a0)) (aun (asing a1) (asing (asing a1))) -> (asm (asm (apow a2) (asing a2)) (asing a0) = aun (asing a1) (asing (asing a1))) -> (asm (asm (apow a2) (asing a2)) (asing (asing a1)) = a2) -> asubq (asm (asm (apow a2) (apow (asing a1))) (asing a2)) (asing a1) -> asubq (asm a3 (asing a1)) (asm (asm (apow a2) (asing a1)) (asing (asing a1))) -> asubq (asm (asm (apow a2) (apow (asing a2))) (asing (asing a1))) (asm (apow a2) (apow (asing a1))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a2)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = asing (asing a1))) -> ain X24 (apow a2)) -> asubq (apow a2) (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing (asing (asing a1)))) -> (asm (asm a4 a2) (asing a2) = asing a3) -> (forall X24:set, ain X24 (asm a4 (asing a1)) -> (~ (X24 = a0)) -> ain X24 (asm a4 a2)) -> asubq (asm (asm a4 (asing a1)) (asing a3)) (asm a3 (asing a1)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> asubq (asing a2) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) -> (aint (aun (apow a2) (asing (asing a2))) (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) = aun (asing a2) (apow (asing a2))) -> (aint (aun (aun (asing a2) (apow (asing a2))) (asing (asm a3 (asing a1)))) (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> asubq (aint (aun (apow a2) (asing (asing a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (forall X24:set, ain X24 a4 -> (~ ain X24 a2) -> (~ aal2 (asm (asm a4 a2) (asing X24)))) -> (forall X24:set, ain X24 (asm (apow a2) (asing a1)) -> (~ aal3 (asm (asm (apow a2) (asing a1)) (asing X24)))) -> (~ aal6 (aun (apow a2) (asing (asing a2)))) -> (~ aal6 (aun (apow a2) (asing (apow a2)))) -> aal2 (asm (apow a2) (apow (asing a1))) -> aal5 (aun (asing (asing a1)) a4) -> aex2 (aun (asing (asm (apow a2) (apow (asing a2)))) (asing (apow a2))) -> aex2 (asm (asm a4 (asing a2)) (asing a1)) -> aex2 (asm (asm a4 (asing a1)) (asing a3)) -> aex3 (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> aex5 (aun (apow a2) (asing (apow a2))) -> (~ aal4 (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing (asing a2)))) -> (forall X24:set, ain X24 a4 -> (~ ain X24 (asing a0)) -> ain X24 (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) -> ain X24 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1)))) -> asubq (asm (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) (asing a0)) (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> aex5 (asm (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) (asing a1)) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> ain X24 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (~ ain X24 (asing a1)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2))))) -> asubq (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing (apow a2))) (aun a3 (asing (asing a2))) -> (forall X24:set, ain X24 (aun (apow (asing a2)) (asing (apow a2))) -> (~ aal5 (asm (aint (aun (asm (apow a2) (apow (asing a2))) (aun (apow (asing a2)) (asing (apow a2)))) (aun (asing (asing a2)) (aun a4 (asing (apow a2))))) (asing X24)))) -> asubq (aun a4 (asing (apow a2))) (aun (asing (asing a1)) (aun a4 (asing (apow a2)))).
admit.
Qed.

Theorem conj_AbstrHF_TMVadejEwVPWQeoChMX7BZdYC6FL1S2s21U: (forall X24:set, forall X25:set, (adisjoint X24 X25 <-> (aint X24 X25 = a0))) -> (forall X24:set, forall X25:set, forall X26:set, (ain X26 (aint X24 X25) <-> (ain X26 X24 /\ ain X26 X25))) -> (forall X24:set, forall X25:set, ain X25 (apow X24) -> asubq X25 X24) -> (forall X24:set, forall X25:set, asubq X25 (aun X24 X25)) -> (forall X24:set, forall X25:set, forall X26:set, (forall X27:set, ain X27 X24 -> ain X27 X25 -> ain X27 X26) -> asubq (aint X24 X25) X26) -> (forall X24:set, forall X25:set, forall X26:set, adisjoint X24 X25 -> asubq X26 X25 -> adisjoint X24 X26) -> (forall X24:set, forall X25:set, forall X26:set, ain X25 X24 -> ain X26 X24 -> (~ asubq X26 X25) -> aal2 X24) -> (forall X24:set, forall X25:set, ain X25 X24 -> (~ aal4 X24) -> (~ aal3 (asm X24 (asing X25)))) -> (forall X24:set, forall X25:set, adisjoint X24 X25 -> aal2 X25 -> (forall X26:set, ain X26 X25 -> (~ asubq (aun X24 X25) (aun X24 (asing X26))))) -> (forall X24:set, forall X25:set, (~ aal4 X24) -> (~ aal5 (aun X24 (asing X25)))) -> (forall X24:set, forall X25:set, forall X26:set, asubq X26 (aun X24 X25) -> (forall X27:set, ain X27 X24 -> (~ ain X27 X26) -> aal4 X26 -> (aal3 X24 \/ aal3 X25))) -> (forall X24:set, ain a0 X24 -> asubq a1 X24) -> (~ ain a0 (asing a1)) -> (~ ain a1 (asing (asing a1))) -> (forall X24:set, ain X24 (apow (asing a1)) -> ((X24 = a0) \/ (X24 = asing a1))) -> (~ ain (asing a2) (apow a2)) -> (~ (a2 = asm (apow a2) a2)) -> (~ asubq (apow a2) (asing a2)) -> ain (asing (asing a1)) (asm (apow (aun (asing a1) (asing (asing a1)))) (asing (aun (asing a1) (asing (asing a1))))) -> ain (aun (asing a1) (asing (asing a1))) (asing (aun (asing a1) (asing (asing a1)))) -> (~ ain (asing a2) a4) -> (~ ain a1 (aun (asing a2) (apow (asing a2)))) -> (~ ain (asing a1) (aun (asing a2) (apow (asing a2)))) -> ain a2 (aun (asing a2) (apow (asing a2))) -> ain a3 (asm a4 (asing a1)) -> ain a1 (asm (aun (asing (asing a2)) a4) (asm (apow a2) (asing a1))) -> (~ ain (asm (apow a2) a2) (aun (asing (asing a2)) a4)) -> ain (asm (apow a2) (apow (asing a2))) (asing (asm (apow a2) (apow (asing a2)))) -> ain (asm (apow a2) (apow (asing a2))) (aun (asm (apow a2) (asing a1)) (asing (asm (apow a2) (apow (asing a2))))) -> ain a1 (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> ain a1 (aun (asing (asing a1)) (aun a4 (asing (apow a2)))) -> ain a2 (aun (asing (asing a2)) (aun a4 (asing (apow a2)))) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (((X24 = a1) \/ (X24 = asing a1)) \/ (X24 = a2))) -> (forall X24:set, ain X24 (asm a4 (apow (asing a2))) -> (((X24 = a1) \/ (X24 = a2)) \/ (X24 = a3))) -> asubq a3 (aun (asm (apow a2) (apow (asing a1))) (apow (asing (asing a1)))) -> (~ asubq (aun (apow a2) (asing (apow a2))) (apow a2)) -> (forall X24:set, ain X24 (asm (apow a2) (asing a2)) -> (~ (X24 = a0)) -> ain X24 (aun (asing a1) (asing (asing a1)))) -> asubq a2 (asm (asm (apow a2) (asing a2)) (asing (asing a1))) -> asubq (asm (asm a3 (asing a1)) (asing a0)) (asing a2) -> (forall X24:set, ain X24 (asm (apow a2) (apow (asing a2))) -> (~ (X24 = a1)) -> ain X24 (asm (apow a2) a2)) -> (forall X24:set, ain X24 (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) -> (~ (X24 = a1)) -> ain X24 (aun (asm (apow a2) a2) (apow (asing (asing a1))))) -> asubq (asm (aun (asm (apow a2) (apow (asing a2))) (apow (asing (asing a1)))) (asing a1)) (aun (asm (apow a2) a2) (apow (asing (asing a1)))) -> asubq (asing a3) (asm (asm a4 a2) (asing a2)) -> asubq (asm (asm a4 (apow (asing a2))) (asing a2)) (aun (asing a1) (asing a3)) -> asubq (asm (apow a2) (apow (asing a1))) (asm (asm a4 (apow (asing a2))) (asing a3)) -> (aint (aun (apow a2) (asing (asing a2))) (aun a4 (asing (asm (apow a2) a2))) = a3) -> (aint (aun (apow a2) (asing (asing a2))) (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) = aun (asing a2) (apow (asing a2))) -> (forall X24:set, ain X24 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> ain X24 (aun (asing a2) (aun (apow (asing a2)) (asing (apow a2)))) -> ain X24 (aun (asing a2) (apow (asing a2)))) -> asubq (aint (aun (apow a2) (asing (apow a2))) (asm a4 (asing a1))) (asm a3 (asing a1)) -> (~ aal2 (asing a1)) -> (~ aal3 (asm (apow a2) (apow (asing a1)))) -> (~ aal7 (aun (asing (asing a1)) (aun (asing (asing a2)) a4))) -> aal2 (asm a3 (asing a1)) -> aal5 (aun (asing (asing (asing a1))) a4) -> aal6 (aun (asing (asing a1)) (aun (asing (asing a2)) a4)) -> aex3 (asm (apow a2) (asing a2)) -> aex3 (asm (apow a2) (asing (asing a1))) -> aex4 (aint (aun (aun (asing a1) (asing (asing a1))) (aun (apow (asing a2)) (asing a3))) (aun (asing (asing a2)) a4)) -> asubq (aun (apow (asing a2)) (asing (apow a2))) (aun (asing a1) (aun (apow (asing a2)) (asing (apow a2)))) -> (forall X24:set, forall X25:set, (ain X25 (apow X24) <-> asubq X25 X24)).
admit.
Qed.

End AbstrHF.
